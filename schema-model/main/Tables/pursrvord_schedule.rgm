table "main"."pursrvord_schedule" {
  primaryKey = {
    columns = [
      "code"
    ]
    name = "p_pursrvord_schedule_code"
    objectType = primaryKey
  }
  columns = (
    column "code" {
      type = bigint
      null = NOT NULL
    }
    column "pursrvordmain_code" {
      type = bigint
      null = NOT NULL
    }
    column "pursrvorddet_code" {
      type = bigint
      null = NOT NULL
    }
    column "servicecode" {
      type = bigint
      null = NOT NULL
    }
    column "admsite_code" {
      type = bigint
      null = NOT NULL
    }
    column "dtfr" {
      type = timestamp(0) without time zone
      null = NOT NULL
    }
    column "dtto" {
      type = timestamp(0) without time zone
      null = NOT NULL
    }
    column "duedt" {
      type = timestamp(0) without time zone
      null = NOT NULL
    }
    column "ordqty" {
      type = numeric(20,3)
    }
    column "rate" {
      type = numeric(20,2)
    }
    column "ordamt" {
      type = numeric(20,2)
    }
    column "invqty" {
      type = numeric(20,3)
    }
    column "invamt" {
      type = numeric(20,2)
    }
    column "cnlqty" {
      type = numeric(20,3)
    }
    column "cnlamt" {
      type = numeric(20,2)
    }
    column "remarks" {
      type = character varying(500)
    }
    column "cnl_time" {
      type = timestamp(0) without time zone
    }
    column "cnl_ecode" {
      type = bigint
    }
    column "desc1" {
      type = character varying(100)
    }
    column "desc2" {
      type = character varying(100)
    }
    column "desc3" {
      type = character varying(100)
    }
    column "desc4" {
      type = character varying(100)
    }
    column "desc5" {
      type = character varying(100)
    }
    column "desc6" {
      type = character varying(100)
    }
    column "desc7" {
      type = character varying(100)
    }
    column "cnlremarks" {
      type = character varying(500)
    }
    column "dataversion" {
      type = bigint
      null = NOT NULL
    }
  )
}

foreignKey "main"."pursrvord_schedule"."r_pursrvord_sch_admsitecode" {
  columns = [
    "admsite_code"
  ]
  referencedTable = "main"."admsite"
  referencedColumns = [
    "code"
  ]
}

foreignKey "main"."pursrvord_schedule"."r_pursrvord_sch_pursrvorddt_cd" {
  columns = [
    "pursrvorddet_code"
  ]
  referencedTable = "main"."pursrvorddet"
  referencedColumns = [
    "code"
  ]
}

foreignKey "main"."pursrvord_schedule"."r_pursrvord_sch_pursrvordmn_cd" {
  columns = [
    "pursrvordmain_code"
  ]
  referencedTable = "main"."pursrvordmain"
  referencedColumns = [
    "ordcode"
  ]
}

foreignKey "main"."pursrvord_schedule"."r_pursrvord_sch_servicecd" {
  columns = [
    "servicecode"
  ]
  referencedTable = "main"."purservice"
  referencedColumns = [
    "servicecode"
  ]
}

foreignKey "main"."pursrvord_schedule"."r_pursrvord_schedule_cnl_ecode" {
  columns = [
    "cnl_ecode"
  ]
  referencedTable = "main"."hrdemp"
  referencedColumns = [
    "ecode"
  ]
}

index "main"."pursrvord_schedule_lk01" {
  table = "main"."pursrvord_schedule"
  type = btree
  columns = <
    {
      definition = admsite_code
    }

  >
  isUnique = False
}

index "main"."pursrvord_schedule_lk02" {
  table = "main"."pursrvord_schedule"
  type = btree
  columns = <
    {
      definition = cnl_ecode
    }

  >
  isUnique = False
}

index "main"."pursrvord_schedule_lk03" {
  table = "main"."pursrvord_schedule"
  type = btree
  columns = <
    {
      definition = pursrvorddet_code
    }

  >
  isUnique = False
}

index "main"."pursrvord_schedule_lk04" {
  table = "main"."pursrvord_schedule"
  type = btree
  columns = <
    {
      definition = pursrvordmain_code
    }

  >
  isUnique = False
}

index "main"."pursrvord_schedule_lk05" {
  table = "main"."pursrvord_schedule"
  type = btree
  columns = <
    {
      definition = servicecode
    }

  >
  isUnique = False
}

trigger "main"."pursrvord_schedule"."t_pursrvord_sch_dataversion" {
  timing = BEFORE
  events = [
    UPDATE
    INSERT
  ]
  level = ROW
  function = main.trigger_fct_t_pursrvord_sch_dataversion
  functionArguments = [
  ]
  constraint = False
}

