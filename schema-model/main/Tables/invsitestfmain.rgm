table "main"."invsitestfmain" {
  primaryKey = {
    columns = [
      "stfcode"
    ]
    name = "p_invsitestfmain_pk"
    objectType = primaryKey
  }
  columns = (
    column "stfcode" {
      type = bigint
      null = NOT NULL
    }
    column "stfno" {
      type = bigint
    }
    column "stfdt" {
      type = timestamp(0) without time zone
      null = NOT NULL
    }
    column "docno" {
      type = character varying(100)
    }
    column "docdt" {
      type = timestamp(0) without time zone
    }
    column "scheme_docno" {
      type = character varying(25)
    }
    column "doccode" {
      type = bigint
      null = NOT NULL
    }
    column "slcode" {
      type = bigint
      null = NOT NULL
    }
    column "admsite_code_out" {
      type = bigint
      null = NOT NULL
    }
    column "issecondary_out" {
      type = character(1)
      null = NOT NULL
    }
    column "store_loccode_out" {
      type = bigint
      null = NOT NULL
    }
    column "admsite_code_in" {
      type = bigint
      null = NOT NULL
    }
    column "issecondary_in" {
      type = character(1)
      null = NOT NULL
    }
    column "store_loccode_in" {
      type = bigint
      null = NOT NULL
    }
    column "remarks" {
      type = character varying(500)
    }
    column "ycode" {
      type = bigint
      null = NOT NULL
    }
    column "ecode" {
      type = bigint
      null = NOT NULL
    }
    column "time" {
      type = timestamp(0) without time zone
      null = NOT NULL
    }
    column "last_access_ecode" {
      type = bigint
    }
    column "last_access_time" {
      type = timestamp(0) without time zone
    }
    column "admou_code" {
      type = bigint
    }
    column "admou_code_in" {
      type = bigint
    }
    column "dataversion" {
      type = bigint
      null = NOT NULL
    }
    column "entry_source" {
      type = character varying(25)
      null = NOT NULL
    }
    column "udfstring01" {
      type = character varying(500)
    }
    column "udfstring02" {
      type = character varying(500)
    }
    column "udfstring03" {
      type = character varying(500)
    }
    column "udfstring04" {
      type = character varying(500)
    }
    column "udfstring05" {
      type = character varying(500)
    }
    column "udfstring06" {
      type = character varying(500)
    }
    column "udfstring07" {
      type = character varying(500)
    }
    column "udfstring08" {
      type = character varying(500)
    }
    column "udfstring09" {
      type = character varying(500)
    }
    column "udfstring10" {
      type = character varying(500)
    }
    column "udfnum01" {
      type = numeric(20,3)
    }
    column "udfnum02" {
      type = numeric(20,3)
    }
    column "udfnum03" {
      type = numeric(20,3)
    }
    column "udfnum04" {
      type = numeric(20,3)
    }
    column "udfnum05" {
      type = numeric(20,3)
    }
    column "udfdate01" {
      type = timestamp(0) without time zone
    }
    column "udfdate02" {
      type = timestamp(0) without time zone
    }
    column "udfdate03" {
      type = timestamp(0) without time zone
    }
    column "udfdate04" {
      type = timestamp(0) without time zone
    }
    column "udfdate05" {
      type = timestamp(0) without time zone
    }
  )
}

foreignKey "main"."invsitestfmain"."r_invsitestfmain_admou_code_in" {
  columns = [
    "admou_code_in"
  ]
  referencedTable = "main"."admou"
  referencedColumns = [
    "code"
  ]
}

foreignKey "main"."invsitestfmain"."r_invsitestfmain_doccode" {
  columns = [
    "doccode"
  ]
  referencedTable = "main"."admdocscheme"
  referencedColumns = [
    "doccode"
  ]
}

foreignKey "main"."invsitestfmain"."r_invsitestfmain_ecode" {
  columns = [
    "ecode"
  ]
  referencedTable = "main"."hrdemp"
  referencedColumns = [
    "ecode"
  ]
}

foreignKey "main"."invsitestfmain"."r_invsitestfmain_lecode" {
  columns = [
    "last_access_ecode"
  ]
  referencedTable = "main"."hrdemp"
  referencedColumns = [
    "ecode"
  ]
}

foreignKey "main"."invsitestfmain"."r_invsitestfmain_loc_i" {
  columns = [
    "store_loccode_in"
  ]
  referencedTable = "main"."invloc"
  referencedColumns = [
    "loccode"
  ]
}

foreignKey "main"."invsitestfmain"."r_invsitestfmain_loc_o" {
  columns = [
    "store_loccode_out"
  ]
  referencedTable = "main"."invloc"
  referencedColumns = [
    "loccode"
  ]
}

foreignKey "main"."invsitestfmain"."r_invsitestfmain_oucode" {
  columns = [
    "admou_code"
  ]
  referencedTable = "main"."admou"
  referencedColumns = [
    "code"
  ]
}

foreignKey "main"."invsitestfmain"."r_invsitestfmain_site_i" {
  columns = [
    "admsite_code_in"
  ]
  referencedTable = "main"."admsite"
  referencedColumns = [
    "code"
  ]
}

foreignKey "main"."invsitestfmain"."r_invsitestfmain_site_o" {
  columns = [
    "admsite_code_out"
  ]
  referencedTable = "main"."admsite"
  referencedColumns = [
    "code"
  ]
}

foreignKey "main"."invsitestfmain"."r_invsitestfmain_slcode" {
  columns = [
    "slcode"
  ]
  referencedTable = "main"."finsl"
  referencedColumns = [
    "slcode"
  ]
}

foreignKey "main"."invsitestfmain"."r_invsitestfmain_ycode" {
  columns = [
    "ycode"
  ]
  referencedTable = "main"."admyear"
  referencedColumns = [
    "ycode"
  ]
}

index "main"."invsitestfmain_lk01" {
  table = "main"."invsitestfmain"
  type = btree
  columns = <
    {
      definition = admou_code
    }

  >
  isUnique = False
}

index "main"."invsitestfmain_lk02" {
  table = "main"."invsitestfmain"
  type = btree
  columns = <
    {
      definition = admsite_code_in
    }

  >
  isUnique = False
}

index "main"."invsitestfmain_lk03" {
  table = "main"."invsitestfmain"
  type = btree
  columns = <
    {
      definition = admsite_code_out
    }

  >
  isUnique = False
}

index "main"."invsitestfmain_lk04" {
  table = "main"."invsitestfmain"
  type = btree
  columns = <
    {
      definition = doccode
    }

  >
  isUnique = False
}

index "main"."invsitestfmain_lk05" {
  table = "main"."invsitestfmain"
  type = btree
  columns = <
    {
      definition = ecode
    }

  >
  isUnique = False
}

index "main"."invsitestfmain_lk06" {
  table = "main"."invsitestfmain"
  type = btree
  columns = <
    {
      definition = last_access_ecode
    }

  >
  isUnique = False
}

index "main"."invsitestfmain_lk07" {
  table = "main"."invsitestfmain"
  type = btree
  columns = <
    {
      definition = slcode
    }

  >
  isUnique = False
}

index "main"."invsitestfmain_lk08" {
  table = "main"."invsitestfmain"
  type = btree
  columns = <
    {
      definition = store_loccode_in
    }

  >
  isUnique = False
}

index "main"."invsitestfmain_lk09" {
  table = "main"."invsitestfmain"
  type = btree
  columns = <
    {
      definition = store_loccode_out
    }

  >
  isUnique = False
}

index "main"."invsitestfmain_lk10" {
  table = "main"."invsitestfmain"
  type = btree
  columns = <
    {
      definition = ycode
    }

  >
  isUnique = False
}

index "main"."invsitestfmain_lk11" {
  table = "main"."invsitestfmain"
  type = btree
  columns = <
    {
      definition = admou_code_in
    }

  >
  isUnique = False
}

trigger "main"."invsitestfmain"."t_invsitestfmain" {
  timing = BEFORE
  events = [
    DELETE
    UPDATE
    INSERT
  ]
  level = ROW
  function = main.trigger_fct_t_invsitestfmain
  functionArguments = [
  ]
  constraint = False
  updateColumns = [
    stfcode
    stfno
    stfdt
    scheme_docno
    doccode
    slcode
    admsite_code_out
    issecondary_out
    store_loccode_out
    admsite_code_in
    issecondary_in
    store_loccode_in
    ycode
    admou_code
  ]
}

trigger "main"."invsitestfmain"."t_invsitestfmain_dataversion" {
  timing = BEFORE
  events = [
    UPDATE
    INSERT
  ]
  level = ROW
  function = main.trigger_fct_t_invsitestfmain_dataversion
  functionArguments = [
  ]
  constraint = False
}

