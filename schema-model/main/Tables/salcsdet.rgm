table "main"."salcsdet" {
  primaryKey = {
    columns = [
      "code"
    ]
    name = "salcsdet_pk"
    objectType = primaryKey
  }
  columns = (
    column "cscode" {
      type = bigint
    }
    column "icode" {
      type = character varying(9)
      null = NOT NULL
    }
    column "qty" {
      type = numeric(20,3)
    }
    column "mrp" {
      type = numeric(20,3)
    }
    column "rate" {
      type = numeric(20,3)
    }
    column "grsamt" {
      type = numeric(20,2)
    }
    column "discount" {
      type = numeric(20,2)
    }
    column "netamt" {
      type = numeric(20,2)
    }
    column "taxamt" {
      type = numeric(20,3)
    }
    column "site_costrate" {
      type = numeric(20,3)
    }
    column "site_costamt" {
      type = numeric(20,2)
    }
    column "costrate" {
      type = numeric(20,3)
    }
    column "remarks" {
      type = character varying(500)
    }
    column "code" {
      type = bigint
      null = NOT NULL
    }
    column "taxdetcode" {
      type = bigint
    }
    column "taxpercent_old" {
      type = numeric(5,2)
    }
    column "taxableamt" {
      type = numeric(20,2)
    }
    column "taxdescription" {
      type = character varying(100)
    }
    column "psite_stockpoint_code" {
      type = character varying(50)
    }
    column "promoamt" {
      type = numeric(20,2)
    }
    column "idiscountamt" {
      type = numeric(20,2)
    }
    column "mdiscountamt" {
      type = numeric(20,2)
    }
    column "lpdiscountamt" {
      type = numeric(20,2)
    }
    column "extaxamt" {
      type = numeric(20,2)
    }
    column "taxpercent" {
      type = numeric(20,3)
    }
    column "shipchg" {
      type = numeric(20,2)
    }
    column "gwchg" {
      type = numeric(20,2)
    }
    column "codchg" {
      type = numeric(20,2)
    }
    column "taxregime" {
      type = character(1)
    }
    column "hsn_sac_code" {
      type = character varying(20)
    }
    column "igstrate" {
      type = numeric(24,3)
    }
    column "igstamt" {
      type = numeric(20,2)
    }
    column "cgstrate" {
      type = numeric(24,3)
    }
    column "cgstamt" {
      type = numeric(20,2)
    }
    column "sgstrate" {
      type = numeric(24,3)
    }
    column "sgstamt" {
      type = numeric(20,2)
    }
    column "cessrate" {
      type = numeric(24,3)
    }
    column "cessamt" {
      type = numeric(20,2)
    }
    column "gl_cc_appl" {
      type = character(1)
      default = 'N'::bpchar
    }
    column "glcode" {
      type = bigint
    }
    column "slcode" {
      type = bigint
    }
    column "promocode" {
      type = character varying(50)
    }
    column "promono" {
      type = character varying(15)
    }
    column "promoname" {
      type = character varying(200)
    }
    column "promostartdate" {
      type = timestamp(0) without time zone
    }
    column "promoenddate" {
      type = timestamp(0) without time zone
    }
    column "intgref1" {
      type = character varying(500)
    }
    column "intgref2" {
      type = character varying(500)
    }
    column "intgref3" {
      type = character varying(500)
    }
    column "intgref4" {
      type = character varying(500)
    }
    column "memodiscountamt" {
      type = numeric(20,2)
    }
    column "memodiscounttype" {
      type = character(1)
    }
    column "memopromocode" {
      type = character varying(50)
    }
    column "memopromono" {
      type = character varying(15)
    }
    column "memopromoname" {
      type = character varying(200)
    }
    column "memopromostartdate" {
      type = timestamp(0) without time zone
    }
    column "memopromoenddate" {
      type = timestamp(0) without time zone
    }
    column "memopromoslabfrom" {
      type = bigint
    }
    column "memopromoslabto" {
      type = bigint
    }
    column "memodiscountdesc" {
      type = character varying(500)
    }
    column "memocouponcode" {
      type = character varying(15)
    }
    column "memocouponoffercode" {
      type = bigint
    }
    column "isdynamictax" {
      type = bigint
      default = 0
    }
    column "retailorderdet_code" {
      type = bigint
    }
    column "ref_salcsdet_code" {
      type = bigint
    }
    column "intg_orderdetid" {
      type = character varying(100)
    }
    column "intg_invoicedetid" {
      type = character varying(100)
    }
    column "intg_refinvoicedetid" {
      type = character varying(100)
    }
    column "othercharges" {
      type = numeric(20,3)
    }
    column "invbin_code" {
      type = bigint
    }
    column "invpicklistmain_code" {
      type = bigint
    }
    column "intgbatchid" {
      type = character varying(100)
    }
    column "intgbatchdetid" {
      type = character varying(100)
    }
    column "isdamaged" {
      type = bigint
      null = NOT NULL
      default = 0
    }
    column "issecondarysupply" {
      type = bigint
    }
    column "secondarysupplyparenticode" {
      type = character varying(9)
    }
    column "secondarysupplytaxpolicy" {
      type = character(1)
    }
    column "invbatch_serial_code" {
      type = bigint
    }
  )
}

foreignKey "main"."salcsdet"."r_salcsdet_glcode" {
  columns = [
    "glcode"
  ]
  referencedTable = "main"."fingl"
  referencedColumns = [
    "glcode"
  ]
}

foreignKey "main"."salcsdet"."r_salcsdet_post_slcode" {
  columns = [
    "slcode"
  ]
  referencedTable = "main"."finsl"
  referencedColumns = [
    "slcode"
  ]
}

foreignKey "main"."salcsdet"."r_salcsdet_psite_stkpt_code" {
  columns = [
    "psite_stockpoint_code"
  ]
  referencedTable = "main"."psite_stockpoint"
  referencedColumns = [
    "code"
  ]
}

foreignKey "main"."salcsdet"."salcsdet_r01" {
  columns = [
    "cscode"
  ]
  referencedTable = "main"."salcsmain"
  referencedColumns = [
    "cscode"
  ]
}

foreignKey "main"."salcsdet"."salcsdet_r02" {
  columns = [
    "icode"
  ]
  referencedTable = "main"."invitem"
  referencedColumns = [
    "icode"
  ]
}

foreignKey "main"."salcsdet"."salcsdet_r03" {
  columns = [
    "invpicklistmain_code"
  ]
  referencedTable = "main"."invpicklistmain"
  referencedColumns = [
    "code"
  ]
}

foreignKey "main"."salcsdet"."salcsdet_r05" {
  columns = [
    "secondarysupplyparenticode"
  ]
  referencedTable = "main"."invitem"
  referencedColumns = [
    "icode"
  ]
}

index "main"."salcsdet_lk01" {
  table = "main"."salcsdet"
  type = btree
  columns = <
    {
      definition = cscode
    }

  >
  isUnique = False
}

index "main"."salcsdet_lk02" {
  table = "main"."salcsdet"
  type = btree
  columns = <
    {
      definition = icode
    }

  >
  isUnique = False
}

index "main"."salcsdet_lk03" {
  table = "main"."salcsdet"
  type = btree
  columns = <
    {
      definition = psite_stockpoint_code
    }

  >
  isUnique = False
}

index "main"."salcsdet_lk04" {
  table = "main"."salcsdet"
  type = btree
  columns = <
    {
      definition = glcode
    }

  >
  isUnique = False
}

index "main"."salcsdet_lk05" {
  table = "main"."salcsdet"
  type = btree
  columns = <
    {
      definition = slcode
    }

  >
  isUnique = False
}

index "main"."salcsdet_lk06" {
  table = "main"."salcsdet"
  type = btree
  columns = <
    {
      definition = intg_refinvoicedetid
    }

  >
  isUnique = False
}

index "main"."salcsdet_lk07" {
  table = "main"."salcsdet"
  type = btree
  columns = <
    {
      definition = invpicklistmain_code
    }

  >
  isUnique = False
}

index "main"."salcsdet_lk08" {
  table = "main"."salcsdet"
  type = btree
  columns = <
    {
      definition = secondarysupplyparenticode
    }

  >
  isUnique = False
}

trigger "main"."salcsdet"."t_salcsdet" {
  timing = AFTER
  events = [
    DELETE
    UPDATE
    INSERT
  ]
  level = ROW
  function = main.trigger_fct_t_salcsdet
  functionArguments = [
  ]
  constraint = False
  updateColumns = [
    icode
    qty
    mrp
    rate
    taxamt
  ]
}

trigger "main"."salcsdet"."t_salcsdet_bi" {
  timing = BEFORE
  events = [
    INSERT
  ]
  level = ROW
  function = main.trigger_fct_t_salcsdet_bi
  functionArguments = [
  ]
  constraint = False
}

trigger "main"."salcsdet"."t_salcsdet_glsl" {
  timing = BEFORE
  events = [
    DELETE
    UPDATE
    INSERT
  ]
  level = ROW
  function = main.trigger_fct_t_salcsdet_glsl
  functionArguments = [
  ]
  constraint = False
  updateColumns = [
    icode
    qty
    mrp
    rate
    netamt
    taxamt
    glcode
    slcode
  ]
}

