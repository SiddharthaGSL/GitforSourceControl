table "main"."purorddet" {
  primaryKey = {
    columns = [
      "code"
    ]
    name = "purorddet_pk"
    objectType = primaryKey
  }
  columns = (
    column "ordcode" {
      type = bigint
      null = NOT NULL
    }
    column "icode" {
      type = character varying(9)
      null = NOT NULL
    }
    column "ordqty" {
      type = numeric(20,3)
      default = 0
    }
    column "cnlqty" {
      type = numeric(20,3)
      default = 0
    }
    column "rate" {
      type = numeric(20,3)
      default = 0
    }
    column "rcqty" {
      type = numeric(20,3)
      default = 0
    }
    column "oqty" {
      type = numeric(20,3)
      default = NULL::numeric
    }
    column "rem" {
      type = character varying(500)
    }
    column "code" {
      type = bigint
      null = NOT NULL
    }
    column "discount" {
      type = numeric(20,2)
    }
    column "taxamt" {
      type = numeric(20,2)
    }
    column "taxchgper" {
      type = numeric(20,3)
    }
    column "dischgper" {
      type = numeric(20,3)
    }
    column "netamt" {
      type = numeric(20,2)
    }
    column "excisemain_code" {
      type = bigint
    }
    column "ex_basis" {
      type = character(1)
    }
    column "ex_effrate" {
      type = numeric(20,2)
    }
    column "ex_abtfactor" {
      type = numeric(20,3)
    }
    column "ex_dutyfactor" {
      type = numeric(20,3)
    }
    column "ex_cessfactor" {
      type = numeric(20,3)
    }
    column "ex_roundoff" {
      type = bigint
    }
    column "ex_appamt" {
      type = numeric(20,2)
    }
    column "ex_dutyamt" {
      type = numeric(20,2)
    }
    column "ex_cessamt" {
      type = numeric(20,2)
    }
    column "rsp" {
      type = numeric(20,3)
    }
    column "invsetmain_code" {
      type = bigint
    }
    column "intgcode" {
      type = character(3)
    }
    column "intg_stg_id" {
      type = character varying(50)
    }
    column "ex_applicable_from" {
      type = numeric(10,2)
    }
    column "tolerance" {
      type = numeric(5,2)
    }
    column "dataversion" {
      type = bigint
      null = NOT NULL
    }
  )
}

foreignKey "main"."purorddet"."fk_purorddet_setcode" {
  columns = [
    "invsetmain_code"
  ]
  referencedTable = "main"."invsetmain"
  referencedColumns = [
    "setcode"
  ]
}

foreignKey "main"."purorddet"."purorddet_excisemain_code_r01" {
  columns = [
    "excisemain_code"
  ]
  referencedTable = "main"."excisemain"
  referencedColumns = [
    "code"
  ]
}

foreignKey "main"."purorddet"."r_purorddet_icode" {
  columns = [
    "icode"
  ]
  referencedTable = "main"."invitem"
  referencedColumns = [
    "icode"
  ]
}

foreignKey "main"."purorddet"."r_purorddet_ordcode" {
  columns = [
    "ordcode"
  ]
  referencedTable = "main"."purordmain"
  referencedColumns = [
    "ordcode"
  ]
}

index "main"."purorddet_lk01" {
  table = "main"."purorddet"
  type = btree
  columns = <
    {
      definition = icode
    }

  >
  isUnique = False
}

index "main"."purorddet_lk02" {
  table = "main"."purorddet"
  type = btree
  columns = <
    {
      definition = ordcode
    }

  >
  isUnique = False
}

index "main"."purorddet_lk03" {
  table = "main"."purorddet"
  type = btree
  columns = <
    {
      definition = excisemain_code
    }

  >
  isUnique = False
}

index "main"."u_purorddet_ord_icode_set_rate" {
  table = "main"."purorddet"
  type = btree
  columns = <
    {
      definition = ordcode
    }

    {
      definition = icode
    }

    {
      definition = rate
    }

    {
      definition = invsetmain_code
    }

  >
  isUnique = True
}

trigger "main"."purorddet"."t_purorddet_bi" {
  timing = BEFORE
  events = [
    INSERT
  ]
  level = ROW
  function = main.trigger_fct_t_purorddet_bi
  functionArguments = [
  ]
  constraint = False
}

trigger "main"."purorddet"."t_purorddet_dataversion" {
  timing = BEFORE
  events = [
    UPDATE
    INSERT
  ]
  level = ROW
  function = main.trigger_fct_t_purorddet_dataversion
  functionArguments = [
  ]
  constraint = False
}

trigger "main"."purorddet"."t_purorddet_gsl" {
  timing = BEFORE
  events = [
    UPDATE
  ]
  level = ROW
  function = main.trigger_fct_t_purorddet_gsl
  functionArguments = [
  ]
  constraint = False
  updateColumns = [
    invsetmain_code
  ]
}

