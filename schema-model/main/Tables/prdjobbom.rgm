table "main"."prdjobbom" {
  primaryKey = {
    columns = [
      "code"
    ]
    name = "prdjobbom_pk"
    objectType = primaryKey
  }
  columns = (
    column "jobcode" {
      type = bigint
      null = NOT NULL
    }
    column "prdjobdet_code" {
      type = bigint
      null = NOT NULL
    }
    column "assembly_icode" {
      type = character varying(9)
      null = NOT NULL
    }
    column "operation_seq" {
      type = numeric(7,3)
      null = NOT NULL
    }
    column "lotcode" {
      type = bigint
    }
    column "component_icode" {
      type = character varying(9)
      null = NOT NULL
    }
    column "component_type" {
      type = character(1)
      null = NOT NULL
    }
    column "supply_type" {
      type = character(1)
      null = NOT NULL
      default = 'C'::bpchar
    }
    column "issue_loccode" {
      type = bigint
    }
    column "alt_grpcode" {
      type = bigint
    }
    column "ismandatory" {
      type = character(1)
      null = NOT NULL
      default = 'N'::bpchar
    }
    column "bom_qty" {
      type = numeric(24,7)
    }
    column "qty" {
      type = numeric(20,3)
    }
    column "issued_qty" {
      type = numeric(20,3)
    }
    column "return_qty" {
      type = numeric(20,3)
    }
    column "wastage_qty" {
      type = numeric(20,3)
    }
    column "cancel_qty" {
      type = numeric(20,3)
    }
    column "tolerance" {
      type = bigint
      default = NULL::numeric
    }
    column "remarks" {
      type = character varying(500)
    }
    column "code" {
      type = bigint
      null = NOT NULL
    }
    column "internal_iss_flag" {
      type = character(1)
      null = NOT NULL
      default = 'N'::bpchar
    }
    column "assembly_qty" {
      type = numeric(20,3)
    }
    column "shrinkage" {
      type = numeric(5,2)
      default = NULL::numeric
    }
    column "issue_assembly_item" {
      type = character(1)
      default = 'O'::bpchar
    }
    column "consumed_qty" {
      type = numeric(20,3)
    }
    column "short_excess_qty" {
      type = numeric(20,3)
    }
    column "ass_saitem_code" {
      type = bigint
    }
    column "com_saitem_code" {
      type = bigint
    }
    column "job_assembly_icode" {
      type = character varying(9)
    }
    column "alternate_cnl_qty" {
      type = numeric(20,3)
    }
    column "jrcdet_code" {
      type = bigint
    }
    column "dataversion" {
      type = bigint
      null = NOT NULL
    }
  )
}

foreignKey "main"."prdjobbom"."r_prdjobbom_a_icode" {
  columns = [
    "assembly_icode"
  ]
  referencedTable = "main"."invitem"
  referencedColumns = [
    "icode"
  ]
}

foreignKey "main"."prdjobbom"."r_prdjobbom_alt_grpcode" {
  columns = [
    "alt_grpcode"
  ]
  referencedTable = "main"."invgrp"
  referencedColumns = [
    "grpcode"
  ]
}

foreignKey "main"."prdjobbom"."r_prdjobbom_ass_saitem_code" {
  columns = [
    "ass_saitem_code"
  ]
  referencedTable = "main"."prd_saitem"
  referencedColumns = [
    "code"
  ]
}

foreignKey "main"."prdjobbom"."r_prdjobbom_c_icode" {
  columns = [
    "component_icode"
  ]
  referencedTable = "main"."invitem"
  referencedColumns = [
    "icode"
  ]
}

foreignKey "main"."prdjobbom"."r_prdjobbom_com_saitem_code" {
  columns = [
    "com_saitem_code"
  ]
  referencedTable = "main"."prd_saitem"
  referencedColumns = [
    "code"
  ]
}

foreignKey "main"."prdjobbom"."r_prdjobbom_i_loccode" {
  columns = [
    "issue_loccode"
  ]
  referencedTable = "main"."invloc"
  referencedColumns = [
    "loccode"
  ]
}

foreignKey "main"."prdjobbom"."r_prdjobbom_job_ass_icode" {
  columns = [
    "job_assembly_icode"
  ]
  referencedTable = "main"."invitem"
  referencedColumns = [
    "icode"
  ]
}

foreignKey "main"."prdjobbom"."r_prdjobbom_jobcode" {
  columns = [
    "jobcode"
  ]
  referencedTable = "main"."prdjobmain"
  referencedColumns = [
    "code"
  ]
}

foreignKey "main"."prdjobbom"."r_prdjobbom_jrcdet_code" {
  columns = [
    "jrcdet_code"
  ]
  referencedTable = "main"."prdjrcdet"
  referencedColumns = [
    "code"
  ]
}

foreignKey "main"."prdjobbom"."r_prdjobbom_lotcode" {
  columns = [
    "lotcode"
  ]
  referencedTable = "main"."prdlotmain"
  referencedColumns = [
    "code"
  ]
}

foreignKey "main"."prdjobbom"."r_prdjobbom_prdjobdet_code" {
  columns = [
    "prdjobdet_code"
  ]
  referencedTable = "main"."prdjobdet"
  referencedColumns = [
    "code"
  ]
}

index "main"."indx_jai_prdjobbom" {
  table = "main"."prdjobbom"
  type = btree
  columns = <
    {
      definition = job_assembly_icode
    }

  >
  isUnique = False
}

index "main"."prdjobbom_lk01" {
  table = "main"."prdjobbom"
  type = btree
  columns = <
    {
      definition = alt_grpcode
    }

  >
  isUnique = False
}

index "main"."prdjobbom_lk02" {
  table = "main"."prdjobbom"
  type = btree
  columns = <
    {
      definition = assembly_icode
    }

  >
  isUnique = False
}

index "main"."prdjobbom_lk03" {
  table = "main"."prdjobbom"
  type = btree
  columns = <
    {
      definition = component_icode
    }

  >
  isUnique = False
}

index "main"."prdjobbom_lk04" {
  table = "main"."prdjobbom"
  type = btree
  columns = <
    {
      definition = issue_loccode
    }

  >
  isUnique = False
}

index "main"."prdjobbom_lk05" {
  table = "main"."prdjobbom"
  type = btree
  columns = <
    {
      definition = jobcode
    }

  >
  isUnique = False
}

index "main"."prdjobbom_lk06" {
  table = "main"."prdjobbom"
  type = btree
  columns = <
    {
      definition = lotcode
    }

  >
  isUnique = False
}

index "main"."prdjobbom_lk07" {
  table = "main"."prdjobbom"
  type = btree
  columns = <
    {
      definition = prdjobdet_code
    }

  >
  isUnique = False
}

index "main"."prdjobbom_lk08" {
  table = "main"."prdjobbom"
  type = btree
  columns = <
    {
      definition = com_saitem_code
    }

  >
  isUnique = False
}

index "main"."prdjobbom_lk09" {
  table = "main"."prdjobbom"
  type = btree
  columns = <
    {
      definition = jrcdet_code
    }

  >
  isUnique = False
}

index "main"."prdjobbom_lk10" {
  table = "main"."prdjobbom"
  type = btree
  columns = <
    {
      definition = ass_saitem_code
    }

  >
  isUnique = False
}

index "main"."u_prdjobbom_jc_ai_lc_seq_ci" {
  table = "main"."prdjobbom"
  type = btree
  columns = <
    {
      definition = jobcode
    }

    {
      definition = prdjobdet_code
    }

    {
      definition = assembly_icode
    }

    {
      definition = ass_saitem_code
    }

    {
      definition = lotcode
    }

    {
      definition = operation_seq
    }

    {
      definition = component_icode
    }

    {
      definition = com_saitem_code
    }

    {
      definition = job_assembly_icode
    }

    {
      definition = jrcdet_code
    }

  >
  isUnique = True
}

trigger "main"."prdjobbom"."c_prdjobbom_composite1" {
  timing = AFTER
  events = [
    UPDATE
  ]
  level = ROW
  function = main.validate_composite_quantities
  functionArguments = [
  ]
  deferrable = INITIALLY DEFERRED
  constraint = True
}

trigger "main"."prdjobbom"."c_prdjobbom_composite2" {
  timing = AFTER
  events = [
    UPDATE
    INSERT
  ]
  level = ROW
  function = main.validate_composite2_quantities
  functionArguments = [
  ]
  deferrable = INITIALLY DEFERRED
  constraint = True
}

trigger "main"."prdjobbom"."t_a_prdjobbom" {
  timing = AFTER
  events = [
    DELETE
    UPDATE
    INSERT
  ]
  level = ROW
  function = main.trigger_fct_t_a_prdjobbom
  functionArguments = [
  ]
  constraint = False
  updateColumns = [
    jobcode
    prdjobdet_code
    assembly_icode
    operation_seq
    lotcode
    component_icode
    bom_qty
    qty
    assembly_qty
    ass_saitem_code
    com_saitem_code
    job_assembly_icode
  ]
}

trigger "main"."prdjobbom"."t_prdjobbom" {
  timing = BEFORE
  events = [
    DELETE
    UPDATE
    INSERT
  ]
  level = ROW
  function = main.trigger_fct_t_prdjobbom
  functionArguments = [
  ]
  constraint = False
  updateColumns = [
    jobcode
    prdjobdet_code
    assembly_icode
    operation_seq
    lotcode
    component_icode
    bom_qty
    qty
    cancel_qty
    assembly_qty
    ass_saitem_code
    com_saitem_code
    job_assembly_icode
  ]
}

trigger "main"."prdjobbom"."t_prdjobbom_bi" {
  timing = BEFORE
  events = [
    INSERT
  ]
  level = ROW
  function = main.trigger_fct_t_prdjobbom_bi
  functionArguments = [
  ]
  constraint = False
}

trigger "main"."prdjobbom"."t_prdjobbom_dataversion" {
  timing = BEFORE
  events = [
    UPDATE
    INSERT
  ]
  level = ROW
  function = main.trigger_fct_t_prdjobbom_dataversion
  functionArguments = [
  ]
  constraint = False
}

