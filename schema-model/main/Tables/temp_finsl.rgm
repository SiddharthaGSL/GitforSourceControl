table "main"."temp_finsl" {
  columns = (
    column "slcode" {
      type = bigint
    }
    column "slname" {
      type = character varying(100)
      null = NOT NULL
    }
    column "abbre" {
      type = character varying(10)
    }
    column "baddr" {
      type = character varying(500)
    }
    column "bdist" {
      type = character varying(100)
    }
    column "bctname" {
      type = character varying(100)
    }
    column "bpin" {
      type = character varying(12)
    }
    column "bph1" {
      type = character varying(50)
    }
    column "bph2" {
      type = character varying(50)
    }
    column "bph3" {
      type = character varying(50)
    }
    column "bph4" {
      type = character varying(50)
    }
    column "bfx1" {
      type = character varying(50)
    }
    column "bfx2" {
      type = character varying(50)
    }
    column "bemail" {
      type = character varying(100)
    }
    column "bwebsite" {
      type = character varying(100)
    }
    column "bcp" {
      type = character varying(100)
    }
    column "lstno" {
      type = character varying(100)
    }
    column "cstno" {
      type = character varying(100)
    }
    column "clscode" {
      type = bigint
      null = NOT NULL
    }
    column "glcode" {
      type = bigint
    }
    column "trpcode" {
      type = bigint
    }
    column "agcode" {
      type = bigint
    }
    column "agrate" {
      type = numeric(20,3)
    }
    column "intrate" {
      type = numeric(20,3)
    }
    column "crdays" {
      type = bigint
    }
    column "pan" {
      type = character varying(100)
    }
    column "rem" {
      type = character varying(500)
    }
    column "ext" {
      type = character(1)
    }
    column "taxapp" {
      type = character(1)
    }
    column "taxcode" {
      type = bigint
    }
    column "default_markup" {
      type = numeric(20,3)
    }
    column "round_off_markup" {
      type = numeric(20,3)
    }
    column "LIMIT" {
      type = character(1)
    }
    column "tdssrccode" {
      type = bigint
    }
    column "chqlabel" {
      type = character varying(100)
    }
    column "taxchgper" {
      type = numeric(20,3)
    }
    column "dischgper" {
      type = numeric(20,3)
    }
    column "whether_consignment" {
      type = character(1)
      null = NOT NULL
    }
    column "pricelistcode" {
      type = bigint
    }
    column "pricetype" {
      type = character(1)
      null = NOT NULL
    }
    column "outloccode" {
      type = bigint
    }
    column "inloccode" {
      type = bigint
    }
    column "saltermcode" {
      type = bigint
    }
    column "crcode" {
      type = bigint
    }
    column "cramt" {
      type = bigint
    }
    column "lgt_appl" {
      type = character(1)
    }
    column "default_markup_wsp" {
      type = numeric(20,3)
    }
    column "round_off_markup_wsp" {
      type = numeric(20,3)
    }
    column "limit_wsp" {
      type = character(1)
    }
    column "saddr" {
      type = character varying(500)
    }
    column "sdist" {
      type = character varying(100)
    }
    column "sctname" {
      type = character varying(100)
    }
    column "spin" {
      type = character varying(12)
    }
    column "sph1" {
      type = character varying(50)
    }
    column "sph2" {
      type = character varying(50)
    }
    column "sph3" {
      type = character varying(50)
    }
    column "sph4" {
      type = character varying(50)
    }
    column "sfx1" {
      type = character varying(50)
    }
    column "sfx2" {
      type = character varying(50)
    }
    column "semail" {
      type = character varying(100)
    }
    column "swebsite" {
      type = character varying(100)
    }
    column "scp" {
      type = character varying(100)
    }
    column "due_date_basis" {
      type = character(1)
    }
    column "cash_discount_applicable" {
      type = character(1)
    }
    column "cash_discount_percentage" {
      type = bigint
    }
    column "cash_discount_period" {
      type = bigint
    }
    column "ordcode" {
      type = bigint
    }
    column "sl_type" {
      type = character varying(1)
    }
  )
}

