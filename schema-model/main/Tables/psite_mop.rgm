table "main"."psite_mop" {
  primaryKey = {
    columns = [
      "code"
    ]
    name = "psite_mop_pk"
    objectType = primaryKey
  }
  columns = (
    column "code" {
      type = bigint
      null = NOT NULL
    }
    column "name" {
      type = character varying(100)
      null = NOT NULL
    }
    column "shortcode" {
      type = character varying(5)
      null = NOT NULL
    }
    column "type" {
      type = character(3)
      null = NOT NULL
    }
    column "admcurrency_code" {
      type = bigint
      null = NOT NULL
    }
    column "allow_multi_line" {
      type = bigint
      null = NOT NULL
      default = 0
    }
    column "prevent_over_tendering" {
      type = bigint
      default = 0
    }
    column "display_order" {
      type = bigint
      null = NOT NULL
    }
    column "isdenoapplicable" {
      type = bigint
      null = NOT NULL
      default = 0
    }
    column "issettlementapplicable" {
      type = bigint
      null = NOT NULL
      default = 0
    }
    column "isextinct" {
      type = bigint
      null = NOT NULL
      default = 0
    }
    column "mopcccommpercent" {
      type = numeric(5,2)
    }
    column "createdon" {
      type = timestamp(0) without time zone
      null = NOT NULL
    }
    column "createdby" {
      type = bigint
      null = NOT NULL
    }
    column "lastmodifiedon" {
      type = timestamp(0) without time zone
    }
    column "lastmodifiedby" {
      type = bigint
    }
    column "dataversion" {
      type = bigint
      null = NOT NULL
    }
    column "blockpromotionmode" {
      type = character(1)
    }
    column "restrictbenefit" {
      type = bigint
      null = NOT NULL
      default = '0'::numeric
    }
    column "allownegativetender" {
      type = bigint
      null = NOT NULL
      default = 0
    }
    column "wallet_config" {
      type = text
    }
    column "pluginassemblyname" {
      type = character varying(500)
    }
    column "pluginclassname" {
      type = character varying(300)
    }
    column "pluginmethodname" {
      type = character varying(500)
    }
    column "iscountapplicable" {
      type = bigint
      null = NOT NULL
      default = 0
    }
    column "transactionreftracking" {
      type = bigint
      default = 0
    }
    column "plugin_code" {
      type = bigint
    }
    column "plugin_mode" {
      type = character varying(25)
      null = NOT NULL
    }
  )
}

foreignKey "main"."psite_mop"."psite_mop_r01" {
  columns = [
    "admcurrency_code"
  ]
  referencedTable = "main"."admcurrency"
  referencedColumns = [
    "code"
  ]
}

foreignKey "main"."psite_mop"."psite_mop_r02" {
  columns = [
    "createdby"
  ]
  referencedTable = "main"."hrdemp"
  referencedColumns = [
    "ecode"
  ]
}

foreignKey "main"."psite_mop"."psite_mop_r03" {
  columns = [
    "lastmodifiedby"
  ]
  referencedTable = "main"."hrdemp"
  referencedColumns = [
    "ecode"
  ]
}

index "main"."psite_mop_i01" {
  table = "main"."psite_mop"
  type = btree
  columns = <
    {
      definition = upper(name::text)
    }

  >
  isUnique = True
}

index "main"."psite_mop_lk01" {
  table = "main"."psite_mop"
  type = btree
  columns = <
    {
      definition = admcurrency_code
    }

  >
  isUnique = False
}

index "main"."psite_mop_lk02" {
  table = "main"."psite_mop"
  type = btree
  columns = <
    {
      definition = createdby
    }

  >
  isUnique = False
}

index "main"."psite_mop_lk03" {
  table = "main"."psite_mop"
  type = btree
  columns = <
    {
      definition = lastmodifiedby
    }

  >
  isUnique = False
}

index "main"."psite_mop_u02" {
  table = "main"."psite_mop"
  type = btree
  columns = <
    {
      definition = shortcode
    }

  >
  isUnique = True
}

trigger "main"."psite_mop"."t_mop_cdc" {
  timing = BEFORE
  events = [
    UPDATE
  ]
  level = ROW
  function = main.trigger_fct_t_mop_cdc
  functionArguments = [
  ]
  constraint = False
  updateColumns = [
    name
    shortcode
    type
    admcurrency_code
    allow_multi_line
    prevent_over_tendering
    display_order
    isdenoapplicable
    issettlementapplicable
    isextinct
    lastmodifiedon
    lastmodifiedby
    allownegativetender
    pluginassemblyname
    pluginclassname
    pluginmethodname
    transactionreftracking
  ]
}

trigger "main"."psite_mop"."t_psite_mop" {
  timing = BEFORE
  events = [
    DELETE
    UPDATE
    INSERT
  ]
  level = ROW
  function = main.trigger_fct_t_psite_mop
  functionArguments = [
  ]
  constraint = False
  updateColumns = [
    name
    shortcode
    type
    admcurrency_code
    allow_multi_line
    prevent_over_tendering
    display_order
    isdenoapplicable
    isextinct
    lastmodifiedon
    lastmodifiedby
    allownegativetender
  ]
}

trigger "main"."psite_mop"."t_psite_mop_gds2" {
  timing = AFTER
  events = [
    UPDATE
    INSERT
  ]
  level = ROW
  function = main.trigger_fct_t_psite_mop_gds2
  functionArguments = [
  ]
  constraint = False
}

