table "main"."si_assortment" {
  primaryKey = {
    columns = [
      "code"
    ]
    name = "si_assortment_code_pk"
    objectType = primaryKey
  }
  columns = (
    column "code" {
      type = bigint
      null = NOT NULL
    }
    column "name" {
      type = character varying(150)
      null = NOT NULL
    }
    column "description" {
      type = character varying(500)
    }
    column "exclude_desc" {
      type = character varying(100)
    }
    column "extinct" {
      type = character(1)
      null = NOT NULL
      default = 'N'::bpchar
    }
    column "entry_source" {
      type = character varying(25)
      null = NOT NULL
    }
    column "dataversion" {
      type = bigint
      null = NOT NULL
    }
    column "ecode" {
      type = bigint
    }
    column "time" {
      type = timestamp(0) without time zone
    }
    column "last_access_time" {
      type = timestamp(0) without time zone
    }
    column "last_access_ecode" {
      type = bigint
    }
  )
}

foreignKey "main"."si_assortment"."r_si_assortment_ecode" {
  columns = [
    "ecode"
  ]
  referencedTable = "main"."hrdemp"
  referencedColumns = [
    "ecode"
  ]
}

foreignKey "main"."si_assortment"."r_si_assortment_la_ecode" {
  columns = [
    "last_access_ecode"
  ]
  referencedTable = "main"."hrdemp"
  referencedColumns = [
    "ecode"
  ]
}

index "main"."si_assort_name_cmpcode_u01" {
  table = "main"."si_assortment"
  type = btree
  columns = <
    {
      definition = name
    }

  >
  isUnique = True
}

index "main"."si_assortment_lk01" {
  table = "main"."si_assortment"
  type = btree
  columns = <
    {
      definition = ecode
    }

  >
  isUnique = False
}

index "main"."si_assortment_lk02" {
  table = "main"."si_assortment"
  type = btree
  columns = <
    {
      definition = last_access_ecode
    }

  >
  isUnique = False
}

trigger "main"."si_assortment"."t_si_assortment_bi" {
  timing = BEFORE
  events = [
    INSERT
  ]
  level = ROW
  function = main.trigger_fct_t_si_assortment_bi
  functionArguments = [
  ]
  constraint = False
}

trigger "main"."si_assortment"."t_si_assortment_dataversion" {
  timing = BEFORE
  events = [
    UPDATE
    INSERT
  ]
  level = ROW
  function = main.trigger_fct_t_si_assortment_dataversion
  functionArguments = [
  ]
  constraint = False
}

