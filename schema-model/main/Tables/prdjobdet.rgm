table "main"."prdjobdet" {
  primaryKey = {
    columns = [
      "code"
    ]
    name = "prdjobdet_pk"
    objectType = primaryKey
  }
  columns = (
    column "jobcode" {
      type = bigint
      null = NOT NULL
    }
    column "assembly_icode" {
      type = character varying(9)
      null = NOT NULL
    }
    column "lotcode" {
      type = bigint
    }
    column "operation_seq" {
      type = numeric(7,3)
      null = NOT NULL
    }
    column "consider_in_wip" {
      type = character(1)
      null = NOT NULL
      default = 'N'::bpchar
    }
    column "qty" {
      type = numeric(20,3)
      null = NOT NULL
    }
    column "job_rate" {
      type = numeric(20,6)
    }
    column "p_qty" {
      type = numeric(20,3)
    }
    column "o_qty" {
      type = numeric(20,3)
    }
    column "completed_qty" {
      type = numeric(20,3)
    }
    column "cnl_qty" {
      type = numeric(20,3)
    }
    column "remarks" {
      type = character varying(500)
    }
    column "code" {
      type = bigint
      null = NOT NULL
    }
    column "duedt" {
      type = timestamp(0) without time zone
    }
    column "prev_prcode" {
      type = bigint
    }
    column "prev_operation_seq" {
      type = numeric(7,3)
    }
    column "ass_saitem_code" {
      type = bigint
    }
    column "alternate_qty" {
      type = numeric(20,3)
    }
    column "dataversion" {
      type = bigint
      null = NOT NULL
    }
  )
}

foreignKey "main"."prdjobdet"."r_prdjobdet_a_icode" {
  columns = [
    "assembly_icode"
  ]
  referencedTable = "main"."invitem"
  referencedColumns = [
    "icode"
  ]
}

foreignKey "main"."prdjobdet"."r_prdjobdet_ass_saitem_code" {
  columns = [
    "ass_saitem_code"
  ]
  referencedTable = "main"."prd_saitem"
  referencedColumns = [
    "code"
  ]
}

foreignKey "main"."prdjobdet"."r_prdjobdet_jobcode" {
  columns = [
    "jobcode"
  ]
  referencedTable = "main"."prdjobmain"
  referencedColumns = [
    "code"
  ]
}

foreignKey "main"."prdjobdet"."r_prdjobdet_lotcode" {
  columns = [
    "lotcode"
  ]
  referencedTable = "main"."prdlotmain"
  referencedColumns = [
    "code"
  ]
}

index "main"."prdjobdet_lk01" {
  table = "main"."prdjobdet"
  type = btree
  columns = <
    {
      definition = assembly_icode
    }

  >
  isUnique = False
}

index "main"."prdjobdet_lk02" {
  table = "main"."prdjobdet"
  type = btree
  columns = <
    {
      definition = jobcode
    }

  >
  isUnique = False
}

index "main"."prdjobdet_lk03" {
  table = "main"."prdjobdet"
  type = btree
  columns = <
    {
      definition = lotcode
    }

  >
  isUnique = False
}

index "main"."prdjobdet_lk04" {
  table = "main"."prdjobdet"
  type = btree
  columns = <
    {
      definition = ass_saitem_code
    }

  >
  isUnique = False
}

index "main"."u_det_jcode_lcode_aicode_sai" {
  table = "main"."prdjobdet"
  type = btree
  columns = <
    {
      definition = jobcode
    }

    {
      definition = assembly_icode
    }

    {
      definition = lotcode
    }

    {
      definition = ass_saitem_code
    }

  >
  isUnique = True
}

trigger "main"."prdjobdet"."t_a_prdjobdet" {
  timing = AFTER
  events = [
    DELETE
    UPDATE
    INSERT
  ]
  level = ROW
  function = main.trigger_fct_t_a_prdjobdet
  functionArguments = [
  ]
  constraint = False
  updateColumns = [
    jobcode
    assembly_icode
    lotcode
    operation_seq
    consider_in_wip
    qty
    duedt
  ]
}

trigger "main"."prdjobdet"."t_prdjobbom_deferred_biud" {
  timing = BEFORE
  events = [
    UPDATE
    INSERT
  ]
  level = ROW
  function = main.t_deferred_biu$prdjobbom
  functionArguments = [
  ]
  constraint = False
}

trigger "main"."prdjobdet"."t_prdjobdet" {
  timing = BEFORE
  events = [
    DELETE
    UPDATE
    INSERT
  ]
  level = ROW
  function = main.trigger_fct_t_prdjobdet
  functionArguments = [
  ]
  constraint = False
  updateColumns = [
    jobcode
    assembly_icode
    lotcode
    operation_seq
    consider_in_wip
    qty
    p_qty
    o_qty
    completed_qty
    cnl_qty
    duedt
    alternate_qty
  ]
}

trigger "main"."prdjobdet"."t_prdjobdet_bi" {
  timing = BEFORE
  events = [
    INSERT
  ]
  level = ROW
  function = main.trigger_fct_t_prdjobdet_bi
  functionArguments = [
  ]
  constraint = False
}

trigger "main"."prdjobdet"."t_prdjobdet_dataversion" {
  timing = BEFORE
  events = [
    UPDATE
    INSERT
  ]
  level = ROW
  function = main.trigger_fct_t_prdjobdet_dataversion
  functionArguments = [
  ]
  constraint = False
}

trigger "main"."prdjobdet"."t_prdjobdet_deferred_biud" {
  timing = BEFORE
  events = [
    UPDATE
    INSERT
  ]
  level = ROW
  function = main.t_deferred_biu$prdjobdet
  functionArguments = [
  ]
  constraint = False
}

