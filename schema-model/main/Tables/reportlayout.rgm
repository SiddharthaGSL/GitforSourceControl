table "main"."reportlayout" {
  primaryKey = {
    columns = [
      "layoutid"
    ]
    name = "pk_reportlayout"
    objectType = primaryKey
  }
  columns = (
    column "layoutid" {
      type = bigint
      null = NOT NULL
    }
    column "layoutname" {
      type = character varying(50)
      null = NOT NULL
    }
    column "printingmode" {
      type = character(1)
      null = NOT NULL
    }
    column "layoutowner" {
      type = character(1)
    }
    column "category" {
      type = character varying(50)
      null = NOT NULL
    }
    column "extinct" {
      type = bigint
    }
    column "createdbyid" {
      type = bigint
    }
    column "createdon" {
      type = timestamp(0) without time zone
    }
    column "lastmodifiedbyid" {
      type = bigint
    }
    column "lastmodifiedon" {
      type = timestamp(0) without time zone
    }
    column "dataversion" {
      type = bigint
    }
    column "textreportdllname" {
      type = character varying(300)
    }
    column "textreportclassname" {
      type = character varying(300)
    }
    column "printingversion" {
      type = character varying(20)
    }
    column "textreportpagebreakat" {
      type = bigint
    }
    column "reporttype" {
      type = character varying(5)
    }
  )
}

foreignKey "main"."reportlayout"."reportlayout_r01" {
  columns = [
    "createdbyid"
  ]
  referencedTable = "main"."appuser"
  referencedColumns = [
    "id"
  ]
}

foreignKey "main"."reportlayout"."reportlayout_r02" {
  columns = [
    "lastmodifiedbyid"
  ]
  referencedTable = "main"."appuser"
  referencedColumns = [
    "id"
  ]
}

index "main"."reportlayout_lk01" {
  table = "main"."reportlayout"
  type = btree
  columns = <
    {
      definition = createdbyid
    }

  >
  isUnique = False
}

index "main"."reportlayout_lk02" {
  table = "main"."reportlayout"
  type = btree
  columns = <
    {
      definition = lastmodifiedbyid
    }

  >
  isUnique = False
}

trigger "main"."reportlayout"."t_reportlayout" {
  timing = BEFORE
  events = [
    UPDATE
    INSERT
  ]
  level = ROW
  function = main.trigger_fct_t_reportlayout
  functionArguments = [
  ]
  constraint = False
}

trigger "main"."reportlayout"."t_reportlayout_cdc" {
  timing = BEFORE
  events = [
    UPDATE
  ]
  level = ROW
  function = main.trigger_fct_t_reportlayout_cdc
  functionArguments = [
  ]
  constraint = False
}

