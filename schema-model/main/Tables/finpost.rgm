table "main"."finpost" {
  primaryKey = {
    columns = [
      "postcode"
    ]
    name = "p_finpost_postcode"
    objectType = primaryKey
  }
  columns = (
    column "postcode" {
      type = bigint
      null = NOT NULL
    }
    column "entcode" {
      type = character varying(100)
      null = NOT NULL
    }
    column "entno" {
      type = character varying(100)
    }
    column "entdt" {
      type = timestamp(0) without time zone
      null = NOT NULL
    }
    column "enttype" {
      type = character(3)
      null = NOT NULL
      default = 'SIM'::bpchar
    }
    column "docno" {
      type = character varying(100)
    }
    column "docdt" {
      type = timestamp(0) without time zone
    }
    column "duedt" {
      type = timestamp(0) without time zone
    }
    column "glcode" {
      type = bigint
    }
    column "slcode" {
      type = bigint
    }
    column "damount" {
      type = numeric(20,2)
      default = 0
    }
    column "camount" {
      type = numeric(20,2)
      default = 0
    }
    column "adjamt" {
      type = numeric(20,2)
      default = 0
    }
    column "ycode" {
      type = bigint
      null = NOT NULL
    }
    column "nartext" {
      type = character varying(500)
    }
    column "scheme_docno" {
      type = character varying(50)
    }
    column "chqno" {
      type = character varying(25)
    }
    column "chqdt" {
      type = timestamp(0) without time zone
    }
    column "drawnon" {
      type = character varying(100)
    }
    column "brsdt" {
      type = timestamp(0) without time zone
    }
    column "chqlabel" {
      type = character varying(100)
    }
    column "chgcode" {
      type = bigint
    }
    column "chgrate" {
      type = numeric(20,3)
    }
    column "tdstypecode" {
      type = bigint
    }
    column "tdssrccode" {
      type = bigint
    }
    column "tdssection" {
      type = character varying(100)
    }
    column "tdsrate" {
      type = numeric(20,5)
    }
    column "tds_appamt" {
      type = numeric(20,2)
    }
    column "certificateno" {
      type = character varying(100)
    }
    column "servicecode" {
      type = bigint
    }
    column "release_status" {
      type = character(1)
      null = NOT NULL
      default = 'U'::bpchar
    }
    column "admsite_code_owner" {
      type = bigint
    }
    column "ref_admsite_code" {
      type = bigint
    }
    column "chgappamt" {
      type = numeric(20,2)
    }
    column "chgamt" {
      type = numeric(20,2)
    }
    column "ecode" {
      type = bigint
    }
    column "time" {
      type = timestamp(0) without time zone
    }
    column "last_access_ecode" {
      type = bigint
    }
    column "last_access_time" {
      type = timestamp(0) without time zone
    }
    column "release_ecode" {
      type = bigint
    }
    column "release_time" {
      type = timestamp(0) without time zone
    }
    column "chg_pk_code" {
      type = bigint
    }
    column "cash_discount_applicable" {
      type = character(1)
      null = NOT NULL
      default = 'N'::bpchar
    }
    column "cash_discount_percentage" {
      type = numeric(6,2)
    }
    column "cash_discount_period" {
      type = bigint
    }
    column "admou_code" {
      type = bigint
      null = NOT NULL
    }
  )
}

foreignKey "main"."finpost"."finpost_admsite_code_owner" {
  columns = [
    "admsite_code_owner"
  ]
  referencedTable = "main"."admsite"
  referencedColumns = [
    "code"
  ]
}

foreignKey "main"."finpost"."finpost_ecode" {
  columns = [
    "ecode"
  ]
  referencedTable = "main"."hrdemp"
  referencedColumns = [
    "ecode"
  ]
}

foreignKey "main"."finpost"."finpost_last_access_ecode" {
  columns = [
    "last_access_ecode"
  ]
  referencedTable = "main"."hrdemp"
  referencedColumns = [
    "ecode"
  ]
}

foreignKey "main"."finpost"."finpost_ref_admsite_code" {
  columns = [
    "ref_admsite_code"
  ]
  referencedTable = "main"."admsite"
  referencedColumns = [
    "code"
  ]
}

foreignKey "main"."finpost"."finpost_release_ecode" {
  columns = [
    "release_ecode"
  ]
  referencedTable = "main"."hrdemp"
  referencedColumns = [
    "ecode"
  ]
}

foreignKey "main"."finpost"."r_finpost_enttype" {
  columns = [
    "enttype"
  ]
  referencedTable = "main"."finenttype"
  referencedColumns = [
    "enttype"
  ]
}

foreignKey "main"."finpost"."r_finpost_glcode" {
  columns = [
    "glcode"
  ]
  referencedTable = "main"."fingl"
  referencedColumns = [
    "glcode"
  ]
}

foreignKey "main"."finpost"."r_finpost_slcode" {
  columns = [
    "slcode"
  ]
  referencedTable = "main"."finsl"
  referencedColumns = [
    "slcode"
  ]
}

foreignKey "main"."finpost"."r_finpost_tdssrccode" {
  columns = [
    "tdssrccode"
  ]
  referencedTable = "main"."fintdssrc"
  referencedColumns = [
    "tdssrccode"
  ]
}

foreignKey "main"."finpost"."r_finpost_tdstypecode" {
  columns = [
    "tdstypecode"
  ]
  referencedTable = "main"."fintdstype"
  referencedColumns = [
    "tdstypecode"
  ]
}

foreignKey "main"."finpost"."r_finpost_ycode" {
  columns = [
    "ycode"
  ]
  referencedTable = "main"."admyear"
  referencedColumns = [
    "ycode"
  ]
}

index "main"."finpost_lk01" {
  table = "main"."finpost"
  type = btree
  columns = <
    {
      definition = enttype
    }

  >
  isUnique = False
}

index "main"."finpost_lk02" {
  table = "main"."finpost"
  type = btree
  columns = <
    {
      definition = glcode
    }

  >
  isUnique = False
}

index "main"."finpost_lk03" {
  table = "main"."finpost"
  type = btree
  columns = <
    {
      definition = slcode
    }

  >
  isUnique = False
}

index "main"."finpost_lk04" {
  table = "main"."finpost"
  type = btree
  columns = <
    {
      definition = ycode
    }

  >
  isUnique = False
}

index "main"."finpost_lk05" {
  table = "main"."finpost"
  type = btree
  columns = <
    {
      definition = chgcode
    }

  >
  isUnique = False
}

index "main"."finpost_lk06" {
  table = "main"."finpost"
  type = btree
  columns = <
    {
      definition = tdssrccode
    }

  >
  isUnique = False
}

index "main"."finpost_lk07" {
  table = "main"."finpost"
  type = btree
  columns = <
    {
      definition = tdstypecode
    }

  >
  isUnique = False
}

index "main"."finpost_lk08" {
  table = "main"."finpost"
  type = btree
  columns = <
    {
      definition = admsite_code_owner
    }

  >
  isUnique = False
}

index "main"."finpost_lk09" {
  table = "main"."finpost"
  type = btree
  columns = <
    {
      definition = ecode
    }

  >
  isUnique = False
}

index "main"."finpost_lk10" {
  table = "main"."finpost"
  type = btree
  columns = <
    {
      definition = last_access_ecode
    }

  >
  isUnique = False
}

index "main"."finpost_lk11" {
  table = "main"."finpost"
  type = btree
  columns = <
    {
      definition = ref_admsite_code
    }

  >
  isUnique = False
}

index "main"."finpost_lk12" {
  table = "main"."finpost"
  type = btree
  columns = <
    {
      definition = release_ecode
    }

  >
  isUnique = False
}

index "main"."i_finpost_composite" {
  table = "main"."finpost"
  type = btree
  columns = <
    {
      definition = entcode
    }

    {
      definition = enttype
    }

  >
  isUnique = False
}

index "main"."i_finpost_release_status" {
  table = "main"."finpost"
  type = btree
  columns = <
    {
      definition = release_status
    }

  >
  isUnique = False
}

index "main"."i_scheme_docno_finpost" {
  table = "main"."finpost"
  type = btree
  columns = <
    {
      definition = upper(scheme_docno::text)
    }

  >
  isUnique = False
}

trigger "main"."finpost"."t_finpost" {
  timing = BEFORE
  events = [
    DELETE
    UPDATE
    INSERT
  ]
  level = ROW
  function = main.trigger_fct_t_finpost
  functionArguments = [
  ]
  constraint = False
  updateColumns = [
    entcode
    damount
    camount
  ]
}

trigger "main"."finpost"."t_finpost_deferred_biud" {
  timing = BEFORE
  events = [
    UPDATE
    INSERT
  ]
  level = ROW
  function = main.t_deferred_biu$finpost
  functionArguments = [
  ]
  constraint = False
}

trigger "main"."finpost"."t_finpost_deleted" {
  timing = BEFORE
  events = [
    DELETE
  ]
  level = ROW
  function = main.trigger_fct_t_finpost_deleted
  functionArguments = [
  ]
  constraint = False
}

