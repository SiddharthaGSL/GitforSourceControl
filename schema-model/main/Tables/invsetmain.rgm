table "main"."invsetmain" {
  primaryKey = {
    columns = [
      "setcode"
    ]
    name = "invsetmain_pk"
    objectType = primaryKey
  }
  columns = (
    column "setcode" {
      type = bigint
      null = NOT NULL
    }
    column "setdt" {
      type = timestamp(0) without time zone
      null = NOT NULL
    }
    column "loccode" {
      type = bigint
    }
    column "ecode" {
      type = bigint
      null = NOT NULL
    }
    column "creator_cmpcode" {
      type = bigint
      null = NOT NULL
    }
    column "cancel_flag" {
      type = character(1)
      null = NOT NULL
      default = 'N'::bpchar
    }
    column "rem" {
      type = character varying(500)
    }
    column "intgcode" {
      type = character(3)
    }
    column "intg_stg_id" {
      type = character varying(50)
    }
    column "udfstring01" {
      type = character varying(100)
    }
    column "udfstring02" {
      type = character varying(100)
    }
    column "udfstring03" {
      type = character varying(100)
    }
    column "udfstring04" {
      type = character varying(100)
    }
    column "udfstring05" {
      type = character varying(100)
    }
    column "udfstring06" {
      type = character varying(100)
    }
    column "udfstring07" {
      type = character varying(100)
    }
    column "udfstring08" {
      type = character varying(100)
    }
    column "udfstring09" {
      type = character varying(100)
    }
    column "udfstring10" {
      type = character varying(100)
    }
    column "udfnum01" {
      type = bigint
    }
    column "udfnum02" {
      type = bigint
    }
    column "udfnum03" {
      type = bigint
    }
    column "udfnum04" {
      type = bigint
    }
    column "udfnum05" {
      type = bigint
    }
    column "udfdate01" {
      type = timestamp(0) without time zone
    }
    column "udfdate02" {
      type = timestamp(0) without time zone
    }
    column "udfdate03" {
      type = timestamp(0) without time zone
    }
    column "udfdate04" {
      type = timestamp(0) without time zone
    }
    column "udfdate05" {
      type = timestamp(0) without time zone
    }
    column "entry_source" {
      type = character varying(25)
      null = NOT NULL
    }
    column "dataversion" {
      type = bigint
      null = NOT NULL
    }
    column "last_access_ecode" {
      type = bigint
    }
    column "last_access_time" {
      type = timestamp(0) without time zone
    }
    column "time" {
      type = timestamp(0) without time zone
    }
  )
}

foreignKey "main"."invsetmain"."fk_invsetmain_intgcode" {
  columns = [
    "intgcode"
  ]
  referencedTable = "main"."intgmain"
  referencedColumns = [
    "intgcode"
  ]
}

foreignKey "main"."invsetmain"."invsetmain_r01" {
  columns = [
    "loccode"
  ]
  referencedTable = "main"."invloc"
  referencedColumns = [
    "loccode"
  ]
}

foreignKey "main"."invsetmain"."invsetmain_r02" {
  columns = [
    "ecode"
  ]
  referencedTable = "main"."hrdemp"
  referencedColumns = [
    "ecode"
  ]
}

foreignKey "main"."invsetmain"."r_invsetmain_laccess_ecode" {
  columns = [
    "last_access_ecode"
  ]
  referencedTable = "main"."hrdemp"
  referencedColumns = [
    "ecode"
  ]
}

index "main"."invsetmain_lk01" {
  table = "main"."invsetmain"
  type = btree
  columns = <
    {
      definition = creator_cmpcode
    }

  >
  isUnique = False
}

index "main"."invsetmain_lk02" {
  table = "main"."invsetmain"
  type = btree
  columns = <
    {
      definition = ecode
    }

  >
  isUnique = False
}

index "main"."invsetmain_lk03" {
  table = "main"."invsetmain"
  type = btree
  columns = <
    {
      definition = loccode
    }

  >
  isUnique = False
}

index "main"."invsetmain_lk04" {
  table = "main"."invsetmain"
  type = btree
  columns = <
    {
      definition = intgcode
    }

  >
  isUnique = False
}

index "main"."invsetmain_lk05" {
  table = "main"."invsetmain"
  type = btree
  columns = <
    {
      definition = last_access_ecode
    }

  >
  isUnique = False
}

trigger "main"."invsetmain"."t_invsetmain_dataversion" {
  timing = BEFORE
  events = [
    UPDATE
    INSERT
  ]
  level = ROW
  function = main.trigger_fct_t_invsetmain_dataversion
  functionArguments = [
  ]
  constraint = False
}

trigger "main"."invsetmain"."t_invsetmain_gds2" {
  timing = AFTER
  events = [
    UPDATE
    INSERT
  ]
  level = ROW
  function = main.trigger_fct_t_invsetmain_gds2
  functionArguments = [
  ]
  constraint = False
}

