table "main"."psite_global_localpolicy" {
  primaryKey = {
    columns = [
      "id"
    ]
    name = "psite_global_localpolicy_pk"
    objectType = primaryKey
  }
  columns = (
    column "id" {
      type = bigint
      null = NOT NULL
    }
    column "name" {
      type = character varying(100)
      null = NOT NULL
    }
    column "remarks" {
      type = character varying(500)
    }
    column "createdon" {
      type = timestamp(0) without time zone
      null = NOT NULL
    }
    column "createdby" {
      type = bigint
      null = NOT NULL
    }
    column "lastmodifiedon" {
      type = timestamp(0) without time zone
      null = NOT NULL
    }
    column "lastmodifiedby" {
      type = bigint
      null = NOT NULL
    }
    column "dataversion" {
      type = bigint
      null = NOT NULL
    }
  )
}

foreignKey "main"."psite_global_localpolicy"."psite_global_localpolicy_r01" {
  columns = [
    "createdby"
  ]
  referencedTable = "main"."appuser"
  referencedColumns = [
    "id"
  ]
}

foreignKey "main"."psite_global_localpolicy"."psite_global_localpolicy_r02" {
  columns = [
    "lastmodifiedby"
  ]
  referencedTable = "main"."appuser"
  referencedColumns = [
    "id"
  ]
}

index "main"."psite_global_localpolicy_lk01" {
  table = "main"."psite_global_localpolicy"
  type = btree
  columns = <
    {
      definition = createdby
    }

  >
  isUnique = False
}

index "main"."psite_global_localpolicy_lk02" {
  table = "main"."psite_global_localpolicy"
  type = btree
  columns = <
    {
      definition = lastmodifiedby
    }

  >
  isUnique = False
}

trigger "main"."psite_global_localpolicy"."t_psite_global_localpolicy" {
  timing = BEFORE
  events = [
    UPDATE
    INSERT
  ]
  level = ROW
  function = main.trigger_fct_t_psite_global_localpolicy
  functionArguments = [
  ]
  constraint = False
}

trigger "main"."psite_global_localpolicy"."t_psite_global_localpolicy_cdc" {
  timing = BEFORE
  events = [
    UPDATE
  ]
  level = ROW
  function = main.trigger_fct_t_psite_global_localpolicy_cdc
  functionArguments = [
  ]
  constraint = False
}

