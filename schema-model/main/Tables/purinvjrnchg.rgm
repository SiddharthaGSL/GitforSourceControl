table "main"."purinvjrnchg" {
  primaryKey = {
    columns = [
      "code"
    ]
    name = "purinvjrnchg_pkey"
    objectType = primaryKey
  }
  columns = (
    column "code" {
      type = bigint
      null = NOT NULL
    }
    column "jrncode" {
      type = bigint
      null = NOT NULL
    }
    column "seq" {
      type = bigint
      null = NOT NULL
    }
    column "chgcode" {
      type = bigint
      null = NOT NULL
    }
    column "rate" {
      type = numeric(20,3)
      default = 0
    }
    column "sign" {
      type = character(1)
      default = '+'::bpchar
    }
    column "chgamt" {
      type = numeric(20,3)
      default = 0
    }
    column "glcode" {
      type = bigint
      null = NOT NULL
    }
    column "slcode" {
      type = bigint
    }
    column "without_term_formula" {
      type = character(1)
    }
    column "gl_cc_appl" {
      type = character(1)
      null = NOT NULL
      default = 'N'::bpchar
    }
    column "basis" {
      type = character(1)
      null = NOT NULL
      default = 'P'::bpchar
    }
    column "appamt" {
      type = numeric(20,2)
    }
    column "formulae" {
      type = character varying(50)
      default = 'B'::character varying
    }
    column "operation_level" {
      type = character(1)
      null = NOT NULL
      default = 'H'::bpchar
    }
    column "istax" {
      type = character(1)
      default = 'N'::bpchar
    }
    column "source" {
      type = character(1)
      default = 'F'::bpchar
    }
    column "gst_component" {
      type = character(4)
    }
    column "formdt" {
      type = timestamp(0) without time zone
    }
    column "formno" {
      type = character varying(100)
    }
    column "formcode" {
      type = bigint
    }
    column "isreverse" {
      type = character(1)
      default = 'N'::bpchar
    }
    column "ycode" {
      type = bigint
    }
  )
}

foreignKey "main"."purinvjrnchg"."purinvjrnchg_r01" {
  columns = [
    "glcode"
  ]
  referencedTable = "main"."fingl"
  referencedColumns = [
    "glcode"
  ]
}

foreignKey "main"."purinvjrnchg"."purinvjrnchg_r02" {
  columns = [
    "jrncode"
  ]
  referencedTable = "main"."purinvjrnmain"
  referencedColumns = [
    "jrncode"
  ]
}

foreignKey "main"."purinvjrnchg"."purinvjrnchg_r03" {
  columns = [
    "chgcode"
  ]
  referencedTable = "main"."finchg"
  referencedColumns = [
    "chgcode"
  ]
}

foreignKey "main"."purinvjrnchg"."purinvjrnchg_r04" {
  columns = [
    "slcode"
  ]
  referencedTable = "main"."finsl"
  referencedColumns = [
    "slcode"
  ]
}

index "main"."purinvjrnchg_c09" {
  table = "main"."purinvjrnchg"
  type = btree
  columns = <
    {
      definition = jrncode
    }

    {
      definition = chgcode
    }

    {
      definition = rate
    }

    {
      definition = sign
    }

    {
      definition = glcode
    }

    {
      definition = gl_cc_appl
    }

    {
      definition = slcode
    }

    {
      definition = basis
    }

    {
      definition = istax
    }

    {
      definition = source
    }

    {
      definition = formulae
    }

  >
  isUnique = True
}

index "main"."purinvjrnchg_lk01" {
  table = "main"."purinvjrnchg"
  type = btree
  columns = <
    {
      definition = chgcode
    }

  >
  isUnique = False
}

index "main"."purinvjrnchg_lk02" {
  table = "main"."purinvjrnchg"
  type = btree
  columns = <
    {
      definition = glcode
    }

  >
  isUnique = False
}

index "main"."purinvjrnchg_lk03" {
  table = "main"."purinvjrnchg"
  type = btree
  columns = <
    {
      definition = jrncode
    }

  >
  isUnique = False
}

index "main"."purinvjrnchg_lk04" {
  table = "main"."purinvjrnchg"
  type = btree
  columns = <
    {
      definition = slcode
    }

  >
  isUnique = False
}

trigger "main"."purinvjrnchg"."t_purinvjrnchg" {
  timing = BEFORE
  events = [
    DELETE
    UPDATE
    INSERT
  ]
  level = ROW
  function = main.trigger_fct_t_purinvjrnchg
  functionArguments = [
  ]
  constraint = False
  updateColumns = [
    jrncode
    chgamt
    glcode
    slcode
  ]
}

trigger "main"."purinvjrnchg"."t_purinvjrnchg_bi" {
  timing = BEFORE
  events = [
    INSERT
  ]
  level = ROW
  function = main.trigger_fct_t_purinvjrnchg_bi
  functionArguments = [
  ]
  constraint = False
}

