table "main"."invval_migration_main" {
  primaryKey = {
    columns = [
      "code"
    ]
    name = "invval_migration_main_pk"
    objectType = primaryKey
  }
  columns = (
    column "code" {
      type = bigint
      null = NOT NULL
    }
    column "admsite_code" {
      type = bigint
      null = NOT NULL
    }
    column "admmonth_code" {
      type = bigint
      null = NOT NULL
    }
    column "admmonth_last_date" {
      type = timestamp(0) without time zone
    }
    column "upload_type" {
      type = character(1)
      null = NOT NULL
    }
    column "uploaded_on" {
      type = timestamp(0) without time zone
      null = NOT NULL
    }
    column "uploaded_by" {
      type = bigint
      null = NOT NULL
    }
    column "upload_source_name" {
      type = character varying(2000)
      null = NOT NULL
    }
    column "freeze_status" {
      type = character varying(1)
      null = NOT NULL
    }
    column "item_count" {
      type = bigint
      null = NOT NULL
    }
    column "cost_amount" {
      type = bigint
      null = NOT NULL
    }
    column "remarks" {
      type = character varying(2000)
    }
    column "site_source" {
      type = character(1)
    }
  )
}

foreignKey "main"."invval_migration_main"."invval_migration_main_f01" {
  columns = [
    "admsite_code"
  ]
  referencedTable = "main"."admsite"
  referencedColumns = [
    "code"
  ]
}

foreignKey "main"."invval_migration_main"."invval_migration_main_f02" {
  columns = [
    "admmonth_code"
  ]
  referencedTable = "main"."admmonth"
  referencedColumns = [
    "mcode"
  ]
}

index "main"."invval_migration_main_lk01" {
  table = "main"."invval_migration_main"
  type = btree
  columns = <
    {
      definition = admmonth_code
    }

  >
  isUnique = False
}

index "main"."invval_migration_main_u01" {
  table = "main"."invval_migration_main"
  type = btree
  columns = <
    {
      definition = admsite_code
    }

    {
      definition = admmonth_last_date
    }

  >
  isUnique = True
}

trigger "main"."invval_migration_main"."t_invval_migration_main_bi" {
  timing = BEFORE
  events = [
    INSERT
  ]
  level = ROW
  function = main.trigger_fct_t_invval_migration_main_bi
  functionArguments = [
  ]
  constraint = False
}

