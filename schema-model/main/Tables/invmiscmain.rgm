table "main"."invmiscmain" {
  primaryKey = {
    columns = [
      "misccode"
    ]
    name = "invmiscmain_pk"
    objectType = primaryKey
  }
  columns = (
    column "misccode" {
      type = bigint
      null = NOT NULL
    }
    column "miscno" {
      type = bigint
    }
    column "miscdt" {
      type = timestamp(0) without time zone
      null = NOT NULL
    }
    column "deptcode" {
      type = bigint
    }
    column "reqcode" {
      type = bigint
    }
    column "loccode" {
      type = bigint
      null = NOT NULL
    }
    column "refno" {
      type = character varying(100)
    }
    column "remarks" {
      type = character varying(500)
    }
    column "ycode" {
      type = bigint
      null = NOT NULL
    }
    column "creation_ecode" {
      type = bigint
      null = NOT NULL
    }
    column "creation_time" {
      type = timestamp(0) without time zone
      null = NOT NULL
    }
    column "last_modified_ecode" {
      type = bigint
      null = NOT NULL
    }
    column "last_modified_time" {
      type = timestamp(0) without time zone
      null = NOT NULL
    }
    column "admou_code" {
      type = bigint
    }
    column "admsite_code" {
      type = bigint
      null = NOT NULL
    }
    column "admsite_cc" {
      type = bigint
    }
    column "psite_stockpoint_code" {
      type = character varying(50)
    }
    column "auth_ecode" {
      type = bigint
    }
    column "auth_time" {
      type = timestamp(0) without time zone
    }
    column "intgcode" {
      type = character(3)
    }
    column "gstappl" {
      type = character(1)
      null = NOT NULL
      default = 'N'::bpchar
    }
    column "doccode" {
      type = bigint
    }
    column "scheme_docno" {
      type = character varying(25)
    }
    column "udfstring01" {
      type = character varying(500)
    }
    column "udfstring02" {
      type = character varying(500)
    }
    column "udfstring03" {
      type = character varying(500)
    }
    column "udfstring04" {
      type = character varying(500)
    }
    column "udfstring05" {
      type = character varying(500)
    }
    column "udfstring06" {
      type = character varying(500)
    }
    column "udfstring07" {
      type = character varying(500)
    }
    column "udfstring08" {
      type = character varying(500)
    }
    column "udfstring09" {
      type = character varying(500)
    }
    column "udfstring10" {
      type = character varying(500)
    }
    column "udfnum01" {
      type = numeric(20,3)
    }
    column "udfnum02" {
      type = numeric(20,3)
    }
    column "udfnum03" {
      type = numeric(20,3)
    }
    column "udfnum04" {
      type = numeric(20,3)
    }
    column "udfnum05" {
      type = numeric(20,3)
    }
    column "udfdate01" {
      type = timestamp(0) without time zone
    }
    column "udfdate02" {
      type = timestamp(0) without time zone
    }
    column "udfdate03" {
      type = timestamp(0) without time zone
    }
    column "udfdate04" {
      type = timestamp(0) without time zone
    }
    column "udfdate05" {
      type = timestamp(0) without time zone
    }
    column "dataversion" {
      type = bigint
      null = NOT NULL
    }
  )
}

foreignKey "main"."invmiscmain"."fk_invmiscmain_intgcode" {
  columns = [
    "intgcode"
  ]
  referencedTable = "main"."intgmain"
  referencedColumns = [
    "intgcode"
  ]
}

foreignKey "main"."invmiscmain"."invmiscmain_r02" {
  columns = [
    "reqcode"
  ]
  referencedTable = "main"."invreqmain"
  referencedColumns = [
    "reqcode"
  ]
}

foreignKey "main"."invmiscmain"."invmiscmain_r03" {
  columns = [
    "loccode"
  ]
  referencedTable = "main"."invloc"
  referencedColumns = [
    "loccode"
  ]
}

foreignKey "main"."invmiscmain"."invmiscmain_r04" {
  columns = [
    "ycode"
  ]
  referencedTable = "main"."admyear"
  referencedColumns = [
    "ycode"
  ]
}

foreignKey "main"."invmiscmain"."invmiscmain_r05" {
  columns = [
    "creation_ecode"
  ]
  referencedTable = "main"."hrdemp"
  referencedColumns = [
    "ecode"
  ]
}

foreignKey "main"."invmiscmain"."invmiscmain_r06" {
  columns = [
    "last_modified_ecode"
  ]
  referencedTable = "main"."hrdemp"
  referencedColumns = [
    "ecode"
  ]
}

foreignKey "main"."invmiscmain"."r_invmisc_psite_stkpoint_code" {
  columns = [
    "psite_stockpoint_code"
  ]
  referencedTable = "main"."psite_stockpoint"
  referencedColumns = [
    "code"
  ]
}

foreignKey "main"."invmiscmain"."r_invmiscmain_admou_code" {
  columns = [
    "admou_code"
  ]
  referencedTable = "main"."admou"
  referencedColumns = [
    "code"
  ]
}

foreignKey "main"."invmiscmain"."r_invmiscmain_admsite_cc" {
  columns = [
    "admsite_cc"
  ]
  referencedTable = "main"."admsite"
  referencedColumns = [
    "code"
  ]
}

foreignKey "main"."invmiscmain"."r_invmiscmain_admsite_code" {
  columns = [
    "admsite_code"
  ]
  referencedTable = "main"."admsite"
  referencedColumns = [
    "code"
  ]
}

foreignKey "main"."invmiscmain"."r_invmiscmain_auth_ecode" {
  columns = [
    "auth_ecode"
  ]
  referencedTable = "main"."hrdemp"
  referencedColumns = [
    "ecode"
  ]
}

index "main"."invmiscmain_lk01" {
  table = "main"."invmiscmain"
  type = btree
  columns = <
    {
      definition = creation_ecode
    }

  >
  isUnique = False
}

index "main"."invmiscmain_lk02" {
  table = "main"."invmiscmain"
  type = btree
  columns = <
    {
      definition = deptcode
    }

  >
  isUnique = False
}

index "main"."invmiscmain_lk03" {
  table = "main"."invmiscmain"
  type = btree
  columns = <
    {
      definition = last_modified_ecode
    }

  >
  isUnique = False
}

index "main"."invmiscmain_lk04" {
  table = "main"."invmiscmain"
  type = btree
  columns = <
    {
      definition = loccode
    }

  >
  isUnique = False
}

index "main"."invmiscmain_lk05" {
  table = "main"."invmiscmain"
  type = btree
  columns = <
    {
      definition = reqcode
    }

  >
  isUnique = False
}

index "main"."invmiscmain_lk06" {
  table = "main"."invmiscmain"
  type = btree
  columns = <
    {
      definition = ycode
    }

  >
  isUnique = False
}

index "main"."invmiscmain_lk07" {
  table = "main"."invmiscmain"
  type = btree
  columns = <
    {
      definition = admou_code
    }

  >
  isUnique = False
}

index "main"."invmiscmain_lk08" {
  table = "main"."invmiscmain"
  type = btree
  columns = <
    {
      definition = admsite_code
    }

  >
  isUnique = False
}

index "main"."invmiscmain_lk09" {
  table = "main"."invmiscmain"
  type = btree
  columns = <
    {
      definition = admsite_cc
    }

  >
  isUnique = False
}

index "main"."invmiscmain_lk10" {
  table = "main"."invmiscmain"
  type = btree
  columns = <
    {
      definition = auth_ecode
    }

  >
  isUnique = False
}

index "main"."invmiscmain_lk11" {
  table = "main"."invmiscmain"
  type = btree
  columns = <
    {
      definition = psite_stockpoint_code
    }

  >
  isUnique = False
}

index "main"."invmiscmain_lk12" {
  table = "main"."invmiscmain"
  type = btree
  columns = <
    {
      definition = intgcode
    }

  >
  isUnique = False
}

index "main"."invmiscmain_u01" {
  table = "main"."invmiscmain"
  type = btree
  columns = <
    {
      definition = scheme_docno
    }

    {
      definition = miscdt
    }

    {
      definition = creation_ecode
    }

    {
      definition = admsite_code
    }

  >
  isUnique = True
}

trigger "main"."invmiscmain"."t_invmisc_gds2" {
  timing = AFTER
  events = [
    UPDATE
    INSERT
  ]
  level = ROW
  function = main.trigger_fct_t_invmisc_gds2
  functionArguments = [
  ]
  constraint = False
}

trigger "main"."invmiscmain"."t_invmiscmain" {
  timing = BEFORE
  events = [
    DELETE
    UPDATE
    INSERT
  ]
  level = ROW
  function = main.trigger_fct_t_invmiscmain
  functionArguments = [
  ]
  constraint = False
  updateColumns = [
    misccode
    miscno
    miscdt
    loccode
    ycode
    last_modified_ecode
    last_modified_time
    psite_stockpoint_code
    auth_ecode
    gstappl
    scheme_docno
  ]
}

trigger "main"."invmiscmain"."t_invmiscmain_cdc" {
  timing = BEFORE
  events = [
    UPDATE
  ]
  level = ROW
  function = main.trigger_fct_t_invmiscmain_cdc
  functionArguments = [
  ]
  constraint = False
  updateColumns = [
    auth_ecode
    auth_time
  ]
}

trigger "main"."invmiscmain"."t_invmiscmain_dataversion" {
  timing = BEFORE
  events = [
    UPDATE
    INSERT
  ]
  level = ROW
  function = main.t_invmiscmain_dataversion
  functionArguments = [
  ]
  constraint = False
}

trigger "main"."invmiscmain"."t_invmiscmain_zwing" {
  timing = BEFORE
  events = [
    UPDATE
    INSERT
  ]
  level = ROW
  function = main.t_invmiscmain_zwing
  functionArguments = [
  ]
  constraint = False
}

