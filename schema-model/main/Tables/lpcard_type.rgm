table "main"."lpcard_type" {
  primaryKey = {
    columns = [
      "code"
    ]
    name = "lpcard_type_pk"
    objectType = primaryKey
  }
  columns = (
    column "code" {
      type = bigint
      null = NOT NULL
    }
    column "name" {
      type = character varying(100)
    }
    column "prefix" {
      type = character varying(10)
    }
    column "suffix" {
      type = character varying(10)
    }
    column "lastno" {
      type = bigint
    }
    column "status" {
      type = character(1)
      null = NOT NULL
      default = 'N'::bpchar
    }
    column "seqpaddingchar" {
      type = character(1)
    }
    column "seqsegmentlength" {
      type = bigint
    }
    column "seqstartfrom" {
      type = bigint
    }
    column "createdon" {
      type = timestamp(0) without time zone
      null = NOT NULL
    }
    column "createdby" {
      type = bigint
      null = NOT NULL
    }
    column "lastmodifiedon" {
      type = timestamp(0) without time zone
      null = NOT NULL
    }
    column "lastmodifiedby" {
      type = bigint
      null = NOT NULL
    }
    column "dataversion" {
      type = bigint
      null = NOT NULL
    }
    column "validity_in_months" {
      type = bigint
    }
    column "sample_cardno" {
      type = character varying(25)
    }
    column "cardnomode" {
      type = character(1)
      null = NOT NULL
    }
  )
}

foreignKey "main"."lpcard_type"."lpcard_type_r01" {
  columns = [
    "createdby"
  ]
  referencedTable = "main"."hrdemp"
  referencedColumns = [
    "ecode"
  ]
}

foreignKey "main"."lpcard_type"."lpcard_type_r02" {
  columns = [
    "lastmodifiedby"
  ]
  referencedTable = "main"."hrdemp"
  referencedColumns = [
    "ecode"
  ]
}

index "main"."lpcard_type_lk01" {
  table = "main"."lpcard_type"
  type = btree
  columns = <
    {
      definition = createdby
    }

  >
  isUnique = False
}

index "main"."lpcard_type_lk02" {
  table = "main"."lpcard_type"
  type = btree
  columns = <
    {
      definition = lastmodifiedby
    }

  >
  isUnique = False
}

trigger "main"."lpcard_type"."t_lpcard_type" {
  timing = BEFORE
  events = [
    UPDATE
    INSERT
  ]
  level = ROW
  function = main.trigger_fct_t_lpcard_type
  functionArguments = [
  ]
  constraint = False
  updateColumns = [
    name
    prefix
    suffix
    lastno
    status
    lastmodifiedon
    lastmodifiedby
    dataversion
  ]
}

