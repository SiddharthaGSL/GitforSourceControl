table "main"."invsitestfdet" {
  primaryKey = {
    columns = [
      "code"
    ]
    name = "invsitestfdet_pk"
    objectType = primaryKey
  }
  columns = (
    column "stfcode" {
      type = bigint
      null = NOT NULL
    }
    column "icode" {
      type = character varying(9)
      null = NOT NULL
    }
    column "stfqty" {
      type = numeric(20,3)
    }
    column "stfrate" {
      type = numeric(20,3)
    }
    column "stfamt" {
      type = numeric(20,2)
    }
    column "remarks" {
      type = character varying(500)
    }
    column "code" {
      type = bigint
      null = NOT NULL
    }
    column "costrate" {
      type = numeric(20,3)
    }
    column "site_costrate" {
      type = numeric(20,3)
    }
    column "dataversion" {
      type = bigint
      null = NOT NULL
    }
    column "invbatch_serial_code" {
      type = bigint
    }
  )
}

foreignKey "main"."invsitestfdet"."r_invsitestfdet_icode" {
  columns = [
    "icode"
  ]
  referencedTable = "main"."invitem"
  referencedColumns = [
    "icode"
  ]
}

foreignKey "main"."invsitestfdet"."r_invsitestfdet_stfcode" {
  columns = [
    "stfcode"
  ]
  referencedTable = "main"."invsitestfmain"
  referencedColumns = [
    "stfcode"
  ]
}

index "main"."invsitestfdet_lk01" {
  table = "main"."invsitestfdet"
  type = btree
  columns = <
    {
      definition = icode
    }

  >
  isUnique = False
}

index "main"."invsitestfdet_lk02" {
  table = "main"."invsitestfdet"
  type = btree
  columns = <
    {
      definition = stfcode
    }

  >
  isUnique = False
}

trigger "main"."invsitestfdet"."t_invsitestfdet" {
  timing = AFTER
  events = [
    DELETE
    UPDATE
    INSERT
  ]
  level = ROW
  function = main.trigger_fct_t_invsitestfdet
  functionArguments = [
  ]
  constraint = False
  updateColumns = [
    stfcode
    icode
    stfqty
    stfrate
    stfamt
  ]
}

trigger "main"."invsitestfdet"."t_invsitestfdet_bi" {
  timing = BEFORE
  events = [
    INSERT
  ]
  level = ROW
  function = main.trigger_fct_t_invsitestfdet_bi
  functionArguments = [
  ]
  constraint = False
}

trigger "main"."invsitestfdet"."t_invsitestfdet_dataversion" {
  timing = BEFORE
  events = [
    UPDATE
    INSERT
  ]
  level = ROW
  function = main.trigger_fct_t_invsitestfdet_dataversion
  functionArguments = [
  ]
  constraint = False
}

