table "main"."invgrtdet" {
  primaryKey = {
    columns = [
      "code"
    ]
    name = "invgrtdet_pk"
    objectType = primaryKey
  }
  columns = (
    column "grtcode" {
      type = bigint
      null = NOT NULL
    }
    column "grtno" {
      type = bigint
    }
    column "grtdt" {
      type = timestamp(0) without time zone
      null = NOT NULL
    }
    column "grccode" {
      type = bigint
    }
    column "loccode" {
      type = bigint
      null = NOT NULL
    }
    column "icode" {
      type = character varying(9)
      null = NOT NULL
    }
    column "qty" {
      type = numeric(20,3)
      default = 0
    }
    column "rate" {
      type = numeric(20,3)
      default = 0
    }
    column "rem" {
      type = character varying(500)
    }
    column "ycode" {
      type = bigint
      null = NOT NULL
    }
    column "rtinvqty" {
      type = numeric(20,3)
    }
    column "grsamt" {
      type = numeric(20,2)
    }
    column "discount" {
      type = numeric(20,2)
    }
    column "taxamt" {
      type = numeric(20,2)
    }
    column "netamt" {
      type = numeric(20,2)
    }
    column "taxchgper" {
      type = numeric(20,3)
    }
    column "dischgper" {
      type = numeric(20,3)
    }
    column "xgrsamt" {
      type = numeric(20,2)
    }
    column "xdiscount" {
      type = numeric(20,2)
    }
    column "xtaxamt" {
      type = numeric(20,2)
    }
    column "xnetamt" {
      type = numeric(20,2)
    }
    column "code" {
      type = bigint
      null = NOT NULL
    }
    column "chgamt" {
      type = numeric(20,2)
    }
    column "effamt" {
      type = numeric(20,2)
    }
    column "invgrcdet_code" {
      type = bigint
    }
    column "excisemain_code" {
      type = bigint
    }
    column "ex_basis" {
      type = character(1)
    }
    column "ex_effrate" {
      type = numeric(20,2)
    }
    column "ex_abtfactor" {
      type = numeric(20,3)
    }
    column "ex_dutyfactor" {
      type = numeric(20,3)
    }
    column "ex_cessfactor" {
      type = numeric(20,3)
    }
    column "ex_roundoff" {
      type = bigint
    }
    column "ex_appamt" {
      type = numeric(20,2)
    }
    column "ex_dutyamt" {
      type = numeric(20,2)
    }
    column "ex_cessamt" {
      type = numeric(20,2)
    }
    column "rsp" {
      type = numeric(20,3)
    }
    column "ex_applicable_from" {
      type = numeric(10,2)
    }
    column "dataversion" {
      type = bigint
      null = NOT NULL
    }
    column "invbatch_serial_code" {
      type = bigint
    }
  )
}

foreignKey "main"."invgrtdet"."invgrtdet_excisemain_code_r01" {
  columns = [
    "excisemain_code"
  ]
  referencedTable = "main"."excisemain"
  referencedColumns = [
    "code"
  ]
}

foreignKey "main"."invgrtdet"."r_invgrtdet_grccode" {
  columns = [
    "grccode"
  ]
  referencedTable = "main"."invgrcmain"
  referencedColumns = [
    "grccode"
  ]
}

foreignKey "main"."invgrtdet"."r_invgrtdet_grtcode" {
  columns = [
    "grtcode"
  ]
  referencedTable = "main"."invgrtmain"
  referencedColumns = [
    "grtcode"
  ]
}

foreignKey "main"."invgrtdet"."r_invgrtdet_icode" {
  columns = [
    "icode"
  ]
  referencedTable = "main"."invitem"
  referencedColumns = [
    "icode"
  ]
}

foreignKey "main"."invgrtdet"."r_invgrtdet_invgrcdet_code" {
  columns = [
    "invgrcdet_code"
  ]
  referencedTable = "main"."invgrcdet"
  referencedColumns = [
    "code"
  ]
}

foreignKey "main"."invgrtdet"."r_invgrtdet_loccode" {
  columns = [
    "loccode"
  ]
  referencedTable = "main"."invloc"
  referencedColumns = [
    "loccode"
  ]
}

foreignKey "main"."invgrtdet"."r_invgrtdet_ycode" {
  columns = [
    "ycode"
  ]
  referencedTable = "main"."admyear"
  referencedColumns = [
    "ycode"
  ]
}

index "main"."invgrtdet_lk01" {
  table = "main"."invgrtdet"
  type = btree
  columns = <
    {
      definition = grccode
    }

  >
  isUnique = False
}

index "main"."invgrtdet_lk02" {
  table = "main"."invgrtdet"
  type = btree
  columns = <
    {
      definition = grtcode
    }

  >
  isUnique = False
}

index "main"."invgrtdet_lk03" {
  table = "main"."invgrtdet"
  type = btree
  columns = <
    {
      definition = icode
    }

  >
  isUnique = False
}

index "main"."invgrtdet_lk04" {
  table = "main"."invgrtdet"
  type = btree
  columns = <
    {
      definition = loccode
    }

  >
  isUnique = False
}

index "main"."invgrtdet_lk05" {
  table = "main"."invgrtdet"
  type = btree
  columns = <
    {
      definition = ycode
    }

  >
  isUnique = False
}

index "main"."invgrtdet_lk06" {
  table = "main"."invgrtdet"
  type = btree
  columns = <
    {
      definition = invgrcdet_code
    }

  >
  isUnique = False
}

index "main"."invgrtdet_lk07" {
  table = "main"."invgrtdet"
  type = btree
  columns = <
    {
      definition = excisemain_code
    }

  >
  isUnique = False
}

index "main"."u_invgrtdet_grtcd_grccd_icd_rt" {
  table = "main"."invgrtdet"
  type = btree
  columns = <
    {
      definition = grtcode
    }

    {
      definition = icode
    }

    {
      definition = rate
    }

    {
      definition = invgrcdet_code
    }

    {
      definition = invbatch_serial_code
    }

  >
  isUnique = True
}

trigger "main"."invgrtdet"."t_a_invgrtdet" {
  timing = AFTER
  events = [
    DELETE
    UPDATE
    INSERT
  ]
  level = ROW
  function = main.trigger_fct_t_a_invgrtdet
  functionArguments = [
  ]
  constraint = False
  updateColumns = [
    grtcode
    icode
    qty
    rate
    ycode
    rtinvqty
    grsamt
    discount
    taxamt
    netamt
    taxchgper
    dischgper
    chgamt
    effamt
  ]
}

trigger "main"."invgrtdet"."t_invgrtdet" {
  timing = AFTER
  events = [
    DELETE
    UPDATE
    INSERT
  ]
  level = ROW
  function = main.trigger_fct_t_invgrtdet
  functionArguments = [
  ]
  constraint = False
  updateColumns = [
    grtcode
    icode
    qty
    rate
    ycode
    grsamt
    discount
    taxamt
    netamt
    taxchgper
    dischgper
    chgamt
    effamt
  ]
}

trigger "main"."invgrtdet"."t_invgrtdet_bi" {
  timing = BEFORE
  events = [
    INSERT
  ]
  level = ROW
  function = main.trigger_fct_t_invgrtdet_bi
  functionArguments = [
  ]
  constraint = False
}

trigger "main"."invgrtdet"."t_invgrtdet_dataversion" {
  timing = BEFORE
  events = [
    UPDATE
    INSERT
  ]
  level = ROW
  function = main.trigger_fct_t_invgrtdet_dataversion
  functionArguments = [
  ]
  constraint = False
}

