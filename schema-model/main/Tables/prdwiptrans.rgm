table "main"."prdwiptrans" {
  primaryKey = {
    columns = [
      "code"
    ]
    name = "p_prdwiptrans_code"
    objectType = primaryKey
  }
  columns = (
    column "code" {
      type = bigint
      null = NOT NULL
    }
    column "txn_type" {
      type = character varying(3)
      null = NOT NULL
    }
    column "lotcode" {
      type = bigint
    }
    column "jobcode" {
      type = bigint
    }
    column "wiptxn_code" {
      type = bigint
    }
    column "jrccode" {
      type = bigint
    }
    column "operation_seq" {
      type = numeric(7,3)
      null = NOT NULL
    }
    column "pcode" {
      type = bigint
    }
    column "prcode" {
      type = bigint
      null = NOT NULL
    }
    column "assembly_icode" {
      type = character varying(9)
      null = NOT NULL
    }
    column "component_icode" {
      type = character varying(9)
    }
    column "item_type" {
      type = character varying(3)
      null = NOT NULL
    }
    column "assembly_wip" {
      type = numeric(20,3)
    }
    column "txn_qty" {
      type = numeric(20,3)
    }
    column "rate" {
      type = numeric(20,6)
    }
    column "amount" {
      type = numeric(20,6)
    }
    column "admsite_code" {
      type = bigint
      null = NOT NULL
    }
    column "cnlcode" {
      type = bigint
    }
    column "jobber_loccode" {
      type = bigint
    }
    column "det_code" {
      type = bigint
      null = NOT NULL
    }
    column "ass_saitem_code" {
      type = bigint
    }
    column "com_saitem_code" {
      type = bigint
    }
    column "txn_date" {
      type = timestamp(0) without time zone
    }
    column "job_assembly_icode" {
      type = character varying(9)
    }
    column "wipclr_code" {
      type = bigint
    }
    column "srv_amount" {
      type = numeric(20,6)
    }
    column "prd_wiptrack_code" {
      type = bigint
    }
    column "admou_code" {
      type = bigint
      null = NOT NULL
    }
    column "cogs_code" {
      type = bigint
    }
    column "invbatch_serial_code" {
      type = bigint
    }
  )
}

foreignKey "main"."prdwiptrans"."r_prdwiptr_prd_wiptrack_code" {
  columns = [
    "prd_wiptrack_code"
  ]
  referencedTable = "main"."prd_wiptrack"
  referencedColumns = [
    "code"
  ]
}

foreignKey "main"."prdwiptrans"."r_prdwiptrans_admou_code" {
  columns = [
    "admou_code"
  ]
  referencedTable = "main"."admou"
  referencedColumns = [
    "code"
  ]
}

foreignKey "main"."prdwiptrans"."r_prdwiptrans_admsite_code" {
  columns = [
    "admsite_code"
  ]
  referencedTable = "main"."admsite"
  referencedColumns = [
    "code"
  ]
}

foreignKey "main"."prdwiptrans"."r_prdwiptrans_aicode" {
  columns = [
    "assembly_icode"
  ]
  referencedTable = "main"."invitem"
  referencedColumns = [
    "icode"
  ]
}

foreignKey "main"."prdwiptrans"."r_prdwiptrans_ass_saitem_cd" {
  columns = [
    "ass_saitem_code"
  ]
  referencedTable = "main"."prd_saitem"
  referencedColumns = [
    "code"
  ]
}

foreignKey "main"."prdwiptrans"."r_prdwiptrans_cicode" {
  columns = [
    "component_icode"
  ]
  referencedTable = "main"."invitem"
  referencedColumns = [
    "icode"
  ]
}

foreignKey "main"."prdwiptrans"."r_prdwiptrans_cnlcode" {
  columns = [
    "cnlcode"
  ]
  referencedTable = "main"."prdjobcnlmain"
  referencedColumns = [
    "code"
  ]
}

foreignKey "main"."prdwiptrans"."r_prdwiptrans_com_saitem_cd" {
  columns = [
    "com_saitem_code"
  ]
  referencedTable = "main"."prd_saitem"
  referencedColumns = [
    "code"
  ]
}

foreignKey "main"."prdwiptrans"."r_prdwiptrans_jobber_loccode" {
  columns = [
    "jobber_loccode"
  ]
  referencedTable = "main"."invloc"
  referencedColumns = [
    "loccode"
  ]
}

foreignKey "main"."prdwiptrans"."r_prdwiptrans_jobcode" {
  columns = [
    "jobcode"
  ]
  referencedTable = "main"."prdjobmain"
  referencedColumns = [
    "code"
  ]
}

foreignKey "main"."prdwiptrans"."r_prdwiptrans_lotcode" {
  columns = [
    "lotcode"
  ]
  referencedTable = "main"."prdlotmain"
  referencedColumns = [
    "code"
  ]
}

foreignKey "main"."prdwiptrans"."r_prdwiptrans_pcode" {
  columns = [
    "pcode"
  ]
  referencedTable = "main"."finsl"
  referencedColumns = [
    "slcode"
  ]
}

foreignKey "main"."prdwiptrans"."r_prdwiptrans_prcode" {
  columns = [
    "prcode"
  ]
  referencedTable = "main"."prdpr"
  referencedColumns = [
    "prcode"
  ]
}

foreignKey "main"."prdwiptrans"."r_prdwiptrans_wipclr_code" {
  columns = [
    "wipclr_code"
  ]
  referencedTable = "main"."prdwipclrmain"
  referencedColumns = [
    "code"
  ]
}

foreignKey "main"."prdwiptrans"."r_prdwiptrans_wiptxn_code" {
  columns = [
    "wiptxn_code"
  ]
  referencedTable = "main"."prdwipmain"
  referencedColumns = [
    "code"
  ]
}

index "main"."i_prdwiptrans_txn_date" {
  table = "main"."prdwiptrans"
  type = btree
  columns = <
    {
      definition = txn_date
    }

  >
  isUnique = False
}

index "main"."i_trans_item_ers_cicode" {
  table = "main"."prdwiptrans"
  type = btree
  columns = <
    {
      definition = txn_type
    }

    {
      definition = item_type
    }

    {
      definition = det_code
    }

    {
      definition = component_icode
    }

  >
  isUnique = False
}

index "main"."i01_prdwiptrans" {
  table = "main"."prdwiptrans"
  type = btree
  columns = <
    {
      definition = prd_wiptrack_code
    }

  >
  isUnique = False
}

index "main"."indx_prdwiptrans_lk14" {
  table = "main"."prdwiptrans"
  type = btree
  columns = <
    {
      definition = lotcode
    }

    {
      definition = prcode
    }

    {
      definition = operation_seq
    }

    {
      definition = assembly_icode
    }

    {
      definition = admsite_code
    }

  >
  isUnique = False
}

index "main"."prdwiptrans_lk01" {
  table = "main"."prdwiptrans"
  type = btree
  columns = <
    {
      definition = assembly_icode
    }

  >
  isUnique = False
}

index "main"."prdwiptrans_lk02" {
  table = "main"."prdwiptrans"
  type = btree
  columns = <
    {
      definition = component_icode
    }

  >
  isUnique = False
}

index "main"."prdwiptrans_lk03" {
  table = "main"."prdwiptrans"
  type = btree
  columns = <
    {
      definition = jobcode
    }

  >
  isUnique = False
}

index "main"."prdwiptrans_lk04" {
  table = "main"."prdwiptrans"
  type = btree
  columns = <
    {
      definition = lotcode
    }

  >
  isUnique = False
}

index "main"."prdwiptrans_lk05" {
  table = "main"."prdwiptrans"
  type = btree
  columns = <
    {
      definition = pcode
    }

  >
  isUnique = False
}

index "main"."prdwiptrans_lk06" {
  table = "main"."prdwiptrans"
  type = btree
  columns = <
    {
      definition = prcode
    }

  >
  isUnique = False
}

index "main"."prdwiptrans_lk07" {
  table = "main"."prdwiptrans"
  type = btree
  columns = <
    {
      definition = wiptxn_code
    }

  >
  isUnique = False
}

index "main"."prdwiptrans_lk08" {
  table = "main"."prdwiptrans"
  type = btree
  columns = <
    {
      definition = admsite_code
    }

  >
  isUnique = False
}

index "main"."prdwiptrans_lk09" {
  table = "main"."prdwiptrans"
  type = btree
  columns = <
    {
      definition = cnlcode
    }

  >
  isUnique = False
}

index "main"."prdwiptrans_lk10" {
  table = "main"."prdwiptrans"
  type = btree
  columns = <
    {
      definition = jobber_loccode
    }

  >
  isUnique = False
}

index "main"."prdwiptrans_lk11" {
  table = "main"."prdwiptrans"
  type = btree
  columns = <
    {
      definition = ass_saitem_code
    }

  >
  isUnique = False
}

index "main"."prdwiptrans_lk12" {
  table = "main"."prdwiptrans"
  type = btree
  columns = <
    {
      definition = com_saitem_code
    }

  >
  isUnique = False
}

index "main"."prdwiptrans_lk13" {
  table = "main"."prdwiptrans"
  type = btree
  columns = <
    {
      definition = wipclr_code
    }

  >
  isUnique = False
}

index "main"."prdwiptrans_lk15" {
  table = "main"."prdwiptrans"
  type = btree
  columns = <
    {
      definition = admou_code
    }

  >
  isUnique = False
}

trigger "main"."prdwiptrans"."t_prdwiptrans_cogs_state" {
  timing = BEFORE
  events = [
    DELETE
    UPDATE
    INSERT
  ]
  level = ROW
  function = main.trigger_fct_t_prdwiptrans_cogs_state
  functionArguments = [
  ]
  constraint = False
}

