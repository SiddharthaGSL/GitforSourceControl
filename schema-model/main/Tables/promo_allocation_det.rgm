table "main"."promo_allocation_det" {
  primaryKey = {
    columns = [
      "code"
    ]
    name = "promo_allocation_det_pk"
    objectType = primaryKey
  }
  columns = (
    column "allocation_code" {
      type = bigint
      null = NOT NULL
    }
    column "ho_matching_code" {
      type = character varying(12)
    }
    column "promo_code" {
      type = bigint
      null = NOT NULL
    }
    column "priority" {
      type = bigint
    }
    column "activation_type" {
      type = character(1)
      null = NOT NULL
    }
    column "startdate" {
      type = timestamp(0) without time zone
    }
    column "enddate" {
      type = timestamp(0) without time zone
    }
    column "starttime" {
      type = timestamp(0) without time zone
    }
    column "endtime" {
      type = timestamp(0) without time zone
    }
    column "closurecomment" {
      type = character varying(500)
    }
    column "ischanged" {
      type = character(1)
      null = NOT NULL
      default = 'Y'::bpchar
    }
    column "approved" {
      type = character(1)
      null = NOT NULL
    }
    column "allocatedby" {
      type = bigint
    }
    column "allocatedon" {
      type = timestamp(0) without time zone
    }
    column "lastmodifiedby" {
      type = bigint
    }
    column "lastmodifiedon" {
      type = timestamp(0) without time zone
    }
    column "closedby" {
      type = bigint
    }
    column "closedon" {
      type = timestamp(0) without time zone
    }
    column "approvedby" {
      type = bigint
    }
    column "approvedon" {
      type = timestamp(0) without time zone
    }
    column "lastsenton" {
      type = timestamp(0) without time zone
    }
    column "code" {
      type = bigint
      null = NOT NULL
    }
  )
}

foreignKey "main"."promo_allocation_det"."promo_alloc_det_alloc_code_r01" {
  columns = [
    "allocation_code"
  ]
  referencedTable = "main"."promo_allocation"
  referencedColumns = [
    "code"
  ]
}

foreignKey "main"."promo_allocation_det"."promo_alloc_det_allocby_r03" {
  columns = [
    "allocatedby"
  ]
  referencedTable = "main"."hrdemp"
  referencedColumns = [
    "ecode"
  ]
}

foreignKey "main"."promo_allocation_det"."promo_alloc_det_apprby_r06" {
  columns = [
    "approvedby"
  ]
  referencedTable = "main"."hrdemp"
  referencedColumns = [
    "ecode"
  ]
}

foreignKey "main"."promo_allocation_det"."promo_alloc_det_closedby_r05" {
  columns = [
    "closedby"
  ]
  referencedTable = "main"."hrdemp"
  referencedColumns = [
    "ecode"
  ]
}

foreignKey "main"."promo_allocation_det"."promo_alloc_det_lastmodiby_r04" {
  columns = [
    "lastmodifiedby"
  ]
  referencedTable = "main"."hrdemp"
  referencedColumns = [
    "ecode"
  ]
}

foreignKey "main"."promo_allocation_det"."promo_alloc_det_promo_code_r02" {
  columns = [
    "promo_code"
  ]
  referencedTable = "main"."promo_master"
  referencedColumns = [
    "code"
  ]
}

index "main"."promo_alloc_det_alcd_prty_u01" {
  table = "main"."promo_allocation_det"
  type = btree
  columns = <
    {
      definition = allocation_code
    }

    {
      definition = priority
    }

  >
  isUnique = True
}

index "main"."promo_allocation_det_lk01" {
  table = "main"."promo_allocation_det"
  type = btree
  columns = <
    {
      definition = allocatedby
    }

  >
  isUnique = False
}

index "main"."promo_allocation_det_lk02" {
  table = "main"."promo_allocation_det"
  type = btree
  columns = <
    {
      definition = allocation_code
    }

  >
  isUnique = False
}

index "main"."promo_allocation_det_lk03" {
  table = "main"."promo_allocation_det"
  type = btree
  columns = <
    {
      definition = approvedby
    }

  >
  isUnique = False
}

index "main"."promo_allocation_det_lk04" {
  table = "main"."promo_allocation_det"
  type = btree
  columns = <
    {
      definition = closedby
    }

  >
  isUnique = False
}

index "main"."promo_allocation_det_lk05" {
  table = "main"."promo_allocation_det"
  type = btree
  columns = <
    {
      definition = lastmodifiedby
    }

  >
  isUnique = False
}

index "main"."promo_allocation_det_lk06" {
  table = "main"."promo_allocation_det"
  type = btree
  columns = <
    {
      definition = promo_code
    }

  >
  isUnique = False
}

trigger "main"."promo_allocation_det"."t_promo_allocation_det_bi" {
  timing = BEFORE
  events = [
    INSERT
  ]
  level = ROW
  function = main.trigger_fct_t_promo_allocation_det_bi
  functionArguments = [
  ]
  constraint = False
}

