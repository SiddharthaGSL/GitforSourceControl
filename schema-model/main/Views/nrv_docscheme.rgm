view "main"."nrv_docscheme" {
  text = """-
SELECT admdocscheme.doccode AS code,
    admdocscheme.docname AS scheme_name,
    admdocscheme.width,
    admdocscheme.starting AS starting_from,
    admdocscheme.prefill,
    admdocscheme.prefix,
        CASE
            WHEN (admdocscheme.default_suffix = 'N'::bpchar) THEN 'No'::text
            WHEN (admdocscheme.default_suffix = 'Y'::bpchar) THEN 'Yes'::text
            ELSE NULL::text
        END AS attach_date_in_suffix,
    admdocscheme.suffix,
        CASE
            WHEN (admdocscheme.generation_interval = 'Y'::bpchar) THEN 'Yearly'::text
            WHEN (admdocscheme.generation_interval = 'M'::bpchar) THEN 'Monthly'::text
            WHEN (admdocscheme.generation_interval = 'D'::bpchar) THEN 'Daily'::text
            WHEN (admdocscheme.generation_interval = 'N'::bpchar) THEN 'Do Not Reset'::text
            ELSE NULL::text
        END AS generation_interval,
        CASE
            WHEN (admdocscheme.doccode_wise = 'N'::bpchar) THEN 'Menu Wise'::text
            WHEN (admdocscheme.doccode_wise = 'Y'::bpchar) THEN 'Numbering Scheme Wise'::text
            ELSE NULL::text
        END AS generation_dependency,
    admdocscheme.default_suffix_musk AS suffix_date_musk,
        CASE
            WHEN (admdocscheme.suffix_attachment = 'N'::bpchar) THEN 'No'::text
            WHEN (admdocscheme.suffix_attachment = 'Y'::bpchar) THEN 'Yes'::text
            ELSE NULL::text
        END AS suffix_attachment,
    admdocscheme.seperator1 AS separator1,
    admdocscheme.seperator2 AS separator2,
    admdocscheme.remarks AS description,
        CASE
            WHEN (admdocscheme.manual = 'Y'::bpchar) THEN 'Yes'::text
            WHEN (admdocscheme.manual = 'N'::bpchar) THEN 'No'::text
            ELSE NULL::text
        END AS is_manual,
    admdocscheme.doc AS created_on,
    admdocscheme.dom AS modified_on,
        CASE
            WHEN (admdocscheme.ext = 'Y'::bpchar) THEN 'Yes'::text
            WHEN (admdocscheme.ext = 'N'::bpchar) THEN 'No'::text
            ELSE NULL::text
        END AS extinct,
        CASE
            WHEN (admdocscheme.manual = 'Y'::bpchar) THEN '(MANUAL)'::character varying
            ELSE admdocscheme.sample_docno
        END AS sample_no,
        CASE
            WHEN (admdocscheme.generation_basis = 'C'::bpchar) THEN 'Organization Group'::text
            WHEN (admdocscheme.generation_basis = 'O'::bpchar) THEN 'Organization Unit'::text
            WHEN (admdocscheme.generation_basis = 'S'::bpchar) THEN 'Site'::text
            ELSE NULL::text
        END AS generation_basis,
        CASE
            WHEN (admdocscheme.isexcise = 'Y'::bpchar) THEN 'Yes'::text
            WHEN (admdocscheme.isexcise = 'N'::bpchar) THEN 'No'::text
            ELSE NULL::text
        END AS excise_applicable,
        CASE
            WHEN (COALESCE(admdocscheme.basedon, 'A'::bpchar) = 'A'::bpchar) THEN 'Accounting Period'::text
            WHEN (COALESCE(admdocscheme.basedon, 'A'::bpchar) = 'S'::bpchar) THEN 'System Date'::text
            ELSE NULL::text
        END AS date_masking_based_on,
        CASE
            WHEN (admdocscheme.gstappl = 'N'::bpchar) THEN 'No'::text
            WHEN (admdocscheme.gstappl = 'Y'::bpchar) THEN 'Invoice'::text
            WHEN (admdocscheme.gstappl = 'C'::bpchar) THEN 'Credit Note'::text
            WHEN (admdocscheme.gstappl = 'D'::bpchar) THEN 'Debit Note'::text
            ELSE NULL::text
        END AS gst_applicability,
        CASE
            WHEN ((admdocscheme.isexcise = 'Y'::bpchar) AND (admdocscheme.gstappl = 'N'::bpchar)) THEN 'Excise Documents'::text
            WHEN ((admdocscheme.isexcise = 'N'::bpchar) AND (admdocscheme.gstappl = 'Y'::bpchar)) THEN 'GST Documents - Invoice'::text
            WHEN ((admdocscheme.isexcise = 'N'::bpchar) AND (admdocscheme.gstappl = 'D'::bpchar)) THEN 'GST Documents - Debit Note'::text
            WHEN ((admdocscheme.isexcise = 'N'::bpchar) AND (admdocscheme.gstappl = 'C'::bpchar)) THEN 'GST Documents - Credit Note'::text
            WHEN ((admdocscheme.isexcise = 'N'::bpchar) AND (admdocscheme.gstappl = 'N'::bpchar) AND (admdocscheme.batchappl <> 'Y'::bpchar)) THEN 'Other Documents'::text
            WHEN (admdocscheme.batchappl = 'Y'::bpchar) THEN 'Batch Serial'::text
            ELSE NULL::text
        END AS document_type,
        CASE
            WHEN (admdocscheme.batchappl = 'Y'::bpchar) THEN 'Yes'::text
            WHEN (admdocscheme.batchappl = 'N'::bpchar) THEN 'No'::text
            ELSE NULL::text
        END AS batchappl
   FROM main.admdocscheme;
"""
  columns = (
    column "code" {
      type = "bigint"
    }
    column "scheme_name" {
      type = "character varying(100)"
    }
    column "width" {
      type = "bigint"
    }
    column "starting_from" {
      type = "bigint"
    }
    column "prefill" {
      type = "character(1)"
    }
    column "prefix" {
      type = "character varying(24)"
    }
    column "attach_date_in_suffix" {
      type = text
    }
    column "suffix" {
      type = "character varying(24)"
    }
    column "generation_interval" {
      type = text
    }
    column "generation_dependency" {
      type = text
    }
    column "suffix_date_musk" {
      type = "character varying(10)"
    }
    column "suffix_attachment" {
      type = text
    }
    column "separator1" {
      type = "character(1)"
    }
    column "separator2" {
      type = "character(1)"
    }
    column "description" {
      type = "character varying(500)"
    }
    column "is_manual" {
      type = text
    }
    column "created_on" {
      type = "timestamp(0) without time zone"
    }
    column "modified_on" {
      type = "timestamp(0) without time zone"
    }
    column "extinct" {
      type = text
    }
    column "sample_no" {
      type = "character varying"
    }
    column "generation_basis" {
      type = text
    }
    column "excise_applicable" {
      type = text
    }
    column "date_masking_based_on" {
      type = text
    }
    column "gst_applicability" {
      type = text
    }
    column "document_type" {
      type = text
    }
    column "batchappl" {
      type = text
    }
  )
}

