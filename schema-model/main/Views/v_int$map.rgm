view "main"."v_int$map" {
  text = """-
SELECT a.colseq,
    a.code,
    a.classname,
    a.colname,
    a.coldesc,
    a.datatype,
    a."precision",
    a.scale,
        CASE
            WHEN ((a.datatype)::text = ANY (ARRAY[('CHAR'::character varying)::text, ('VARCHAR2'::character varying)::text])) THEN (concat_ws(''::text, 'CHARACTER', ' (', a."precision",
            CASE COALESCE((a.scale)::numeric, (0)::numeric)
                WHEN 0 THEN ')'::text
                ELSE concat_ws(''::text, ',', a.scale, ')')
            END))::character varying
            WHEN ((a.datatype)::text = 'NUMBER'::text) THEN (concat_ws(''::text, 'NUMERIC', ' (', a."precision",
            CASE COALESCE((a.scale)::numeric, (0)::numeric)
                WHEN 0 THEN ')'::text
                ELSE concat_ws(''::text, ',', a.scale, ')')
            END))::character varying
            ELSE a.datatype
        END AS datatype_display,
    a.mandatory,
    a.default_value,
    COALESCE(a.lookup_available, 'N'::bpchar) AS lookup_available,
    a.lookup_sql,
    b.mapname,
    ( SELECT b1.mapcolname
           FROM main."int$mapping" b1
          WHERE (((b1.mapname)::text = (b.mapname)::text) AND (b1.metadata_code = a.code))) AS mapcolname,
    ( SELECT b1.mapcellref
           FROM main."int$mapping" b1
          WHERE (((b1.mapname)::text = (b.mapname)::text) AND (b1.metadata_code = a.code))) AS mapcellref,
        CASE
            WHEN ((b.mapname)::text = 'None'::text) THEN a.default_value
            ELSE ( SELECT b1.default_value
               FROM main."int$mapping" b1
              WHERE (((b1.mapname)::text = (b.mapname)::text) AND (b1.metadata_code = a.code)))
        END AS map_default_value
   FROM main."int$metadata" a,
    ( SELECT DISTINCT m.mapname,
            m.classname
           FROM main."int$mapping" m
        UNION ALL
         SELECT 'None'::character varying AS "varchar",
            "int$class".classname
           FROM main."int$class") b
  WHERE ((a.classname)::text = (b.classname)::text);
"""
  columns = (
    column "colseq" {
      type = "bigint"
    }
    column "code" {
      type = "bigint"
    }
    column "classname" {
      type = "character varying(20)"
    }
    column "colname" {
      type = "character varying(30)"
    }
    column "coldesc" {
      type = "character varying(500)"
    }
    column "datatype" {
      type = "character varying(30)"
    }
    column "precision" {
      type = "bigint"
    }
    column "scale" {
      type = "bigint"
    }
    column "datatype_display" {
      type = "character varying"
    }
    column "mandatory" {
      type = "character(1)"
    }
    column "default_value" {
      type = "character varying(100)"
    }
    column "lookup_available" {
      type = bpchar
    }
    column "lookup_sql" {
      type = "character varying(4000)"
    }
    column "mapname" {
      type = "character varying"
    }
    column "mapcolname" {
      type = "character varying(100)"
    }
    column "mapcellref" {
      type = "character varying(100)"
    }
    column "map_default_value" {
      type = "character varying(100)"
    }
  )
}

