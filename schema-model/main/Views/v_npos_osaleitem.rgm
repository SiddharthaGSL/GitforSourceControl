view "main"."v_npos_osaleitem" {
  text = """-
SELECT DISTINCT m.admsite_code AS site_code,
    m.cscode AS parentid,
    i.icode AS itemid,
    COALESCE(i.barcode, i.icode) AS barcode,
        CASE
            WHEN (i.item_name IS NOT NULL) THEN (i.item_name)::text
            ELSE "substring"(concat_ws(''::text, i.cname1, ' ', i.cname2, ' ', i.cname3, ' ', i.cname4, ' ', i.cname5, ' ', i.cname6), 1, 80)
        END AS name,
    i.shrtname AS shortname,
    i.invarticle_code AS articleid,
    i.cname1 AS cat1,
    i.cname2 AS cat2,
    i.cname3 AS cat3,
    i.cname4 AS cat4,
    i.cname5 AS cat5,
    i.cname6 AS cat6,
    NULL::text AS cat7,
    NULL::text AS cat8,
        CASE
            WHEN (i.noninventory = 'Y'::bpchar) THEN 0
            ELSE 1
        END AS isinventoryitem,
        CASE
            WHEN (i.allow_price_modification = 'Y'::bpchar) THEN 1
            ELSE 0
        END AS allowpricechangeinpos,
    i.unitname AS uom,
    i.barunit AS salefactor,
        CASE
            WHEN (COALESCE(i.autoqtypopup, 'N'::bpchar) = 'N'::bpchar) THEN 0
            WHEN (COALESCE(i.autoqtypopup, 'N'::bpchar) = 'Y'::bpchar) THEN 1
            ELSE NULL::integer
        END AS autoqtypopup,
    i.taxcode AS vatcode,
    i.listed_mrp AS mrp,
    i.mrp AS rsp,
    i.block_sale AS blocksale,
    i.block_sale_before AS blocksalebefore,
    i.block_sale_after AS blocksaleafter,
    i.block_sale_reason AS blocksalereason,
        CASE
            WHEN (i.negative_stock_alert = 'I'::bpchar) THEN 'Ignore'::text
            WHEN (i.negative_stock_alert = 'W'::bpchar) THEN 'Warn'::text
            WHEN (i.negative_stock_alert = 'S'::bpchar) THEN 'Stop'::text
            WHEN (i.negative_stock_alert = 'P'::bpchar) THEN 'Policy'::text
            ELSE NULL::text
        END AS negativestockalert,
    i.isprice_excludes_tax AS ispriceincludestax,
    i.pos_multiprice_action AS multipriceactioninpos,
    0 AS iscyclecountinprogress,
        CASE
            WHEN (i.ismetal = 'Y'::bpchar) THEN 1
            ELSE 0
        END AS ismetal,
    i.price_terms AS priceterm,
    i.price_basis AS pricebasis,
    i.invmetal_code AS metalid,
    i.net_weight AS netweight,
    i.grs_weight AS grossweight,
    i.job_cost_basis AS jobcostbasis,
    i.job_cost_amt AS jobcostamt,
    i.part_qty AS partqty,
    i.certificate_no AS certificateno,
    i.d_count AS dcount,
    i.d_size AS dsize,
    i.d_weight AS dweight,
    i.d_value AS dvalue,
    i.d_desc AS ddesc,
    i.c_count AS ccount,
    i.c_weight AS cweight,
    i.c_value AS cvalue,
    i.c_desc AS cdesc,
    i.o_count AS ocount,
    i.o_weight AS oweight,
    i.o_value AS ovalue,
    i.o_desc AS odesc,
    i.other_chg AS othercharge,
    i.desc1,
    i.desc2,
    i.desc3,
    i.desc4,
    i.desc5,
    i.desc6,
    i.num1,
    i.num2,
    i.num3,
    i.generated,
    i.pos_return_behavior AS posreturnbehavior,
    i.price_change_limit AS pricechangelimit,
    i.invhsnsacmain_code AS hsnsacmasterid,
        CASE
            WHEN (i.ext = 'Y'::bpchar) THEN 1
            ELSE 0
        END AS isextinct,
    i.udfstring01,
    i.udfstring02,
    i.udfstring03,
    i.udfstring04,
    i.udfstring05,
    i.udfstring06,
    i.udfstring07,
    i.udfstring08,
    i.udfstring09,
    i.udfstring10,
    i.udfnum01,
    i.udfnum02,
    i.udfnum03,
    i.udfnum04,
    i.udfnum05,
    i.udfdate01,
    i.udfdate02,
    i.udfdate03,
    i.udfdate04,
    i.udfdate05,
    i.item_management_mode,
    i.price_management,
        CASE
            WHEN (i.manage_expiry = 'Y'::bpchar) THEN 1
            ELSE 0
        END AS manage_expiry,
    i.validity_mode,
    i.validity_period,
    i.pos_batch_selection_mode
   FROM main.invitem i,
    main.salcsmain m,
    main.salcsdet d,
    main.admsite s
  WHERE ((m.cscode = d.cscode) AND ((d.icode)::text = (i.icode)::text) AND (m.admsite_code = s.code) AND ((s.sitetype)::text ~~ 'MS-%'::text))
UNION ALL
 SELECT DISTINCT m.admsite_code AS site_code,
    m.sscode AS parentid,
    i.icode AS itemid,
    COALESCE(i.barcode, i.icode) AS barcode,
        CASE
            WHEN (i.item_name IS NOT NULL) THEN (i.item_name)::text
            ELSE "substring"(concat_ws(''::text, i.cname1, ' ', i.cname2, ' ', i.cname3, ' ', i.cname4, ' ', i.cname5, ' ', i.cname6), 1, 80)
        END AS name,
    i.shrtname AS shortname,
    i.invarticle_code AS articleid,
    i.cname1 AS cat1,
    i.cname2 AS cat2,
    i.cname3 AS cat3,
    i.cname4 AS cat4,
    i.cname5 AS cat5,
    i.cname6 AS cat6,
    NULL::text AS cat7,
    NULL::text AS cat8,
        CASE
            WHEN (i.noninventory = 'Y'::bpchar) THEN 0
            ELSE 1
        END AS isinventoryitem,
        CASE
            WHEN (i.allow_price_modification = 'Y'::bpchar) THEN 1
            ELSE 0
        END AS allowpricechangeinpos,
    i.unitname AS uom,
    i.barunit AS salefactor,
        CASE
            WHEN (COALESCE(i.autoqtypopup, 'N'::bpchar) = 'N'::bpchar) THEN 0
            WHEN (COALESCE(i.autoqtypopup, 'N'::bpchar) = 'Y'::bpchar) THEN 1
            ELSE NULL::integer
        END AS autoqtypopup,
    i.taxcode AS vatcode,
    i.listed_mrp AS mrp,
    i.mrp AS rsp,
    i.block_sale AS blocksale,
    i.block_sale_before AS blocksalebefore,
    i.block_sale_after AS blocksaleafter,
    i.block_sale_reason AS blocksalereason,
        CASE
            WHEN (i.negative_stock_alert = 'I'::bpchar) THEN 'Ignore'::text
            WHEN (i.negative_stock_alert = 'W'::bpchar) THEN 'Warn'::text
            WHEN (i.negative_stock_alert = 'S'::bpchar) THEN 'Stop'::text
            WHEN (i.negative_stock_alert = 'P'::bpchar) THEN 'Policy'::text
            ELSE NULL::text
        END AS negativestockalert,
    i.isprice_excludes_tax AS ispriceincludestax,
    i.pos_multiprice_action AS multipriceactioninpos,
    0 AS iscyclecountinprogress,
        CASE
            WHEN (i.ismetal = 'Y'::bpchar) THEN 1
            ELSE 0
        END AS ismetal,
    i.price_terms AS priceterm,
    i.price_basis AS pricebasis,
    i.invmetal_code AS metalid,
    i.net_weight AS netweight,
    i.grs_weight AS grossweight,
    i.job_cost_basis AS jobcostbasis,
    i.job_cost_amt AS jobcostamt,
    i.part_qty AS partqty,
    i.certificate_no AS certificateno,
    i.d_count AS dcount,
    i.d_size AS dsize,
    i.d_weight AS dweight,
    i.d_value AS dvalue,
    i.d_desc AS ddesc,
    i.c_count AS ccount,
    i.c_weight AS cweight,
    i.c_value AS cvalue,
    i.c_desc AS cdesc,
    i.o_count AS ocount,
    i.o_weight AS oweight,
    i.o_value AS ovalue,
    i.o_desc AS odesc,
    i.other_chg AS othercharge,
    i.desc1,
    i.desc2,
    i.desc3,
    i.desc4,
    i.desc5,
    i.desc6,
    i.num1,
    i.num2,
    i.num3,
    i.generated,
    i.pos_return_behavior AS posreturnbehavior,
    i.price_change_limit AS pricechangelimit,
    i.invhsnsacmain_code AS hsnsacmasterid,
        CASE
            WHEN (i.ext = 'Y'::bpchar) THEN 1
            ELSE 0
        END AS isextinct,
    i.udfstring01,
    i.udfstring02,
    i.udfstring03,
    i.udfstring04,
    i.udfstring05,
    i.udfstring06,
    i.udfstring07,
    i.udfstring08,
    i.udfstring09,
    i.udfstring10,
    i.udfnum01,
    i.udfnum02,
    i.udfnum03,
    i.udfnum04,
    i.udfnum05,
    i.udfdate01,
    i.udfdate02,
    i.udfdate03,
    i.udfdate04,
    i.udfdate05,
    i.item_management_mode,
    i.price_management,
        CASE
            WHEN (i.manage_expiry = 'Y'::bpchar) THEN 1
            ELSE 0
        END AS manage_expiry,
    i.validity_mode,
    i.validity_period,
    i.pos_batch_selection_mode
   FROM main.invitem i,
    main.salssmain m,
    main.salssdet d,
    main.admsite s
  WHERE ((m.sscode = d.sscode) AND ((d.icode)::text = (i.icode)::text) AND (m.admsite_code = s.code) AND ((s.sitetype)::text ~~ 'MS-%'::text));
"""
  columns = (
    column "site_code" {
      type = "bigint"
    }
    column "parentid" {
      type = "bigint"
    }
    column "itemid" {
      type = "character varying(9)"
    }
    column "barcode" {
      type = "character varying"
    }
    column "name" {
      type = text
    }
    column "shortname" {
      type = "character varying(25)"
    }
    column "articleid" {
      type = "bigint"
    }
    column "cat1" {
      type = "character varying(100)"
    }
    column "cat2" {
      type = "character varying(100)"
    }
    column "cat3" {
      type = "character varying(100)"
    }
    column "cat4" {
      type = "character varying(100)"
    }
    column "cat5" {
      type = "character varying(100)"
    }
    column "cat6" {
      type = "character varying(100)"
    }
    column "cat7" {
      type = text
    }
    column "cat8" {
      type = text
    }
    column "isinventoryitem" {
      type = "integer"
    }
    column "allowpricechangeinpos" {
      type = "integer"
    }
    column "uom" {
      type = "character varying(100)"
    }
    column "salefactor" {
      type = "numeric(20,3)"
    }
    column "autoqtypopup" {
      type = "integer"
    }
    column "vatcode" {
      type = "bigint"
    }
    column "mrp" {
      type = "numeric(20,3)"
    }
    column "rsp" {
      type = "numeric(20,3)"
    }
    column "blocksale" {
      type = "bigint"
    }
    column "blocksalebefore" {
      type = "timestamp(0) without time zone"
    }
    column "blocksaleafter" {
      type = "timestamp(0) without time zone"
    }
    column "blocksalereason" {
      type = "character varying(200)"
    }
    column "negativestockalert" {
      type = text
    }
    column "ispriceincludestax" {
      type = "bigint"
    }
    column "multipriceactioninpos" {
      type = "character(1)"
    }
    column "iscyclecountinprogress" {
      type = "integer"
    }
    column "ismetal" {
      type = "integer"
    }
    column "priceterm" {
      type = "character(1)"
    }
    column "pricebasis" {
      type = "character(1)"
    }
    column "metalid" {
      type = "bigint"
    }
    column "netweight" {
      type = "numeric(20,5)"
    }
    column "grossweight" {
      type = "numeric(20,5)"
    }
    column "jobcostbasis" {
      type = "character(1)"
    }
    column "jobcostamt" {
      type = "numeric(20,2)"
    }
    column "partqty" {
      type = "numeric(10,3)"
    }
    column "certificateno" {
      type = "character varying(100)"
    }
    column "dcount" {
      type = "bigint"
    }
    column "dsize" {
      type = "character varying(100)"
    }
    column "dweight" {
      type = "numeric(20,5)"
    }
    column "dvalue" {
      type = "numeric(20,2)"
    }
    column "ddesc" {
      type = "character varying(500)"
    }
    column "ccount" {
      type = "bigint"
    }
    column "cweight" {
      type = "numeric(20,5)"
    }
    column "cvalue" {
      type = "numeric(20,2)"
    }
    column "cdesc" {
      type = "character varying(500)"
    }
    column "ocount" {
      type = "bigint"
    }
    column "oweight" {
      type = "numeric(20,5)"
    }
    column "ovalue" {
      type = "numeric(20,2)"
    }
    column "odesc" {
      type = "character varying(500)"
    }
    column "othercharge" {
      type = "numeric(20,2)"
    }
    column "desc1" {
      type = "character varying(500)"
    }
    column "desc2" {
      type = "character varying(500)"
    }
    column "desc3" {
      type = "character varying(500)"
    }
    column "desc4" {
      type = "character varying(500)"
    }
    column "desc5" {
      type = "character varying(500)"
    }
    column "desc6" {
      type = "character varying(500)"
    }
    column "num1" {
      type = "numeric(20,3)"
    }
    column "num2" {
      type = "numeric(20,3)"
    }
    column "num3" {
      type = "numeric(20,3)"
    }
    column "generated" {
      type = "timestamp(0) without time zone"
    }
    column "posreturnbehavior" {
      type = "character(1)"
    }
    column "pricechangelimit" {
      type = "numeric(5,2)"
    }
    column "hsnsacmasterid" {
      type = "bigint"
    }
    column "isextinct" {
      type = "integer"
    }
    column "udfstring01" {
      type = "character varying(500)"
    }
    column "udfstring02" {
      type = "character varying(500)"
    }
    column "udfstring03" {
      type = "character varying(500)"
    }
    column "udfstring04" {
      type = "character varying(500)"
    }
    column "udfstring05" {
      type = "character varying(500)"
    }
    column "udfstring06" {
      type = "character varying(500)"
    }
    column "udfstring07" {
      type = "character varying(500)"
    }
    column "udfstring08" {
      type = "character varying(500)"
    }
    column "udfstring09" {
      type = "character varying(500)"
    }
    column "udfstring10" {
      type = "character varying(500)"
    }
    column "udfnum01" {
      type = "numeric(20,3)"
    }
    column "udfnum02" {
      type = "numeric(20,3)"
    }
    column "udfnum03" {
      type = "numeric(20,3)"
    }
    column "udfnum04" {
      type = "numeric(20,3)"
    }
    column "udfnum05" {
      type = "numeric(20,3)"
    }
    column "udfdate01" {
      type = "timestamp(0) without time zone"
    }
    column "udfdate02" {
      type = "timestamp(0) without time zone"
    }
    column "udfdate03" {
      type = "timestamp(0) without time zone"
    }
    column "udfdate04" {
      type = "timestamp(0) without time zone"
    }
    column "udfdate05" {
      type = "timestamp(0) without time zone"
    }
    column "item_management_mode" {
      type = "character(1)"
    }
    column "price_management" {
      type = "character(1)"
    }
    column "manage_expiry" {
      type = "integer"
    }
    column "validity_mode" {
      type = "character(1)"
    }
    column "validity_period" {
      type = "bigint"
    }
    column "pos_batch_selection_mode" {
      type = "character(1)"
    }
  )
}

