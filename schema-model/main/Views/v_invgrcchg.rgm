view "main"."v_invgrcchg" {
  text = """-
SELECT invgrcmain.grccode,
    1 AS seq,
    'BASIC'::character varying AS chgname,
    NULL::text AS rate,
    NULL::text AS sign,
    invgrcmain.grsamt AS chgamt,
    NULL::bpchar AS operation_level,
    'Y'::text AS istotal
   FROM main.invgrcmain
  WHERE (invgrcmain.grccode IN ( SELECT min(invgrcchg.grccode) AS min
           FROM main.invgrcchg
          GROUP BY invgrcchg.grccode))
UNION
 SELECT var_sbq.grccode,
    var_sbq.seq,
    var_sbq.chgname,
    var_sbq.rate,
    var_sbq.sign,
    var_sbq.chgamt,
    var_sbq.operation_level,
    var_sbq.istotal
   FROM ( SELECT i.grccode,
            ((s.seq)::numeric + (1)::numeric) AS seq,
            c.chgname,
                CASE
                    WHEN ((s.rate)::character varying IS NULL) THEN NULL::text
                    ELSE
                    CASE COALESCE(s.basis, 'P'::bpchar)
                        WHEN 'P'::bpchar THEN concat_ws(''::text, rtrim(to_char(s.rate, ('FM99999990.99'::character varying)::text), '.'::text), '% on ', to_char(abs(s.appamt), ('FM99999990.00'::character varying)::text))
                        ELSE NULL::text
                    END
                END AS rate,
                CASE s.sign
                    WHEN '-'::bpchar THEN '(-)'::text
                    ELSE NULL::text
                END AS sign,
            abs(s.chgamt) AS chgamt,
            s.operation_level,
            'N'::text AS istotal
           FROM main.finchg c,
            main.invgrcchg s,
            main.invgrcmain i
          WHERE ((c.chgcode = s.chgcode) AND (s.grccode = i.grccode) AND (s.operation_level = 'L'::bpchar))
          ORDER BY s.operation_level DESC, s.seq) var_sbq
UNION
 SELECT invgrcmain.grccode,
    2000 AS seq,
    'NET'::character varying AS chgname,
    NULL::text AS rate,
    NULL::text AS sign,
        CASE COALESCE(invgrcmain.netamt, (0)::numeric)
            WHEN 0 THEN (0)::numeric
            ELSE invgrcmain.netamt
        END AS chgamt,
    NULL::bpchar AS operation_level,
    'Y'::text AS istotal
   FROM main.invgrcmain;
"""
  columns = (
    column "grccode" {
      type = "bigint"
    }
    column "seq" {
      type = "numeric"
    }
    column "chgname" {
      type = "character varying"
    }
    column "rate" {
      type = text
    }
    column "sign" {
      type = text
    }
    column "chgamt" {
      type = "numeric"
    }
    column "operation_level" {
      type = bpchar
    }
    column "istotal" {
      type = text
    }
  )
}

