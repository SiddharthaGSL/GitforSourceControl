view "main"."v_psite_appsetting" {
  text = """-
SELECT psite_appsetting.sys_category AS appsettingcategory,
    psite_appsetting.sys_group AS appsettinggroup,
    psite_appsetting.sys_groupdisplayorder AS groupdisplayorder,
    psite_appsetting.sys_displayorder AS displayorder,
    psite_appsetting.sys_shortcode AS appsettingshortcode,
    psite_appsetting.sys_name AS appsettingname,
    psite_appsetting.sys_description AS description,
    psite_appsetting.sys_datatype AS datatype,
        CASE
            WHEN (psite_appsetting.sys_datatype = 'L'::bpchar) THEN 'List'::text
            WHEN (psite_appsetting.sys_datatype = 'D'::bpchar) THEN 'Date'::text
            WHEN (psite_appsetting.sys_datatype = 'S'::bpchar) THEN 'String'::text
            WHEN (psite_appsetting.sys_datatype = 'B'::bpchar) THEN 'Boolean'::text
            WHEN (psite_appsetting.sys_datatype = 'O'::bpchar) THEN 'Folder Picker'::text
            WHEN (psite_appsetting.sys_datatype = 'Q'::bpchar) THEN 'Scheduler'::text
            WHEN (psite_appsetting.sys_datatype = 'R'::bpchar) THEN 'Reference Lookup'::text
            WHEN (psite_appsetting.sys_datatype = 'F'::bpchar) THEN 'File Picker'::text
            WHEN (psite_appsetting.sys_datatype = 'P'::bpchar) THEN 'Password'::text
            WHEN (psite_appsetting.sys_datatype = 'N'::bpchar) THEN 'Numeric'::text
            ELSE NULL::text
        END AS datatypedisplay,
    psite_appsetting.sys_maxlength AS maxlength,
    psite_appsetting.sys_precision AS "precision",
    psite_appsetting.sys_isrequired AS isrequired,
    psite_appsetting.sys_validlist AS validatefromlist,
    psite_appsetting.sys_reflookuptype AS reflookuptype,
    psite_appsetting.sys_refvaluecol AS refvaluecol,
    psite_appsetting.sys_refdisplayvaluecol AS refdisplayvaluecol,
    psite_appsetting.sys_reflookupcols AS reflookupcols,
    psite_appsetting.sys_reflookuporder AS reflookuporder,
    psite_appsetting.sys_reflookupfilter AS reflookupfilter,
    psite_appsetting.value,
    psite_appsetting.sys_ispolicydriven AS spolicydriven,
    psite_appsetting.lastmodifiedon,
    psite_appsetting.lastmodifiedby AS lastmodifiedbyid,
    u.fname AS lastmodifiedby,
    psite_appsetting.dataversion,
    psite_appsetting.sys_ispolicydriven AS ispolicydriven
   FROM main.psite_appsetting,
    main.hrdemp u
  WHERE (psite_appsetting.lastmodifiedby = u.ecode);
"""
  columns = (
    column "appsettingcategory" {
      type = "character varying(50)"
    }
    column "appsettinggroup" {
      type = "character varying(50)"
    }
    column "groupdisplayorder" {
      type = "bigint"
    }
    column "displayorder" {
      type = "bigint"
    }
    column "appsettingshortcode" {
      type = "character varying(50)"
    }
    column "appsettingname" {
      type = "character varying(100)"
    }
    column "description" {
      type = "character varying(2000)"
    }
    column "datatype" {
      type = "character(1)"
    }
    column "datatypedisplay" {
      type = text
    }
    column "maxlength" {
      type = "bigint"
    }
    column "precision" {
      type = "bigint"
    }
    column "isrequired" {
      type = "bigint"
    }
    column "validatefromlist" {
      type = "character varying(200)"
    }
    column "reflookuptype" {
      type = "character varying(50)"
    }
    column "refvaluecol" {
      type = "character varying(50)"
    }
    column "refdisplayvaluecol" {
      type = "character varying(50)"
    }
    column "reflookupcols" {
      type = "character varying(500)"
    }
    column "reflookuporder" {
      type = "character varying(500)"
    }
    column "reflookupfilter" {
      type = "character varying(500)"
    }
    column "value" {
      type = "character varying(200)"
    }
    column "spolicydriven" {
      type = "bigint"
    }
    column "lastmodifiedon" {
      type = "timestamp(0) without time zone"
    }
    column "lastmodifiedbyid" {
      type = "bigint"
    }
    column "lastmodifiedby" {
      type = "character varying(100)"
    }
    column "dataversion" {
      type = "bigint"
    }
    column "ispolicydriven" {
      type = "bigint"
    }
  )
}

