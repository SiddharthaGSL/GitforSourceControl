view "main"."v_aud2_invitem" {
  text = """-
SELECT trans_det.version_seq,
    aud.action,
    trans_det.login_user,
    trans_det.transaction_date,
    aud.transaction_id,
    aud.icode,
    aud.icode AS module_key,
    aud.icode AS module_key_display,
    aud.grpcode AS department_code,
    g.grpname AS department_name,
    aud.ccode1 AS category1_code,
    aud.cname1 AS category1_name,
    aud.ccode2 AS category2_code,
    aud.cname2 AS category2_name,
    aud.ccode3 AS category3_code,
    aud.cname3 AS category3_name,
    aud.ccode4 AS category4_code,
    aud.cname4 AS category4_name,
    aud.ccode5 AS category5_code,
    aud.cname5 AS category5_name,
    aud.ccode6 AS category6_code,
    aud.cname6 AS category6_name,
    aud.mrp AS rsp,
    aud.barunit AS scan_unit,
    aud.rem AS remarks,
    aud.ext AS extinct,
    aud.taxcode AS tax_group_code,
    f.taxname AS tax_group_name,
    aud.partycode AS vendor_code,
    aud.partyname AS vendor_name,
    aud.unitname AS uom,
    aud.barcode,
    aud.listed_mrp AS mrp,
    aud.expiry_date,
    aud.partyalias AS vendor_alias,
    aud.shrtname AS short_name,
    aud.noninventory AS non_inventory_item,
    aud.costrate AS standard_rate,
    aud.wsp,
    aud.invarticle_code AS article_code,
    i.name AS article_name,
        CASE aud.allow_price_modification
            WHEN 'Y'::bpchar THEN 'Yes'::text
            WHEN 'N'::bpchar THEN 'No'::text
            ELSE NULL::text
        END AS pos_allow_price_change,
        CASE aud.pos_multiprice_action
            WHEN 'P'::bpchar THEN 'Popup Price List'::text
            WHEN 'L'::bpchar THEN 'Apply Last Price From List'::text
            WHEN 'N'::bpchar THEN 'Apply Price From Master'::text
            ELSE NULL::text
        END AS pos_multiprice_action,
        CASE aud.negative_stock_alert
            WHEN 'I'::bpchar THEN 'Ignore'::text
            WHEN 'W'::bpchar THEN 'Warning'::text
            WHEN 'S'::bpchar THEN 'Stop'::text
            WHEN 'P'::bpchar THEN 'Profile'::text
            ELSE NULL::text
        END AS negative_stock_alert,
        CASE
            WHEN (aud.item_name IS NOT NULL) THEN (aud.item_name)::text
            ELSE substr((((((((((((aud.cname1)::text || ' '::text) || (aud.cname2)::text) || ' '::text) || (aud.cname3)::text) || ' '::text) || (aud.cname4)::text) || ' '::text) || (aud.cname5)::text) || ' '::text) || (aud.cname6)::text), 1, 500)
        END AS item_name,
        CASE aud.material_type
            WHEN 'R'::bpchar THEN 'Raw Materials'::text
            WHEN 'S'::bpchar THEN 'Semi Finished Goods'::text
            WHEN 'F'::bpchar THEN 'Finished Goods'::text
            ELSE NULL::text
        END AS material_type,
    aud.desc1 AS description1,
    aud.desc2 AS description2,
    aud.desc3 AS description3,
    aud.desc4 AS description4,
    aud.desc5 AS description5,
    aud.desc6 AS description6,
    aud.num1 AS number1,
    aud.num2 AS number2,
    aud.num3 AS number3,
        CASE aud.isprice_excludes_tax
            WHEN 1 THEN 'Yes'::text
            WHEN 0 THEN 'No'::text
            ELSE NULL::text
        END AS pos_charge_extra_tax,
        CASE aud.autoqtypopup
            WHEN 'Y'::bpchar THEN 'Yes'::text
            WHEN 'N'::bpchar THEN 'No'::text
            ELSE NULL::text
        END AS pos_edit_qty_price,
        CASE aud.pos_return_behavior
            WHEN 'R'::bpchar THEN 'Only against bill'::text
            WHEN 'P'::bpchar THEN 'Based on user policy'::text
            WHEN 'A'::bpchar THEN 'Always'::text
            WHEN 'N'::bpchar THEN 'Do not allow'::text
            ELSE NULL::text
        END AS pos_return_behaviour,
    aud.price_change_limit AS pos_price_change_limit,
    aud.udfstring01,
    aud.udfstring02,
    aud.udfstring03,
    aud.udfstring04,
    aud.udfstring05,
    aud.udfstring06,
    aud.udfstring07,
    aud.udfstring08,
    aud.udfstring09,
    aud.udfstring10,
    aud.udfnum01,
    aud.udfnum02,
    aud.udfnum03,
    aud.udfnum04,
    aud.udfnum05,
    aud.udfdate01,
    aud.udfdate02,
    aud.udfdate03,
    aud.udfdate04,
    aud.udfdate05,
    aud.invhsnsacmain_code AS hsn_internal_code,
    h.hsn_sac_code AS hsn_code,
        CASE
            WHEN (aud.gst_itc_appl = 'IP'::bpchar) THEN 'Input Applicable'::text
            WHEN (aud.gst_itc_appl = 'CP'::bpchar) THEN 'Capital Goods'::text
            WHEN (aud.gst_itc_appl = 'NO'::bpchar) THEN 'Not Applicable'::text
            ELSE NULL::text
        END AS itc_eligibility,
    aud.glcode AS ledger_code,
    gl.glname AS ledger_name,
    aud.slcode AS subledger_code,
    s.slname AS subledger_name,
        CASE
            WHEN (aud.item_management_mode = 'I'::bpchar) THEN 'Item'::text
            WHEN (aud.item_management_mode = 'B'::bpchar) THEN 'Batch'::text
            WHEN (aud.item_management_mode = 'S'::bpchar) THEN 'Serial'::text
            ELSE NULL::text
        END AS item_management_mode,
        CASE
            WHEN (aud.price_management = 'I'::bpchar) THEN 'Item'::text
            WHEN (aud.price_management = 'B'::bpchar) THEN 'Batch'::text
            WHEN (aud.price_management = 'S'::bpchar) THEN 'Serial'::text
            ELSE NULL::text
        END AS price_management,
        CASE
            WHEN (aud.manage_expiry = 'Y'::bpchar) THEN 'Yes'::text
            WHEN (aud.manage_expiry = 'N'::bpchar) THEN 'No'::text
            ELSE NULL::text
        END AS manage_expiry,
        CASE
            WHEN (aud.validity_mode = 'D'::bpchar) THEN 'Days'::text
            WHEN (aud.validity_mode = 'M'::bpchar) THEN 'Months'::text
            WHEN (aud.validity_mode = 'Y'::bpchar) THEN 'Years'::text
            WHEN (aud.validity_mode = 'N'::bpchar) THEN 'None'::text
            ELSE NULL::text
        END AS validity_mode,
    aud.validity_period,
        CASE
            WHEN (aud.pos_batch_selection_mode = 'M'::bpchar) THEN 'Popup list of Batch/Serial'::text
            ELSE NULL::text
        END AS pos_batch_selection_mode
   FROM (((((((main.aud2_invitem aud
     JOIN ( SELECT a.transaction_id,
            a.transaction_date,
            a.login_user,
            a.module_type,
            a.module_shortcode,
            a.program,
            a.header_key_value,
            rank() OVER (PARTITION BY a.module_shortcode, a.header_key_value ORDER BY a.transaction_date) AS version_seq
           FROM main.aud2_transaction a
          WHERE ((a.module_shortcode)::text = 'Item'::text)) trans_det ON (((((aud.icode)::character varying)::text = (trans_det.header_key_value)::text) AND ((aud.transaction_id)::text = (trans_det.transaction_id)::text))))
     JOIN main.invgrp g ON ((aud.grpcode = g.grpcode)))
     JOIN main.invarticle i ON ((aud.invarticle_code = i.code)))
     JOIN main.invhsnsacmain h ON ((aud.invhsnsacmain_code = h.code)))
     LEFT JOIN main.fintaxmain f ON ((aud.taxcode = f.taxcode)))
     LEFT JOIN main.fingl gl ON ((aud.glcode = gl.glcode)))
     LEFT JOIN main.finsl s ON ((aud.slcode = s.slcode)));
"""
  columns = (
    column "version_seq" {
      type = "bigint"
    }
    column "action" {
      type = "character varying(10)"
    }
    column "login_user" {
      type = "character varying(100)"
    }
    column "transaction_date" {
      type = "timestamp without time zone"
    }
    column "transaction_id" {
      type = "character varying(500)"
    }
    column "icode" {
      type = "character varying(9)"
    }
    column "module_key" {
      type = "character varying(9)"
    }
    column "module_key_display" {
      type = "character varying(9)"
    }
    column "department_code" {
      type = "bigint"
    }
    column "department_name" {
      type = "character varying(100)"
    }
    column "category1_code" {
      type = "bigint"
    }
    column "category1_name" {
      type = "character varying(100)"
    }
    column "category2_code" {
      type = "bigint"
    }
    column "category2_name" {
      type = "character varying(100)"
    }
    column "category3_code" {
      type = "bigint"
    }
    column "category3_name" {
      type = "character varying(100)"
    }
    column "category4_code" {
      type = "bigint"
    }
    column "category4_name" {
      type = "character varying(100)"
    }
    column "category5_code" {
      type = "bigint"
    }
    column "category5_name" {
      type = "character varying(100)"
    }
    column "category6_code" {
      type = "bigint"
    }
    column "category6_name" {
      type = "character varying(100)"
    }
    column "rsp" {
      type = "numeric(20,3)"
    }
    column "scan_unit" {
      type = "numeric(20,3)"
    }
    column "remarks" {
      type = "character varying(500)"
    }
    column "extinct" {
      type = "character(1)"
    }
    column "tax_group_code" {
      type = "bigint"
    }
    column "tax_group_name" {
      type = "character varying(100)"
    }
    column "vendor_code" {
      type = "bigint"
    }
    column "vendor_name" {
      type = "character varying(100)"
    }
    column "uom" {
      type = "character varying(100)"
    }
    column "barcode" {
      type = "character varying(50)"
    }
    column "mrp" {
      type = "numeric(20,3)"
    }
    column "expiry_date" {
      type = "timestamp(0) without time zone"
    }
    column "vendor_alias" {
      type = "character varying(25)"
    }
    column "short_name" {
      type = "character varying(25)"
    }
    column "non_inventory_item" {
      type = "character(1)"
    }
    column "standard_rate" {
      type = "numeric(20,3)"
    }
    column "wsp" {
      type = "numeric(20,3)"
    }
    column "article_code" {
      type = "bigint"
    }
    column "article_name" {
      type = "character varying(100)"
    }
    column "pos_allow_price_change" {
      type = text
    }
    column "pos_multiprice_action" {
      type = text
    }
    column "negative_stock_alert" {
      type = text
    }
    column "item_name" {
      type = text
    }
    column "material_type" {
      type = text
    }
    column "description1" {
      type = "character varying(500)"
    }
    column "description2" {
      type = "character varying(500)"
    }
    column "description3" {
      type = "character varying(500)"
    }
    column "description4" {
      type = "character varying(500)"
    }
    column "description5" {
      type = "character varying(500)"
    }
    column "description6" {
      type = "character varying(500)"
    }
    column "number1" {
      type = "numeric(20,3)"
    }
    column "number2" {
      type = "numeric(20,3)"
    }
    column "number3" {
      type = "numeric(20,3)"
    }
    column "pos_charge_extra_tax" {
      type = text
    }
    column "pos_edit_qty_price" {
      type = text
    }
    column "pos_return_behaviour" {
      type = text
    }
    column "pos_price_change_limit" {
      type = "numeric(5,2)"
    }
    column "udfstring01" {
      type = "character varying(500)"
    }
    column "udfstring02" {
      type = "character varying(500)"
    }
    column "udfstring03" {
      type = "character varying(500)"
    }
    column "udfstring04" {
      type = "character varying(500)"
    }
    column "udfstring05" {
      type = "character varying(500)"
    }
    column "udfstring06" {
      type = "character varying(500)"
    }
    column "udfstring07" {
      type = "character varying(500)"
    }
    column "udfstring08" {
      type = "character varying(500)"
    }
    column "udfstring09" {
      type = "character varying(500)"
    }
    column "udfstring10" {
      type = "character varying(500)"
    }
    column "udfnum01" {
      type = "numeric(20,3)"
    }
    column "udfnum02" {
      type = "numeric(20,3)"
    }
    column "udfnum03" {
      type = "numeric(20,3)"
    }
    column "udfnum04" {
      type = "numeric(20,3)"
    }
    column "udfnum05" {
      type = "numeric(20,3)"
    }
    column "udfdate01" {
      type = "timestamp(0) without time zone"
    }
    column "udfdate02" {
      type = "timestamp(0) without time zone"
    }
    column "udfdate03" {
      type = "timestamp(0) without time zone"
    }
    column "udfdate04" {
      type = "timestamp(0) without time zone"
    }
    column "udfdate05" {
      type = "timestamp(0) without time zone"
    }
    column "hsn_internal_code" {
      type = "bigint"
    }
    column "hsn_code" {
      type = "character varying(20)"
    }
    column "itc_eligibility" {
      type = text
    }
    column "ledger_code" {
      type = "bigint"
    }
    column "ledger_name" {
      type = "character varying(100)"
    }
    column "subledger_code" {
      type = "bigint"
    }
    column "subledger_name" {
      type = "character varying(100)"
    }
    column "item_management_mode" {
      type = text
    }
    column "price_management" {
      type = text
    }
    column "manage_expiry" {
      type = text
    }
    column "validity_mode" {
      type = text
    }
    column "validity_period" {
      type = "bigint"
    }
    column "pos_batch_selection_mode" {
      type = text
    }
  )
}

