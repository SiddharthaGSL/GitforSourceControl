view "main"."nrv_sr_list" {
  text = """-
SELECT i.scheme_docno AS invoiceno,
    i.rtdt AS invoicedt,
    i.docno,
    i.docdt,
    ad.docname,
    i.rtcode,
    i.admsite_code_owner AS ownersitecode,
    sto.name AS ownersite,
    sto.shrtname AS ownersiteshortname,
    i.admsite_code AS fromsitecode,
    stt.name AS fromsite,
    stt.shrtname AS fromsiteshortname,
    s.slname AS customername,
    s.slid AS customerid,
    l.locname AS instockpoint,
    ((ag.slname)::text ||
        CASE
            WHEN (ag.slid IS NULL) THEN NULL::text
            ELSE ((' ['::text || (ag.slid)::text) || ']'::text)
        END) AS agent,
    i.agrate AS agentrate,
    i.grsamt,
    i.chgamt,
    i.netamt,
    gp.glname AS debtorledger,
    g.glname AS returnledger,
    sg.slname AS returnsubledger,
        CASE
            WHEN (sp.price_type = 'M'::bpchar) THEN 'RSP'::text
            WHEN (sp.price_type = 'W'::bpchar) THEN 'WSP'::text
            WHEN (sp.price_type = 'R'::bpchar) THEN 'Std Rate'::text
            WHEN (sp.price_type = 'L'::bpchar) THEN 'MRP'::text
            WHEN (sp.price_type = 'C'::bpchar) THEN 'Eff Rate'::text
            WHEN (sp.price_type = 'F'::bpchar) THEN 'FIFO'::text
            ELSE NULL::text
        END AS pricetype,
    i.pricelistcode,
    sp.pricelistname,
    trd.name AS tradegroupname,
    y.yname AS yearname,
    i.ycode,
        CASE
            WHEN ((cr.fname IS NOT NULL) AND (cr.eno IS NOT NULL)) THEN (((((cr.fname)::text || ' ['::text) || (cr.eno)::text) || ']'::text))::character varying
            ELSE cr.fname
        END AS created_by,
    i."time" AS created_on,
        CASE
            WHEN ((la.fname IS NOT NULL) AND (la.eno IS NOT NULL)) THEN (((((la.fname)::text || ' ['::text) || (la.eno)::text) || ']'::text))::character varying
            ELSE la.fname
        END AS lastmodified_by,
    i.last_access_time AS lastmodified_time,
    COALESCE(agm.noofattachment, (0)::bigint) AS noofattachment,
    i.rem AS remarks,
        CASE
            WHEN (i.release_status = 'P'::bpchar) THEN 'Posted'::text
            WHEN (i.release_status = 'U'::bpchar) THEN 'Un-Posted'::text
            ELSE NULL::text
        END AS releasestatus,
    i.release_time AS releasetime,
        CASE
            WHEN ((r.fname IS NOT NULL) AND (r.eno IS NOT NULL)) THEN (((((r.fname)::text || ' ['::text) || (r.eno)::text) || ']'::text))::character varying
            ELSE r.fname
        END AS releasedby,
    i.udfstring01,
    i.udfstring02,
    i.udfstring03,
    i.udfstring04,
    i.udfstring05,
    i.udfstring06,
    i.udfstring07,
    i.udfstring08,
    i.udfstring09,
    i.udfstring10,
    i.udfnum01,
    i.udfnum02,
    i.udfnum03,
    i.udfnum04,
    i.udfnum05,
    i.udfdate01,
    i.udfdate02,
    i.udfdate03,
    i.udfdate04,
    i.udfdate05,
    pg.docno AS grtno,
    pg.gstdocno AS gstdocnumber,
    i.entry_source,
    gste.irn,
    gste.ack_no,
    gste.ack_datetime
   FROM main.admyear y,
    main.admsite stt,
    main.admsite sto,
    main.invloc l,
    (((((((((((((((main.salrtmain i
     LEFT JOIN main.finsl s ON ((i.pcode = s.slcode)))
     LEFT JOIN main.admdocscheme ad ON ((i.doccode = ad.doccode)))
     LEFT JOIN main.finsl ag ON ((i.agcode = ag.slcode)))
     LEFT JOIN main.fingl gp ON ((i.pglcode = gp.glcode)))
     LEFT JOIN main.finsl sgp ON ((i.pslcode = sgp.slcode)))
     LEFT JOIN main.psite_grt pg ON (((i.psite_grt_code)::text = (pg.code)::text)))
     LEFT JOIN main.fingl g ON ((i.glcode = g.glcode)))
     LEFT JOIN main.finsl sg ON ((i.slcode = sg.slcode)))
     LEFT JOIN main.fintradegrp trd ON ((i.saltradegrp_code = trd.code)))
     LEFT JOIN main.salpricelistmain sp ON ((i.pricelistcode = sp.pricelistcode)))
     LEFT JOIN main.hrdemp cr ON ((i.ecode = cr.ecode)))
     LEFT JOIN main.hrdemp r ON ((i.release_ecode = r.ecode)))
     LEFT JOIN main.hrdemp la ON ((i.last_access_ecode = la.ecode)))
     LEFT JOIN ( SELECT count(*) AS noofattachment,
            admattached_files.entry_code
           FROM main.admattached_files
          WHERE ((admattached_files.entry_type)::text = 'SRT'::text)
          GROUP BY admattached_files.entry_code) agm ON (((i.rtcode)::numeric = (agm.entry_code)::numeric)))
     LEFT JOIN ( SELECT invgst_einvoice.transaction_code,
            invgst_einvoice.irn,
            invgst_einvoice.ack_no,
            invgst_einvoice.ack_datetime
           FROM main.invgst_einvoice
          WHERE ((invgst_einvoice.transaction_table)::text = 'SALRTMAIN'::text)) gste ON (((i.rtcode)::numeric = (gste.transaction_code)::numeric)))
  WHERE ((i.saletype = 'O'::bpchar) AND (i.inloccode = l.loccode) AND (i.admsite_code_owner = sto.code) AND (i.admsite_code = stt.code) AND (i.ycode = y.ycode));
"""
  columns = (
    column "invoiceno" {
      type = "character varying(25)"
    }
    column "invoicedt" {
      type = "timestamp(0) without time zone"
    }
    column "docno" {
      type = "character varying(25)"
    }
    column "docdt" {
      type = "timestamp(0) without time zone"
    }
    column "docname" {
      type = "character varying(100)"
    }
    column "rtcode" {
      type = "bigint"
    }
    column "ownersitecode" {
      type = "bigint"
    }
    column "ownersite" {
      type = "character varying(100)"
    }
    column "ownersiteshortname" {
      type = "character varying(25)"
    }
    column "fromsitecode" {
      type = "bigint"
    }
    column "fromsite" {
      type = "character varying(100)"
    }
    column "fromsiteshortname" {
      type = "character varying(25)"
    }
    column "customername" {
      type = "character varying(100)"
    }
    column "customerid" {
      type = "character varying(25)"
    }
    column "instockpoint" {
      type = "character varying(100)"
    }
    column "agent" {
      type = text
    }
    column "agentrate" {
      type = "numeric(20,3)"
    }
    column "grsamt" {
      type = "numeric(20,2)"
    }
    column "chgamt" {
      type = "numeric(20,2)"
    }
    column "netamt" {
      type = "numeric(20,2)"
    }
    column "debtorledger" {
      type = "character varying(100)"
    }
    column "returnledger" {
      type = "character varying(100)"
    }
    column "returnsubledger" {
      type = "character varying(100)"
    }
    column "pricetype" {
      type = text
    }
    column "pricelistcode" {
      type = "bigint"
    }
    column "pricelistname" {
      type = "character varying(100)"
    }
    column "tradegroupname" {
      type = "character varying(100)"
    }
    column "yearname" {
      type = "character varying(100)"
    }
    column "ycode" {
      type = "bigint"
    }
    column "created_by" {
      type = "character varying"
    }
    column "created_on" {
      type = "timestamp(0) without time zone"
    }
    column "lastmodified_by" {
      type = "character varying"
    }
    column "lastmodified_time" {
      type = "timestamp(0) without time zone"
    }
    column "noofattachment" {
      type = "bigint"
    }
    column "remarks" {
      type = "character varying(500)"
    }
    column "releasestatus" {
      type = text
    }
    column "releasetime" {
      type = "timestamp(0) without time zone"
    }
    column "releasedby" {
      type = "character varying"
    }
    column "udfstring01" {
      type = "character varying(500)"
    }
    column "udfstring02" {
      type = "character varying(500)"
    }
    column "udfstring03" {
      type = "character varying(500)"
    }
    column "udfstring04" {
      type = "character varying(500)"
    }
    column "udfstring05" {
      type = "character varying(500)"
    }
    column "udfstring06" {
      type = "character varying(500)"
    }
    column "udfstring07" {
      type = "character varying(500)"
    }
    column "udfstring08" {
      type = "character varying(500)"
    }
    column "udfstring09" {
      type = "character varying(500)"
    }
    column "udfstring10" {
      type = "character varying(500)"
    }
    column "udfnum01" {
      type = "numeric(20,3)"
    }
    column "udfnum02" {
      type = "numeric(20,3)"
    }
    column "udfnum03" {
      type = "numeric(20,3)"
    }
    column "udfnum04" {
      type = "numeric(20,3)"
    }
    column "udfnum05" {
      type = "numeric(20,3)"
    }
    column "udfdate01" {
      type = "timestamp(0) without time zone"
    }
    column "udfdate02" {
      type = "timestamp(0) without time zone"
    }
    column "udfdate03" {
      type = "timestamp(0) without time zone"
    }
    column "udfdate04" {
      type = "timestamp(0) without time zone"
    }
    column "udfdate05" {
      type = "timestamp(0) without time zone"
    }
    column "grtno" {
      type = "character varying(25)"
    }
    column "gstdocnumber" {
      type = "character varying(16)"
    }
    column "entry_source" {
      type = "character varying(25)"
    }
    column "irn" {
      type = "character varying(100)"
    }
    column "ack_no" {
      type = "bigint"
    }
    column "ack_datetime" {
      type = "timestamp(0) without time zone"
    }
  )
}

