view "main"."nrv_pending_grt" {
  text = """-
SELECT t1.uk,
    t1.admou_code,
    ou.name AS admou_name,
    t1.admsite_code AS admsite_code_owner,
    st.shrtname AS owner_site,
    t1.pcode,
    sl.slname AS supplier_name,
    t1.scheme_docno AS return_no,
    t1.grtdt AS return_date,
    t1.ycode,
    t1.grt_type
   FROM ( SELECT invgrtmain.grtcode AS uk,
            invgrtmain.admou_code,
            invgrtmain.scheme_docno,
            invgrtmain.grtdt,
            invgrtmain.ycode,
            invgrtmain.pcode,
            invgrtmain.admsite_code,
            'Adhoc'::text AS grt_type
           FROM main.invgrtmain
          WHERE ((invgrtmain.rtcode IS NULL) AND (invgrtmain.grccode IS NULL))
        UNION ALL
         SELECT DISTINCT m.grtcode AS uk,
            m.admou_code,
            m.scheme_docno,
            m.grtdt,
            m.ycode,
            m.pcode,
            m.admsite_code,
            'Against GRC'::text AS grt_type
           FROM main.invgrtdet r,
            main.invgrcmain g,
            main.invgrtmain m
          WHERE ((r.grccode = g.grccode) AND (r.grtcode = m.grtcode) AND (g.whether_consignment = 'NON-CONSIGNMENT'::bpchar) AND (COALESCE(r.rtinvqty, (0)::numeric) = (0)::numeric))) t1,
    main.admou ou,
    main.finsl sl,
    main.admsite st
  WHERE ((t1.admou_code = ou.code) AND (t1.pcode = sl.slcode) AND (t1.admsite_code = st.code));
"""
  columns = (
    column "uk" {
      type = "bigint"
    }
    column "admou_code" {
      type = "bigint"
    }
    column "admou_name" {
      type = "character varying(100)"
    }
    column "admsite_code_owner" {
      type = "bigint"
    }
    column "owner_site" {
      type = "character varying(25)"
    }
    column "pcode" {
      type = "bigint"
    }
    column "supplier_name" {
      type = "character varying(100)"
    }
    column "return_no" {
      type = "character varying(25)"
    }
    column "return_date" {
      type = "timestamp(0) without time zone"
    }
    column "ycode" {
      type = "bigint"
    }
    column "grt_type" {
      type = text
    }
  )
}

