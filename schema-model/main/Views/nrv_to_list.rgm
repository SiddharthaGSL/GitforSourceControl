view "main"."nrv_to_list" {
  text = """-
SELECT i.scheme_docno AS invoiceno,
    i.invdt AS invoicedt,
    i.docno,
    i.docdt,
    ad.docname,
    i.invcode,
    i.admsite_code_owner AS ownersitecode,
    sto.name AS ownersite,
    sto.shrtname AS ownersiteshortname,
    i.admsite_code AS transactionsitecode,
    stt.name AS transactionsite,
    stt.shrtname AS transactionsiteshortname,
    s.slname AS customername,
    s.slid AS customerid,
    i.duedt AS creditduedate,
    i.transitdays,
    i.transit_due_date,
    i.grsamt,
    i.chgamt,
    i.netamt,
    ((ag.slname)::text ||
        CASE
            WHEN (ag.slid IS NULL) THEN NULL::text
            ELSE ((' ['::text || (ag.slid)::text) || ']'::text)
        END) AS agent,
    i.agrate,
    ((trp.slname)::text ||
        CASE
            WHEN (trp.slid IS NULL) THEN NULL::text
            ELSE ((' ['::text || (trp.slid)::text) || ']'::text)
        END) AS transporter,
    g.glname AS transferoutledger,
    sg.slname AS transferoutsubledger,
    gp.glname AS transitledger,
    sgp.slname AS transitsubledger,
        CASE
            WHEN (i.pricetype = 'M'::bpchar) THEN 'RSP'::text
            WHEN (i.pricetype = 'W'::bpchar) THEN 'WSP'::text
            WHEN (i.pricetype = 'R'::bpchar) THEN 'Std Rate'::text
            WHEN (i.pricetype = 'L'::bpchar) THEN 'MRP'::text
            WHEN (i.pricetype = 'C'::bpchar) THEN 'Eff Rate'::text
            WHEN (i.pricetype = 'F'::bpchar) THEN 'FIFO'::text
            ELSE NULL::text
        END AS pricetype,
    i.pricelistcode,
    sp.pricelistname,
    trd.name AS tradegroupname,
    y.yname AS yearname,
    i.ycode,
        CASE
            WHEN ((cr.fname IS NOT NULL) AND (cr.eno IS NOT NULL)) THEN (((((cr.fname)::text || ' ['::text) || (cr.eno)::text) || ']'::text))::character varying
            ELSE cr.fname
        END AS created_by,
    i."time" AS created_on,
        CASE
            WHEN ((la.fname IS NOT NULL) AND (la.eno IS NOT NULL)) THEN (((((la.fname)::text || ' ['::text) || (la.eno)::text) || ']'::text))::character varying
            ELSE la.fname
        END AS lastmodified_by,
    i.last_access_time AS lastmodified_time,
    COALESCE(agm.noofattachment, (0)::bigint) AS noofattachment,
    'Trasfer Out'::text AS entrytype,
    i.entry_source AS entrysource,
    ad.remarks,
        CASE
            WHEN (i.release_status = 'P'::bpchar) THEN 'Posted'::text
            WHEN (i.release_status = 'U'::bpchar) THEN 'Un-Posted'::text
            ELSE NULL::text
        END AS releasestatus,
    i.release_time AS releasetime,
        CASE
            WHEN ((r.fname IS NOT NULL) AND (r.eno IS NOT NULL)) THEN (((((r.fname)::text || ' ['::text) || (r.eno)::text) || ']'::text))::character varying
            ELSE r.fname
        END AS releasedby,
    i.udfstring01,
    i.udfstring02,
    i.udfstring03,
    i.udfstring04,
    i.udfstring05,
    i.udfstring06,
    i.udfstring07,
    i.udfstring08,
    i.udfstring09,
    i.udfstring10,
    i.udfnum01,
    i.udfnum02,
    i.udfnum03,
    i.udfnum04,
    i.udfnum05,
    i.udfdate01,
    i.udfdate02,
    i.udfdate03,
    i.udfdate04,
    i.udfdate05,
    gste.irn,
    gste.ack_no,
    gste.ack_datetime
   FROM main.admyear y,
    main.admsite stt,
    main.admsite sto,
    main.admdocscheme ad,
    ((((((((((((((main.salinvmain i
     LEFT JOIN main.finsl s ON ((i.pcode = s.slcode)))
     LEFT JOIN main.fingl gp ON ((i.pglcode = gp.glcode)))
     LEFT JOIN main.fingl g ON ((i.glcode = g.glcode)))
     LEFT JOIN main.finsl sg ON ((i.slcode = sg.slcode)))
     LEFT JOIN main.finsl sgp ON ((i.pslcode = sgp.slcode)))
     LEFT JOIN main.finsl ag ON ((i.agcode = ag.slcode)))
     LEFT JOIN main.finsl trp ON ((i.trpcode = trp.slcode)))
     LEFT JOIN main.fintradegrp trd ON ((i.saltradegrp_code = trd.code)))
     LEFT JOIN main.salpricelistmain sp ON ((i.pricelistcode = sp.pricelistcode)))
     LEFT JOIN main.hrdemp cr ON ((i.ecode = cr.ecode)))
     LEFT JOIN main.hrdemp r ON ((i.release_ecode = r.ecode)))
     LEFT JOIN main.hrdemp la ON ((i.last_access_ecode = la.ecode)))
     LEFT JOIN ( SELECT count(*) AS noofattachment,
            admattached_files.entry_code
           FROM main.admattached_files
          WHERE ((admattached_files.entry_type)::text = 'TO'::text)
          GROUP BY admattached_files.entry_code) agm ON (((i.invcode)::numeric = (agm.entry_code)::numeric)))
     LEFT JOIN ( SELECT invgst_einvoice.transaction_code,
            invgst_einvoice.irn,
            invgst_einvoice.ack_no,
            invgst_einvoice.ack_datetime
           FROM main.invgst_einvoice
          WHERE ((invgst_einvoice.transaction_table)::text = 'SALINVMAIN'::text)) gste ON (((i.invcode)::numeric = (gste.transaction_code)::numeric)))
  WHERE ((i.doccode = ad.doccode) AND (i.saletype = 'C'::bpchar) AND (i.admsite_code_owner = sto.code) AND (i.admsite_code = stt.code) AND (i.ycode = y.ycode));
"""
  columns = (
    column "invoiceno" {
      type = "character varying(25)"
    }
    column "invoicedt" {
      type = "timestamp(0) without time zone"
    }
    column "docno" {
      type = "character varying(100)"
    }
    column "docdt" {
      type = "timestamp(0) without time zone"
    }
    column "docname" {
      type = "character varying(100)"
    }
    column "invcode" {
      type = "bigint"
    }
    column "ownersitecode" {
      type = "bigint"
    }
    column "ownersite" {
      type = "character varying(100)"
    }
    column "ownersiteshortname" {
      type = "character varying(25)"
    }
    column "transactionsitecode" {
      type = "bigint"
    }
    column "transactionsite" {
      type = "character varying(100)"
    }
    column "transactionsiteshortname" {
      type = "character varying(25)"
    }
    column "customername" {
      type = "character varying(100)"
    }
    column "customerid" {
      type = "character varying(25)"
    }
    column "creditduedate" {
      type = "timestamp(0) without time zone"
    }
    column "transitdays" {
      type = "bigint"
    }
    column "transit_due_date" {
      type = "timestamp(0) without time zone"
    }
    column "grsamt" {
      type = "numeric(20,2)"
    }
    column "chgamt" {
      type = "numeric(20,2)"
    }
    column "netamt" {
      type = "numeric(20,2)"
    }
    column "agent" {
      type = text
    }
    column "agrate" {
      type = "numeric(20,3)"
    }
    column "transporter" {
      type = text
    }
    column "transferoutledger" {
      type = "character varying(100)"
    }
    column "transferoutsubledger" {
      type = "character varying(100)"
    }
    column "transitledger" {
      type = "character varying(100)"
    }
    column "transitsubledger" {
      type = "character varying(100)"
    }
    column "pricetype" {
      type = text
    }
    column "pricelistcode" {
      type = "bigint"
    }
    column "pricelistname" {
      type = "character varying(100)"
    }
    column "tradegroupname" {
      type = "character varying(100)"
    }
    column "yearname" {
      type = "character varying(100)"
    }
    column "ycode" {
      type = "bigint"
    }
    column "created_by" {
      type = "character varying"
    }
    column "created_on" {
      type = "timestamp(0) without time zone"
    }
    column "lastmodified_by" {
      type = "character varying"
    }
    column "lastmodified_time" {
      type = "timestamp(0) without time zone"
    }
    column "noofattachment" {
      type = "bigint"
    }
    column "entrytype" {
      type = text
    }
    column "entrysource" {
      type = "character varying(25)"
    }
    column "remarks" {
      type = "character varying(500)"
    }
    column "releasestatus" {
      type = text
    }
    column "releasetime" {
      type = "timestamp(0) without time zone"
    }
    column "releasedby" {
      type = "character varying"
    }
    column "udfstring01" {
      type = "character varying(500)"
    }
    column "udfstring02" {
      type = "character varying(500)"
    }
    column "udfstring03" {
      type = "character varying(500)"
    }
    column "udfstring04" {
      type = "character varying(500)"
    }
    column "udfstring05" {
      type = "character varying(500)"
    }
    column "udfstring06" {
      type = "character varying(500)"
    }
    column "udfstring07" {
      type = "character varying(500)"
    }
    column "udfstring08" {
      type = "character varying(500)"
    }
    column "udfstring09" {
      type = "character varying(500)"
    }
    column "udfstring10" {
      type = "character varying(500)"
    }
    column "udfnum01" {
      type = "numeric(20,3)"
    }
    column "udfnum02" {
      type = "numeric(20,3)"
    }
    column "udfnum03" {
      type = "numeric(20,3)"
    }
    column "udfnum04" {
      type = "numeric(20,3)"
    }
    column "udfnum05" {
      type = "numeric(20,3)"
    }
    column "udfdate01" {
      type = "timestamp(0) without time zone"
    }
    column "udfdate02" {
      type = "timestamp(0) without time zone"
    }
    column "udfdate03" {
      type = "timestamp(0) without time zone"
    }
    column "udfdate04" {
      type = "timestamp(0) without time zone"
    }
    column "udfdate05" {
      type = "timestamp(0) without time zone"
    }
    column "irn" {
      type = "character varying(100)"
    }
    column "ack_no" {
      type = "bigint"
    }
    column "ack_datetime" {
      type = "timestamp(0) without time zone"
    }
  )
}

