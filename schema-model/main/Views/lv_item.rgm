view "main"."lv_item" {
  text = """-
SELECT i.icode AS uk,
    i.icode AS code,
    i.icode AS item_code,
    i.grpcode,
    g.lev1grpname AS division,
    g.lev2grpname AS section,
    g.grpname AS department,
    a.name AS article_name,
    i.cname1 AS category1,
    i.cname2 AS category2,
    i.cname3 AS category3,
    i.cname4 AS category4,
    i.cname5 AS category5,
    i.cname6 AS category6,
    i.rate AS last_inward_rate,
    i.mrp AS rsp,
    i.barunit AS scan_unit,
    i.rem AS remarks,
    initcap(
        CASE
            WHEN (i.ext = 'N'::bpchar) THEN 'NO'::text
            WHEN (i.ext = 'Y'::bpchar) THEN 'YES'::text
            ELSE 'NO'::text
        END) AS extinct,
    t.taxname AS tax_name,
    i.partyname AS vendor,
    cls.clsname AS vendor_class,
    i.generated AS created_on,
    i.last_changed AS last_modified_on,
    i.unitname AS uom,
    COALESCE(i.barcode, i.icode) AS barcode,
    i.listed_mrp AS mrp,
    i.expiry_date,
    i.partyalias AS vendor_alias,
    i.stockindate AS last_stock_inward_date,
    i.shrtname AS short_name,
        CASE
            WHEN (i.noninventory = 'Y'::bpchar) THEN 'No'::text
            WHEN (i.noninventory = 'N'::bpchar) THEN 'Yes'::text
            ELSE NULL::text
        END AS inventory_item,
    i.costrate AS standard_rate,
    i.wsp,
    i.invarticle_code,
        CASE
            WHEN (i.allow_price_modification = 'N'::bpchar) THEN 'No'::text
            WHEN (i.allow_price_modification = 'Y'::bpchar) THEN 'Yes'::text
            ELSE 'No'::text
        END AS allow_price_change,
    initcap(
        CASE
            WHEN (i.pos_multiprice_action = 'P'::bpchar) THEN 'POPUP PRICE FROM LIST'::text
            WHEN (i.pos_multiprice_action = 'L'::bpchar) THEN 'APPLY LAST PRICE FROM LIST'::text
            WHEN (i.pos_multiprice_action = 'N'::bpchar) THEN 'APPLY PRICE FROM MASTER'::text
            ELSE 'APPLY PRICE FROM MASTER'::text
        END) AS pos_multi_price_action,
    initcap(
        CASE
            WHEN (i.negative_stock_alert = 'I'::bpchar) THEN 'IGNORE'::text
            WHEN (i.negative_stock_alert = 'W'::bpchar) THEN 'WARNING'::text
            WHEN (i.negative_stock_alert = 'S'::bpchar) THEN 'STOP'::text
            WHEN (i.negative_stock_alert = 'P'::bpchar) THEN 'PROFILE'::text
            ELSE 'PROFILE'::text
        END) AS negative_stock_alert,
    COALESCE(i.item_name, ((((((((((((i.cname1)::text || ' '::text) || (i.cname2)::text) || ' '::text) || (i.cname3)::text) || ' '::text) || (i.cname4)::text) || ' '::text) || (i.cname5)::text) || ' '::text) || (i.cname6)::text))::character varying) AS item_name,
    initcap(
        CASE
            WHEN (i.material_type = 'R'::bpchar) THEN 'RAW MATERIALS'::text
            WHEN (i.material_type = 'S'::bpchar) THEN 'SEMI FINISHED GOODS'::text
            WHEN (i.material_type = 'F'::bpchar) THEN 'FINISHED GOODS'::text
            ELSE NULL::text
        END) AS material_type,
    i.desc1 AS string_desc1,
    i.desc2 AS string_desc2,
    i.desc3 AS string_desc3,
    i.desc4 AS string_desc4,
    i.desc5 AS string_desc5,
    i.desc6 AS string_desc6,
    i.num1 AS numeric_desc1,
    i.num2 AS numeric_desc2,
    i.num3 AS numeric_desc3,
    i.autoqtypopup AS display_popup_to_edit_qty,
        CASE g.img_convention
            WHEN 'NONE'::text THEN 'NoImageAvailable.JPG'::text
            WHEN 'BARCODE'::text THEN ((COALESCE(i.barcode, i.icode))::text || '.JPG'::text)
            WHEN 'ARTICLE'::text THEN ((a.name)::text || '.JPG'::text)
            WHEN 'CATEGORY1'::text THEN ((i.cname1)::text || '.JPG'::text)
            WHEN 'CATEGORY2'::text THEN ((i.cname2)::text || '.JPG'::text)
            WHEN 'CATEGORY3'::text THEN ((i.cname3)::text || '.JPG'::text)
            WHEN 'CATEGORY4'::text THEN ((i.cname4)::text || '.JPG'::text)
            WHEN 'CATEGORY5'::text THEN ((i.cname5)::text || '.JPG'::text)
            WHEN 'CATEGORY6'::text THEN ((i.cname6)::text || '.JPG'::text)
            WHEN 'DESCRIPTION1'::text THEN ((i.desc1)::text || '.JPG'::text)
            WHEN 'DESCRIPTION2'::text THEN ((i.desc2)::text || '.JPG'::text)
            WHEN 'DESCRIPTION3'::text THEN ((i.desc3)::text || '.JPG'::text)
            WHEN 'DESCRIPTION4'::text THEN ((i.desc4)::text || '.JPG'::text)
            WHEN 'DESCRIPTION5'::text THEN ((i.desc5)::text || '.JPG'::text)
            WHEN 'DESCRIPTION6'::text THEN ((i.desc6)::text || '.JPG'::text)
            ELSE NULL::text
        END AS image_name,
    i.invhsnsacmain_code,
    h.govt_identifier AS hsn_code,
    h.hsn_sac_code AS hsn_sac_id,
    h.description AS hsn_description,
    i.udfstring01 AS invitem_udfstring01,
    i.udfstring02 AS invitem_udfstring02,
    i.udfstring03 AS invitem_udfstring03,
    i.udfstring04 AS invitem_udfstring04,
    i.udfstring05 AS invitem_udfstring05,
    i.udfstring06 AS invitem_udfstring06,
    i.udfstring07 AS invitem_udfstring07,
    i.udfstring08 AS invitem_udfstring08,
    i.udfstring09 AS invitem_udfstring09,
    i.udfstring10 AS invitem_udfstring10,
    i.udfnum01 AS invitem_udfnum01,
    i.udfnum02 AS invitem_udfnum02,
    i.udfnum03 AS invitem_udfnum03,
    i.udfnum04 AS invitem_udfnum04,
    i.udfnum05 AS invitem_udfnum05,
    i.udfdate01 AS invitem_udfdate01,
    i.udfdate02 AS invitem_udfdate02,
    i.udfdate03 AS invitem_udfdate03,
    i.udfdate04 AS invitem_udfdate04,
    i.udfdate05 AS invitem_udfdate05,
    i.partycode AS vendor_code,
    gl.glname AS ledger,
    subl.slname AS sub_ledger,
    upper(
        CASE
            WHEN (i.gst_itc_appl = 'P'::bpchar) THEN 'INPUT APPLICABLE'::text
            WHEN (i.gst_itc_appl = 'CP'::bpchar) THEN 'CAPITAL GOODS'::text
            WHEN (i.gst_itc_appl = 'NO'::bpchar) THEN 'NOT APPLICABLE'::text
            ELSE NULL::text
        END) AS itc_eligibility,
    i.item_management_mode,
    i.price_management,
    i.manage_expiry,
    i.validity_mode,
    i.validity_period,
    i.pos_batch_selection_mode
   FROM ((((((((main.invitem i
     LEFT JOIN main.fintaxmain t ON ((i.taxcode = t.taxcode)))
     JOIN main.invarticle a ON ((i.invarticle_code = a.code)))
     JOIN main.invgrp g ON ((a.grpcode = g.grpcode)))
     JOIN main.invhsnsacmain h ON ((i.invhsnsacmain_code = h.code)))
     LEFT JOIN main.finsl sl ON ((i.partycode = sl.slcode)))
     LEFT JOIN main.admcls cls ON ((sl.clscode = cls.clscode)))
     LEFT JOIN main.finsl subl ON ((i.slcode = subl.slcode)))
     LEFT JOIN main.fingl gl ON ((i.glcode = gl.glcode)));
"""
  columns = (
    column "uk" {
      type = "character varying(9)"
    }
    column "code" {
      type = "character varying(9)"
    }
    column "item_code" {
      type = "character varying(9)"
    }
    column "grpcode" {
      type = "bigint"
    }
    column "division" {
      type = "character varying(100)"
    }
    column "section" {
      type = "character varying(100)"
    }
    column "department" {
      type = "character varying(100)"
    }
    column "article_name" {
      type = "character varying(100)"
    }
    column "category1" {
      type = "character varying(100)"
    }
    column "category2" {
      type = "character varying(100)"
    }
    column "category3" {
      type = "character varying(100)"
    }
    column "category4" {
      type = "character varying(100)"
    }
    column "category5" {
      type = "character varying(100)"
    }
    column "category6" {
      type = "character varying(100)"
    }
    column "last_inward_rate" {
      type = "numeric(20,3)"
    }
    column "rsp" {
      type = "numeric(20,3)"
    }
    column "scan_unit" {
      type = "numeric(20,3)"
    }
    column "remarks" {
      type = "character varying(500)"
    }
    column "extinct" {
      type = text
    }
    column "tax_name" {
      type = "character varying(100)"
    }
    column "vendor" {
      type = "character varying(100)"
    }
    column "vendor_class" {
      type = "character varying(100)"
    }
    column "created_on" {
      type = "timestamp(0) without time zone"
    }
    column "last_modified_on" {
      type = "timestamp(0) without time zone"
    }
    column "uom" {
      type = "character varying(100)"
    }
    column "barcode" {
      type = "character varying"
    }
    column "mrp" {
      type = "numeric(20,3)"
    }
    column "expiry_date" {
      type = "timestamp(0) without time zone"
    }
    column "vendor_alias" {
      type = "character varying(25)"
    }
    column "last_stock_inward_date" {
      type = "timestamp(0) without time zone"
    }
    column "short_name" {
      type = "character varying(25)"
    }
    column "inventory_item" {
      type = text
    }
    column "standard_rate" {
      type = "numeric(20,3)"
    }
    column "wsp" {
      type = "numeric(20,3)"
    }
    column "invarticle_code" {
      type = "bigint"
    }
    column "allow_price_change" {
      type = text
    }
    column "pos_multi_price_action" {
      type = text
    }
    column "negative_stock_alert" {
      type = text
    }
    column "item_name" {
      type = "character varying"
    }
    column "material_type" {
      type = text
    }
    column "string_desc1" {
      type = "character varying(500)"
    }
    column "string_desc2" {
      type = "character varying(500)"
    }
    column "string_desc3" {
      type = "character varying(500)"
    }
    column "string_desc4" {
      type = "character varying(500)"
    }
    column "string_desc5" {
      type = "character varying(500)"
    }
    column "string_desc6" {
      type = "character varying(500)"
    }
    column "numeric_desc1" {
      type = "numeric(20,3)"
    }
    column "numeric_desc2" {
      type = "numeric(20,3)"
    }
    column "numeric_desc3" {
      type = "numeric(20,3)"
    }
    column "display_popup_to_edit_qty" {
      type = "character(1)"
    }
    column "image_name" {
      type = text
    }
    column "invhsnsacmain_code" {
      type = "bigint"
    }
    column "hsn_code" {
      type = "character varying(20)"
    }
    column "hsn_sac_id" {
      type = "character varying(20)"
    }
    column "hsn_description" {
      type = "character varying(100)"
    }
    column "invitem_udfstring01" {
      type = "character varying(500)"
    }
    column "invitem_udfstring02" {
      type = "character varying(500)"
    }
    column "invitem_udfstring03" {
      type = "character varying(500)"
    }
    column "invitem_udfstring04" {
      type = "character varying(500)"
    }
    column "invitem_udfstring05" {
      type = "character varying(500)"
    }
    column "invitem_udfstring06" {
      type = "character varying(500)"
    }
    column "invitem_udfstring07" {
      type = "character varying(500)"
    }
    column "invitem_udfstring08" {
      type = "character varying(500)"
    }
    column "invitem_udfstring09" {
      type = "character varying(500)"
    }
    column "invitem_udfstring10" {
      type = "character varying(500)"
    }
    column "invitem_udfnum01" {
      type = "numeric(20,3)"
    }
    column "invitem_udfnum02" {
      type = "numeric(20,3)"
    }
    column "invitem_udfnum03" {
      type = "numeric(20,3)"
    }
    column "invitem_udfnum04" {
      type = "numeric(20,3)"
    }
    column "invitem_udfnum05" {
      type = "numeric(20,3)"
    }
    column "invitem_udfdate01" {
      type = "timestamp(0) without time zone"
    }
    column "invitem_udfdate02" {
      type = "timestamp(0) without time zone"
    }
    column "invitem_udfdate03" {
      type = "timestamp(0) without time zone"
    }
    column "invitem_udfdate04" {
      type = "timestamp(0) without time zone"
    }
    column "invitem_udfdate05" {
      type = "timestamp(0) without time zone"
    }
    column "vendor_code" {
      type = "bigint"
    }
    column "ledger" {
      type = "character varying(100)"
    }
    column "sub_ledger" {
      type = "character varying(100)"
    }
    column "itc_eligibility" {
      type = text
    }
    column "item_management_mode" {
      type = "character(1)"
    }
    column "price_management" {
      type = "character(1)"
    }
    column "manage_expiry" {
      type = "character(1)"
    }
    column "validity_mode" {
      type = "character(1)"
    }
    column "validity_period" {
      type = "bigint"
    }
    column "pos_batch_selection_mode" {
      type = "character(1)"
    }
  )
}

