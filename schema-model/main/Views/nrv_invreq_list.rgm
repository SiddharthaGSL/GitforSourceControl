view "main"."nrv_invreq_list" {
  text = """-
SELECT i.reqno,
    i.reqcode,
    i.admsite_code AS ownersitecode,
    st.name AS ownersite,
    st.shrtname AS ownersiteshrtname,
    i.reqdt,
    sum(COALESCE(d.rqqty, (0)::numeric)) AS reqqty,
    sum(COALESCE(d.isqty, (0)::numeric)) AS issueqty,
    COALESCE(agm.noofattachment, (0)::bigint) AS noofattachment,
    i.remarks,
        CASE
            WHEN ((cr.fname IS NOT NULL) AND (cr.eno IS NOT NULL)) THEN (((((cr.fname)::text || ' ['::text) || (cr.eno)::text) || ']'::text))::character varying
            ELSE cr.fname
        END AS created_by,
    i.creation_time AS created_on,
    i.last_modified_time AS lastmodifiedon,
        CASE
            WHEN ((la.fname IS NOT NULL) AND (la.eno IS NOT NULL)) THEN (((((la.fname)::text || ' ['::text) || (la.eno)::text) || ']'::text))::character varying
            ELSE la.fname
        END AS lastmodifiedby,
    y.yname AS yearname,
    i.ycode,
        CASE
            WHEN (COALESCE(i.stat, 'N'::bpchar) = 'N'::bpchar) THEN 'Not Issued'::text
            WHEN (COALESCE(i.stat, 'N'::bpchar) = 'T'::bpchar) THEN 'Total Issued'::text
            WHEN (COALESCE(i.stat, 'N'::bpchar) = 'P'::bpchar) THEN 'Partly Issued'::text
            ELSE NULL::text
        END AS status,
    i.entry_source,
    i.udfstring01,
    i.udfstring02,
    i.udfstring03,
    i.udfstring04,
    i.udfstring05,
    i.udfstring06,
    i.udfstring07,
    i.udfstring08,
    i.udfstring09,
    i.udfstring10,
    i.udfnum01,
    i.udfnum02,
    i.udfnum03,
    i.udfnum04,
    i.udfnum05,
    i.udfdate01,
    i.udfdate02,
    i.udfdate03,
    i.udfdate04,
    i.udfdate05
   FROM main.admyear y,
    main.invreqdet d,
    ((((main.invreqmain i
     LEFT JOIN main.admsite st ON ((i.admsite_code = st.code)))
     LEFT JOIN ( SELECT count(*) AS noofattachment,
            admattached_files.entry_code
           FROM main.admattached_files
          WHERE ((admattached_files.entry_type)::text = 'INVREQ'::text)
          GROUP BY admattached_files.entry_code) agm ON (((i.reqcode)::numeric = (agm.entry_code)::numeric)))
     LEFT JOIN main.hrdemp cr ON ((i.creation_ecode = cr.ecode)))
     LEFT JOIN main.hrdemp la ON ((i.last_modified_ecode = la.ecode)))
  WHERE ((i.reqcode = d.reqcode) AND (i.ycode = y.ycode))
  GROUP BY i.reqno, i.reqcode, i.admsite_code, st.name, st.shrtname, i.reqdt, COALESCE(agm.noofattachment, (0)::bigint), i.remarks,
        CASE
            WHEN ((cr.fname IS NOT NULL) AND (cr.eno IS NOT NULL)) THEN (((((cr.fname)::text || ' ['::text) || (cr.eno)::text) || ']'::text))::character varying
            ELSE cr.fname
        END, i.creation_time, i.last_modified_time,
        CASE
            WHEN ((la.fname IS NOT NULL) AND (la.eno IS NOT NULL)) THEN (((((la.fname)::text || ' ['::text) || (la.eno)::text) || ']'::text))::character varying
            ELSE la.fname
        END, y.yname, i.ycode, i.entry_source, i.udfstring01, i.udfstring02, i.udfstring03, i.udfstring04, i.udfstring05, i.udfstring06, i.udfstring07, i.udfstring08, i.udfstring09, i.udfstring10, i.udfnum01, i.udfnum02, i.udfnum03, i.udfnum04, i.udfnum05, i.udfdate01, i.udfdate02, i.udfdate03, i.udfdate04, i.udfdate05,
        CASE
            WHEN (COALESCE(i.stat, 'N'::bpchar) = 'N'::bpchar) THEN 'Not Issued'::text
            WHEN (COALESCE(i.stat, 'N'::bpchar) = 'T'::bpchar) THEN 'Total Issued'::text
            WHEN (COALESCE(i.stat, 'N'::bpchar) = 'P'::bpchar) THEN 'Partly Issued'::text
            ELSE NULL::text
        END;
"""
  columns = (
    column "reqno" {
      type = "bigint"
    }
    column "reqcode" {
      type = "bigint"
    }
    column "ownersitecode" {
      type = "bigint"
    }
    column "ownersite" {
      type = "character varying(100)"
    }
    column "ownersiteshrtname" {
      type = "character varying(25)"
    }
    column "reqdt" {
      type = "timestamp(0) without time zone"
    }
    column "reqqty" {
      type = "numeric"
    }
    column "issueqty" {
      type = "numeric"
    }
    column "noofattachment" {
      type = "bigint"
    }
    column "remarks" {
      type = "character varying(500)"
    }
    column "created_by" {
      type = "character varying"
    }
    column "created_on" {
      type = "timestamp(0) without time zone"
    }
    column "lastmodifiedon" {
      type = "timestamp(0) without time zone"
    }
    column "lastmodifiedby" {
      type = "character varying"
    }
    column "yearname" {
      type = "character varying(100)"
    }
    column "ycode" {
      type = "bigint"
    }
    column "status" {
      type = text
    }
    column "entry_source" {
      type = "character varying(25)"
    }
    column "udfstring01" {
      type = "character varying(500)"
    }
    column "udfstring02" {
      type = "character varying(500)"
    }
    column "udfstring03" {
      type = "character varying(500)"
    }
    column "udfstring04" {
      type = "character varying(500)"
    }
    column "udfstring05" {
      type = "character varying(500)"
    }
    column "udfstring06" {
      type = "character varying(500)"
    }
    column "udfstring07" {
      type = "character varying(500)"
    }
    column "udfstring08" {
      type = "character varying(500)"
    }
    column "udfstring09" {
      type = "character varying(500)"
    }
    column "udfstring10" {
      type = "character varying(500)"
    }
    column "udfnum01" {
      type = "numeric(20,3)"
    }
    column "udfnum02" {
      type = "numeric(20,3)"
    }
    column "udfnum03" {
      type = "numeric(20,3)"
    }
    column "udfnum04" {
      type = "numeric(20,3)"
    }
    column "udfnum05" {
      type = "numeric(20,3)"
    }
    column "udfdate01" {
      type = "timestamp(0) without time zone"
    }
    column "udfdate02" {
      type = "timestamp(0) without time zone"
    }
    column "udfdate03" {
      type = "timestamp(0) without time zone"
    }
    column "udfdate04" {
      type = "timestamp(0) without time zone"
    }
    column "udfdate05" {
      type = "timestamp(0) without time zone"
    }
  )
}

