view "main"."v_lpcard_chk" {
  text = """-
SELECT lpcard.cardno,
    lpcard.seq,
    lpcard.status,
    lpcard.issuedon,
    lpcard.validity_in_months,
    lpcard.valid_upto,
    lpcard.psite_customer_code,
    lpcard.salutation,
    lpcard.fname,
    lpcard.mname,
    lpcard.lname,
    lpcard.profession,
    lpcard.religion,
    lpcard.gender,
    lpcard.dob,
    lpcard.spousename,
    lpcard.doa,
    lpcard.address,
    lpcard.district,
    lpcard.city,
    lpcard.pin,
    lpcard.state,
    lpcard.country,
    lpcard.phone1,
    lpcard.phone2,
    lpcard.mobile,
    lpcard.email,
    lpcard.membersince,
    lpcard.remarks,
    lpcard.receivemessage,
    lpcard.prefcommunicationmode,
    lpcard.lastmodifiedon,
    lpcard.lastmodifiedby,
    lpcard.allocated_admsite_code AS site_code
   FROM main.lpcard
UNION
 SELECT lpcard.cardno,
    lpcard.seq,
    lpcard.status,
    lpcard.issuedon,
    lpcard.validity_in_months,
    lpcard.valid_upto,
    lpcard.psite_customer_code,
    lpcard.salutation,
    lpcard.fname,
    lpcard.mname,
    lpcard.lname,
    lpcard.profession,
    lpcard.religion,
    lpcard.gender,
    lpcard.dob,
    lpcard.spousename,
    lpcard.doa,
    lpcard.address,
    lpcard.district,
    lpcard.city,
    lpcard.pin,
    lpcard.state,
    lpcard.country,
    lpcard.phone1,
    lpcard.phone2,
    lpcard.mobile,
    lpcard.email,
    lpcard.membersince,
    lpcard.remarks,
    lpcard.receivemessage,
    lpcard.prefcommunicationmode,
    lpcard.lastmodifiedon,
    lpcard.lastmodifiedby,
    a.admsite_code AS site_code
   FROM (main.lpcard
     JOIN ( SELECT DISTINCT pc.lpcardno,
            cd.admsite_code
           FROM main.psite_customer_dist cd,
            main.psite_customer pc
          WHERE ((cd.psite_customer_code)::text = (pc.code)::text)) a ON (((lpcard.cardno)::text = (a.lpcardno)::text)));
"""
  columns = (
    column "cardno" {
      type = "character varying(30)"
    }
    column "seq" {
      type = "bigint"
    }
    column "status" {
      type = "character(1)"
    }
    column "issuedon" {
      type = "timestamp(0) without time zone"
    }
    column "validity_in_months" {
      type = "bigint"
    }
    column "valid_upto" {
      type = "timestamp(0) without time zone"
    }
    column "psite_customer_code" {
      type = "character varying(50)"
    }
    column "salutation" {
      type = "character varying(25)"
    }
    column "fname" {
      type = "character varying(100)"
    }
    column "mname" {
      type = "character varying(100)"
    }
    column "lname" {
      type = "character varying(100)"
    }
    column "profession" {
      type = "character varying(100)"
    }
    column "religion" {
      type = "character varying(100)"
    }
    column "gender" {
      type = "character(1)"
    }
    column "dob" {
      type = "timestamp(0) without time zone"
    }
    column "spousename" {
      type = "character varying(200)"
    }
    column "doa" {
      type = "timestamp(0) without time zone"
    }
    column "address" {
      type = "character varying(200)"
    }
    column "district" {
      type = "character varying(50)"
    }
    column "city" {
      type = "character varying(50)"
    }
    column "pin" {
      type = "character varying(10)"
    }
    column "state" {
      type = "character varying(50)"
    }
    column "country" {
      type = "character varying(50)"
    }
    column "phone1" {
      type = "character varying(50)"
    }
    column "phone2" {
      type = "character varying(50)"
    }
    column "mobile" {
      type = "character varying(50)"
    }
    column "email" {
      type = "character varying(100)"
    }
    column "membersince" {
      type = "timestamp(0) without time zone"
    }
    column "remarks" {
      type = "character varying(500)"
    }
    column "receivemessage" {
      type = "bigint"
    }
    column "prefcommunicationmode" {
      type = "character(1)"
    }
    column "lastmodifiedon" {
      type = "timestamp(0) without time zone"
    }
    column "lastmodifiedby" {
      type = "bigint"
    }
    column "site_code" {
      type = "bigint"
    }
  )
}

