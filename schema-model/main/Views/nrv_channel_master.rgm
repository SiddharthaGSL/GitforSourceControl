view "main"."nrv_channel_master" {
  text = """-
SELECT s.slname AS channelname,
    s.slcode AS code,
    s.slid AS channelcode,
        CASE
            WHEN ((s.is_marketplace)::numeric = (1)::numeric) THEN 'Yes'::text
            ELSE 'No'::text
        END AS is_marketplace,
    cls.clsname AS class_name,
    gl.glname AS arap_ledger,
    s.pan,
    s.rem AS remarks,
        CASE
            WHEN ((s.recalculate_tax)::numeric = (1)::numeric) THEN 'Yes'::text
            ELSE 'No'::text
        END AS recalculate_tax,
        CASE
            WHEN (s.tds_app = 'Y'::bpchar) THEN 'Yes'::text
            ELSE 'No'::text
        END AS tds_applicable,
    src.tdssrcname AS tds_source,
    sgl.glname AS sales_ledger,
    srgl.glname AS sales_return_ledger,
    pgl.glname AS purchase_ledger,
    prgl.glname AS purchase_return_ledger,
    s.bctname AS city,
    s.bcp AS contact_person,
    s.bfx2 AS mobile_no,
    gst.name AS gst_category,
    s.cp_gstin_no AS gst_identification_no,
    s.cp_gstin_date AS gst_registration_date,
    s.cp_gstin_state_code AS gst_state_code,
    gte.name AS gst_state_name,
        CASE
            WHEN (s.appl_inv_num_for_gst = 'Y'::bpchar) THEN 'Yes'::text
            ELSE 'No'::text
        END AS applicable_invoice_num_for_gst,
    t.slname AS transporter_name,
        CASE
            WHEN (s.ext = 'N'::bpchar) THEN 'No'::text
            ELSE 'Yes'::text
        END AS extinct,
    s.abbre AS alias
   FROM ((((((((((main.finsl s
     LEFT JOIN main.fingl gl ON ((s.glcode = gl.glcode)))
     LEFT JOIN main.fingl sgl ON ((s.consignment_sales_glcode = sgl.glcode)))
     LEFT JOIN main.fingl srgl ON ((s.sales_return_glcode = srgl.glcode)))
     LEFT JOIN main.fingl pgl ON ((s.purchase_glcode = pgl.glcode)))
     LEFT JOIN main.fingl prgl ON ((s.purchase_return_glcode = prgl.glcode)))
     LEFT JOIN main.admgststate gte ON ((s.cp_gstin_state_code = gte.code)))
     LEFT JOIN main.fintdssrc src ON ((s.tdssrccode = src.tdssrccode)))
     LEFT JOIN ( SELECT DISTINCT finsl.slcode,
            finsl.slname
           FROM main.finsl
          WHERE (finsl.trpcode IS NOT NULL)) t ON ((s.trpcode = t.slcode)))
     JOIN main.admgstcategory gst ON ((s.cp_category_code = gst.code)))
     JOIN main.admcls cls ON ((s.clscode = cls.clscode)))
  WHERE (cls.clstype = 'H'::bpchar);
"""
  columns = (
    column "channelname" {
      type = "character varying(100)"
    }
    column "code" {
      type = "bigint"
    }
    column "channelcode" {
      type = "character varying(25)"
    }
    column "is_marketplace" {
      type = text
    }
    column "class_name" {
      type = "character varying(100)"
    }
    column "arap_ledger" {
      type = "character varying(100)"
    }
    column "pan" {
      type = "character varying(100)"
    }
    column "remarks" {
      type = "character varying(500)"
    }
    column "recalculate_tax" {
      type = text
    }
    column "tds_applicable" {
      type = text
    }
    column "tds_source" {
      type = "character varying(100)"
    }
    column "sales_ledger" {
      type = "character varying(100)"
    }
    column "sales_return_ledger" {
      type = "character varying(100)"
    }
    column "purchase_ledger" {
      type = "character varying(100)"
    }
    column "purchase_return_ledger" {
      type = "character varying(100)"
    }
    column "city" {
      type = "character varying(100)"
    }
    column "contact_person" {
      type = "character varying(100)"
    }
    column "mobile_no" {
      type = "character varying(50)"
    }
    column "gst_category" {
      type = "character varying(100)"
    }
    column "gst_identification_no" {
      type = "character varying(15)"
    }
    column "gst_registration_date" {
      type = "timestamp(0) without time zone"
    }
    column "gst_state_code" {
      type = "character(2)"
    }
    column "gst_state_name" {
      type = "character varying(50)"
    }
    column "applicable_invoice_num_for_gst" {
      type = text
    }
    column "transporter_name" {
      type = "character varying(100)"
    }
    column "extinct" {
      type = text
    }
    column "alias" {
      type = "character varying(25)"
    }
  )
}

