view "main"."nrv_grt_list" {
  text = """-
SELECT i.scheme_docno AS returnno,
    i.grtcode,
    i.admsite_code,
    i.grtdt AS returndate,
    g.scheme_docno AS receiptno,
    prt.scheme_docno AS referenceno,
    i.geno AS returninvoiceno,
    s.slname AS vendorname,
    s.slid AS vendorid,
    COALESCE(sp.name, l.locname) AS stockpoint,
    ptr.name AS term_name,
    trd.name AS tradegroup_name,
    sum(COALESCE(d.qty, (0)::numeric)) AS returnqty,
    sum(COALESCE(d.rtinvqty, (0)::numeric)) AS invoiceqty,
    i.grsamt AS grossamt,
    i.chgamt AS chargeamt,
    i.netamt AS netamount,
    ((ag.slname)::text ||
        CASE
            WHEN (ag.slid IS NULL) THEN NULL::text
            ELSE ((' ['::text || (ag.slid)::text) || ']'::text)
        END) AS agent,
    COALESCE(agm.noofattachment, (0)::bigint) AS noofattachment,
    i.rem AS remarks,
        CASE
            WHEN ((cr.fname IS NOT NULL) AND (cr.eno IS NOT NULL)) THEN (((((cr.fname)::text || ' ['::text) || (cr.eno)::text) || ']'::text))::character varying
            ELSE cr.fname
        END AS created_by,
    i."time" AS created_on,
    i.last_access_time AS lastmodifiedon,
        CASE
            WHEN ((la.fname IS NOT NULL) AND (la.eno IS NOT NULL)) THEN (((((la.fname)::text || ' ['::text) || (la.eno)::text) || ']'::text))::character varying
            ELSE la.fname
        END AS lastmodifiedby,
        CASE
            WHEN ((au.fname IS NOT NULL) AND (au.eno IS NOT NULL)) THEN (((((au.fname)::text || ' ['::text) || (au.eno)::text) || ']'::text))::character varying
            ELSE au.fname
        END AS authorisedby,
    i.auth_time AS authorized_on,
    st.name AS ownersite,
    y.yname AS yearname,
    i.ycode,
    i.entry_source,
        CASE
            WHEN (i.grccode IS NULL) THEN 'Adhoc'::text
            ELSE 'Against Receipt'::text
        END AS entry_mode,
    i.udfstring01,
    i.udfstring02,
    i.udfstring03,
    i.udfstring04,
    i.udfstring05,
    i.udfstring06,
    i.udfstring07,
    i.udfstring08,
    i.udfstring09,
    i.udfstring10,
    i.udfnum01,
    i.udfnum02,
    i.udfnum03,
    i.udfnum04,
    i.udfnum05,
    i.udfdate01,
    i.udfdate02,
    i.udfdate03,
    i.udfdate04,
    i.udfdate05
   FROM main.admyear y,
    main.admsite st,
    main.finsl s,
    main.invloc l,
    main.invgrtdet d,
    ((((((((((main.invgrtmain i
     LEFT JOIN main.invgrcmain g ON ((i.grccode = g.grccode)))
     LEFT JOIN main.finsl ag ON ((i.agcode = ag.slcode)))
     LEFT JOIN ( SELECT count(*) AS noofattachment,
            admattached_files.entry_code
           FROM main.admattached_files
          WHERE ((admattached_files.entry_type)::text = 'GRT'::text)
          GROUP BY admattached_files.entry_code) agm ON (((i.grtcode)::numeric = (agm.entry_code)::numeric)))
     LEFT JOIN main.psite_stockpoint sp ON (((i.psite_stockpoint_code)::text = (sp.code)::text)))
     LEFT JOIN main.hrdemp cr ON ((i.ecode = cr.ecode)))
     LEFT JOIN main.hrdemp la ON ((i.last_access_ecode = la.ecode)))
     LEFT JOIN main.hrdemp au ON ((i.auth_ecode = au.ecode)))
     LEFT JOIN main.purtermmain ptr ON ((i.purtermcode = ptr.code)))
     LEFT JOIN main.purrtmain prt ON ((i.rtcode = prt.rtcode)))
     LEFT JOIN main.fintradegrp trd ON ((i.fintradegrp_code = trd.code)))
  WHERE ((i.grtcode = d.grtcode) AND (i.pcode = s.slcode) AND (i.admsite_code = st.code) AND (i.ycode = y.ycode) AND (i.loccode = l.loccode))
  GROUP BY i.scheme_docno, i.grtcode, i.admsite_code, i.grtdt, i.geno, s.slname, s.slid, COALESCE(sp.name, l.locname), ptr.name, trd.name, i.grsamt, i.chgamt, i.netamt, ((ag.slname)::text ||
        CASE
            WHEN (ag.slid IS NULL) THEN NULL::text
            ELSE ((' ['::text || (ag.slid)::text) || ']'::text)
        END), COALESCE(agm.noofattachment, (0)::bigint), i.rem,
        CASE
            WHEN ((cr.fname IS NOT NULL) AND (cr.eno IS NOT NULL)) THEN (((((cr.fname)::text || ' ['::text) || (cr.eno)::text) || ']'::text))::character varying
            ELSE cr.fname
        END, i."time", i.last_access_time,
        CASE
            WHEN ((la.fname IS NOT NULL) AND (la.eno IS NOT NULL)) THEN (((((la.fname)::text || ' ['::text) || (la.eno)::text) || ']'::text))::character varying
            ELSE la.fname
        END,
        CASE
            WHEN ((au.fname IS NOT NULL) AND (au.eno IS NOT NULL)) THEN (((((au.fname)::text || ' ['::text) || (au.eno)::text) || ']'::text))::character varying
            ELSE au.fname
        END, i.auth_time, st.name, y.yname, i.entry_source, i.ycode,
        CASE
            WHEN (i.grccode IS NULL) THEN 'Adhoc'::text
            ELSE 'Against Receipt'::text
        END, g.scheme_docno, prt.scheme_docno, i.udfstring01, i.udfstring02, i.udfstring03, i.udfstring04, i.udfstring05, i.udfstring06, i.udfstring07, i.udfstring08, i.udfstring09, i.udfstring10, i.udfnum01, i.udfnum02, i.udfnum03, i.udfnum04, i.udfnum05, i.udfdate01, i.udfdate02, i.udfdate03, i.udfdate04, i.udfdate05;
"""
  columns = (
    column "returnno" {
      type = "character varying(25)"
    }
    column "grtcode" {
      type = "bigint"
    }
    column "admsite_code" {
      type = "bigint"
    }
    column "returndate" {
      type = "timestamp(0) without time zone"
    }
    column "receiptno" {
      type = "character varying(25)"
    }
    column "referenceno" {
      type = "character varying(25)"
    }
    column "returninvoiceno" {
      type = "character varying(25)"
    }
    column "vendorname" {
      type = "character varying(100)"
    }
    column "vendorid" {
      type = "character varying(25)"
    }
    column "stockpoint" {
      type = "character varying(100)"
    }
    column "term_name" {
      type = "character varying(100)"
    }
    column "tradegroup_name" {
      type = "character varying(100)"
    }
    column "returnqty" {
      type = "numeric"
    }
    column "invoiceqty" {
      type = "numeric"
    }
    column "grossamt" {
      type = "numeric(20,2)"
    }
    column "chargeamt" {
      type = "numeric(20,2)"
    }
    column "netamount" {
      type = "numeric(20,2)"
    }
    column "agent" {
      type = text
    }
    column "noofattachment" {
      type = "bigint"
    }
    column "remarks" {
      type = "character varying(500)"
    }
    column "created_by" {
      type = "character varying"
    }
    column "created_on" {
      type = "timestamp(0) without time zone"
    }
    column "lastmodifiedon" {
      type = "timestamp(0) without time zone"
    }
    column "lastmodifiedby" {
      type = "character varying"
    }
    column "authorisedby" {
      type = "character varying"
    }
    column "authorized_on" {
      type = "timestamp(0) without time zone"
    }
    column "ownersite" {
      type = "character varying(100)"
    }
    column "yearname" {
      type = "character varying(100)"
    }
    column "ycode" {
      type = "bigint"
    }
    column "entry_source" {
      type = "character varying(25)"
    }
    column "entry_mode" {
      type = text
    }
    column "udfstring01" {
      type = "character varying(500)"
    }
    column "udfstring02" {
      type = "character varying(500)"
    }
    column "udfstring03" {
      type = "character varying(500)"
    }
    column "udfstring04" {
      type = "character varying(500)"
    }
    column "udfstring05" {
      type = "character varying(500)"
    }
    column "udfstring06" {
      type = "character varying(500)"
    }
    column "udfstring07" {
      type = "character varying(500)"
    }
    column "udfstring08" {
      type = "character varying(500)"
    }
    column "udfstring09" {
      type = "character varying(500)"
    }
    column "udfstring10" {
      type = "character varying(500)"
    }
    column "udfnum01" {
      type = "numeric(20,3)"
    }
    column "udfnum02" {
      type = "numeric(20,3)"
    }
    column "udfnum03" {
      type = "numeric(20,3)"
    }
    column "udfnum04" {
      type = "numeric(20,3)"
    }
    column "udfnum05" {
      type = "numeric(20,3)"
    }
    column "udfdate01" {
      type = "timestamp(0) without time zone"
    }
    column "udfdate02" {
      type = "timestamp(0) without time zone"
    }
    column "udfdate03" {
      type = "timestamp(0) without time zone"
    }
    column "udfdate04" {
      type = "timestamp(0) without time zone"
    }
    column "udfdate05" {
      type = "timestamp(0) without time zone"
    }
  )
}

