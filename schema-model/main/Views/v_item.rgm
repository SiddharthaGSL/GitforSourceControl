view "main"."v_item" {
  text = """-
SELECT
        CASE
            WHEN (i.item_name IS NOT NULL) THEN (i.item_name)::text
            ELSE substr(TRIM(BOTH FROM (((((((((((COALESCE(i.cname1, ''::character varying))::text || ' '::text) || (COALESCE(i.cname2, ''::character varying))::text) || ' '::text) || (COALESCE(i.cname3, ''::character varying))::text) || ' '::text) || (COALESCE(i.cname4, ''::character varying))::text) || ' '::text) || (COALESCE(i.cname5, ''::character varying))::text) || ' '::text) || (COALESCE(i.cname6, ''::character varying))::text)), 1, 500)
        END AS item,
    i.shrtname,
    i.cmpcode,
    i.icode,
    i.partycode,
    i.partyname,
    i.unitname,
    i.rate,
    g.grpname,
    g.grpcode,
    g.lev1grpname,
    g.lev2grpname,
    g.parcode,
    g.parcode AS sectioncode,
    s.parcode AS divisioncode,
    i.taxcode,
    f.taxname AS itemtaxgroupname,
    i.cname1,
    i.ccode1,
    i.cname2,
    i.ccode2,
    i.cname3,
    i.ccode3,
    i.cname4,
    i.ccode4,
    i.cname5,
    i.ccode5,
    i.cname6,
    i.ccode6,
    i.mrp,
    i.charge,
    i.barrq,
    i.barunit,
    i.stkplancode,
    i.rem,
    i.ext,
    i.generated,
    i.last_changed,
    i.stockindate,
    i.considerinorder,
    i.considerasfree,
    i.barcode,
    i.listed_mrp,
    i.expiry_date,
    g.cat1infamily,
    g.cat2infamily,
    g.cat3infamily,
    g.cat4infamily,
    g.cat5infamily,
    g.cat6infamily,
    g.attr1prompt,
    g.attr2prompt,
    g.attr3prompt,
    g.attr4prompt,
    g.attr5prompt,
    g.attr6prompt,
    a.cat1prompt,
    a.cat2prompt,
    a.cat3prompt,
    a.cat4prompt,
    a.cat5prompt,
    a.cat6prompt,
    i.desc1 AS itemdesc1,
    i.desc2 AS itemdesc2,
    i.desc3 AS itemdesc3,
    i.desc4 AS itemdesc4,
    i.desc5 AS itemdesc5,
    i.desc6 AS itemdesc6,
    g.ageing_appl,
    g.costing_method,
    i.noninventory,
    i.costrate,
    i.wsp,
    i.invarticle_code AS articlecode,
    a.name AS articlename,
    a.invmmrule_code,
    a.invattr1_name,
    a.invattr1_code,
    a.invattr2_name,
    a.invattr2_code,
    a.invattr3_name,
    a.invattr3_code,
    a.invattr4_name,
    a.invattr4_code,
    a.invattr5_name,
    a.invattr5_code,
    a.invattr6_name,
    a.invattr6_code,
    a.mrp AS article_mrp,
    a.mrprangefrom AS article_mrprangefrom,
    a.mrprangeto AS article_mrprangeto,
        CASE
            WHEN (i.grccode IS NULL) THEN 'Not a Consignment Item'::text
            ELSE 'Consignment Item'::text
        END AS consignment_item,
    i.isservice,
    i.pos_multiprice_action,
        CASE
            WHEN (i.pos_multiprice_action = 'P'::bpchar) THEN 'Popup'::text
            WHEN (i.pos_multiprice_action = 'L'::bpchar) THEN 'Last Price'::text
            WHEN (i.pos_multiprice_action = 'N'::bpchar) THEN 'Not Applicable'::text
            ELSE NULL::text
        END AS pos_multiprice_actiondisplay,
    i.service_days,
    i.negative_stock_alert,
        CASE
            WHEN (i.negative_stock_alert = 'I'::bpchar) THEN 'Ignore'::text
            WHEN (i.negative_stock_alert = 'W'::bpchar) THEN 'Warning'::text
            WHEN (i.negative_stock_alert = 'S'::bpchar) THEN 'Stop'::text
            WHEN (i.negative_stock_alert = 'P'::bpchar) THEN 'Profile'::text
            ELSE NULL::text
        END AS negative_stock_alertdisplay,
    g.rem AS grp_rem,
    i.ismetal,
    i.item_name,
    i.price_terms,
    i.price_basis,
    i.invmetal_code,
    i.net_weight,
    i.grs_weight,
    i.job_cost_basis,
    i.job_cost_amt,
    i.other_chg,
    i.part_qty,
    i.certificate_no,
        CASE
            WHEN (COALESCE((i.d_count)::numeric, (0)::numeric) = (0)::numeric) THEN NULL::numeric
            ELSE (i.d_count)::numeric
        END AS d_count,
    i.d_size,
    i.d_weight,
    i.d_value,
    i.d_desc,
        CASE
            WHEN (COALESCE((i.c_count)::numeric, (0)::numeric) = (0)::numeric) THEN NULL::numeric
            ELSE (i.c_count)::numeric
        END AS c_count,
    i.c_weight,
    i.c_value,
    i.c_desc,
        CASE
            WHEN (COALESCE((i.o_count)::numeric, (0)::numeric) = (0)::numeric) THEN NULL::numeric
            ELSE (i.o_count)::numeric
        END AS o_count,
    i.o_weight,
    i.o_value,
    i.o_desc,
    i.routecode,
    r.name AS routeid,
    i.material_type,
        CASE
            WHEN (i.material_type = 'F'::bpchar) THEN 'Finished Good'::text
            WHEN (i.material_type = 'S'::bpchar) THEN 'Semi Finished Good'::text
            WHEN (i.material_type = 'R'::bpchar) THEN 'Raw Material'::text
            ELSE NULL::text
        END AS disp_material_type,
    i.desc1,
    i.desc2,
    i.desc3,
    i.desc4,
    i.desc5,
    i.desc6,
    i.num1,
    i.num2,
    i.num3,
    g.img_convention,
    g.seq AS department_seq,
    s.seq AS section_seq,
    i.num1 AS itemnum1,
    i.num2 AS itemnum2,
    i.num3 AS itemnum3,
    i.autoqtypopup,
        CASE
            WHEN (i.autoqtypopup = 'Y'::bpchar) THEN 'Yes'::text
            WHEN (i.autoqtypopup = 'N'::bpchar) THEN 'No'::text
            ELSE NULL::text
        END AS autoqtypopupdisplay,
    i.allow_price_modification,
        CASE
            WHEN (i.allow_price_modification = 'Y'::bpchar) THEN 'Yes'::text
            WHEN (i.allow_price_modification = 'N'::bpchar) THEN 'No'::text
            ELSE NULL::text
        END AS allow_price_modificationdisp,
    i.price_change_limit,
    g.rem AS departmentalias,
    s.rem AS sectionalias,
    d.rem AS divisionalias,
    i.pos_return_behavior AS posreturnbehaviour,
        CASE
            WHEN (i.pos_return_behavior = 'R'::bpchar) THEN 'Only against bill'::text
            WHEN (i.pos_return_behavior = 'P'::bpchar) THEN 'Based on user policy'::text
            WHEN (i.pos_return_behavior = 'A'::bpchar) THEN 'Always'::text
            WHEN (i.pos_return_behavior = 'N'::bpchar) THEN 'Do not allow'::text
            ELSE NULL::text
        END AS posreturnbehaviourdisplay,
    i.search_string,
    i.udfstring01,
    i.udfstring02,
    i.udfstring03,
    i.udfstring04,
    i.udfstring05,
    i.udfstring06,
    i.udfstring07,
    i.udfstring08,
    i.udfstring09,
    i.udfstring10,
    i.udfnum01,
    i.udfnum02,
    i.udfnum03,
    i.udfnum04,
    i.udfnum05,
    i.udfdate01,
    i.udfdate02,
    i.udfdate03,
    i.udfdate04,
    i.udfdate05,
    b.hsn_sac_code,
    b.govt_identifier,
    i.invhsnsacmain_code,
    i.isprice_excludes_tax,
    i.glcode,
    i.slcode,
    i.gst_itc_appl,
    gl.costapp AS gl_cc_appl,
    i.costsheet_code AS costsheetcode,
    pch.id AS costsheetid,
    gl.glname,
    sl.slname,
    i.item_management_mode,
        CASE
            WHEN (i.item_management_mode = 'I'::bpchar) THEN 'Item wise'::text
            WHEN (i.item_management_mode = 'B'::bpchar) THEN 'Batch wise'::text
            WHEN (i.item_management_mode = 'S'::bpchar) THEN 'Serial wise'::text
            ELSE NULL::text
        END AS item_management_mode_display,
    i.validity_mode,
        CASE
            WHEN (i.validity_mode = 'D'::bpchar) THEN 'Days'::text
            WHEN (i.validity_mode = 'M'::bpchar) THEN 'Months'::text
            WHEN (i.validity_mode = 'Y'::bpchar) THEN 'Years'::text
            WHEN (i.validity_mode = 'N'::bpchar) THEN 'None'::text
            ELSE NULL::text
        END AS validity_mode_display,
    i.validity_period,
    i.price_management,
        CASE
            WHEN (i.price_management = 'I'::bpchar) THEN 'Item'::text
            WHEN (i.price_management = 'B'::bpchar) THEN 'Batch'::text
            ELSE NULL::text
        END AS price_management_display,
    i.manage_expiry,
        CASE
            WHEN (i.manage_expiry = 'Y'::bpchar) THEN 'Yes'::text
            ELSE 'No'::text
        END AS manage_expiry_display,
    i.pos_batch_selection_mode,
        CASE
            WHEN (i.pos_batch_selection_mode = 'A'::bpchar) THEN 'Auto'::text
            WHEN (i.pos_batch_selection_mode = 'M'::bpchar) THEN 'Manual'::text
            ELSE NULL::text
        END AS pos_batch_selctn_mode_display,
    COALESCE(g.iscreatebatchdocumentwise, 'N'::bpchar) AS iscreatebatchdocumentwise,
    g.doccode AS batchcreation_doc_code
   FROM main.invgrp s,
    main.invgrp g,
    main.invgrp d,
    main.invhsnsacmain b,
    main.invarticle a,
    (((((main.invitem i
     LEFT JOIN main.prdroutemain r ON ((i.routecode = r.code)))
     LEFT JOIN main.fintaxmain f ON ((i.taxcode = f.taxcode)))
     LEFT JOIN main.fingl gl ON ((i.glcode = gl.glcode)))
     LEFT JOIN main.finsl sl ON ((i.slcode = sl.slcode)))
     LEFT JOIN main.prdcostsheethead pch ON ((i.costsheet_code = pch.code)))
  WHERE ((i.invarticle_code = a.code) AND (a.grpcode = g.grpcode) AND (g.parcode = s.grpcode) AND (s.parcode = d.grpcode) AND (i.invhsnsacmain_code = b.code));
"""
  columns = (
    column "item" {
      type = text
    }
    column "shrtname" {
      type = "character varying(25)"
    }
    column "cmpcode" {
      type = "bigint"
    }
    column "icode" {
      type = "character varying(9)"
    }
    column "partycode" {
      type = "bigint"
    }
    column "partyname" {
      type = "character varying(100)"
    }
    column "unitname" {
      type = "character varying(100)"
    }
    column "rate" {
      type = "numeric(20,3)"
    }
    column "grpname" {
      type = "character varying(100)"
    }
    column "grpcode" {
      type = "bigint"
    }
    column "lev1grpname" {
      type = "character varying(100)"
    }
    column "lev2grpname" {
      type = "character varying(100)"
    }
    column "parcode" {
      type = "bigint"
    }
    column "sectioncode" {
      type = "bigint"
    }
    column "divisioncode" {
      type = "bigint"
    }
    column "taxcode" {
      type = "bigint"
    }
    column "itemtaxgroupname" {
      type = "character varying(100)"
    }
    column "cname1" {
      type = "character varying(100)"
    }
    column "ccode1" {
      type = "bigint"
    }
    column "cname2" {
      type = "character varying(100)"
    }
    column "ccode2" {
      type = "bigint"
    }
    column "cname3" {
      type = "character varying(100)"
    }
    column "ccode3" {
      type = "bigint"
    }
    column "cname4" {
      type = "character varying(100)"
    }
    column "ccode4" {
      type = "bigint"
    }
    column "cname5" {
      type = "character varying(100)"
    }
    column "ccode5" {
      type = "bigint"
    }
    column "cname6" {
      type = "character varying(100)"
    }
    column "ccode6" {
      type = "bigint"
    }
    column "mrp" {
      type = "numeric(20,3)"
    }
    column "charge" {
      type = "numeric(20,3)"
    }
    column "barrq" {
      type = "character(1)"
    }
    column "barunit" {
      type = "numeric(20,3)"
    }
    column "stkplancode" {
      type = "bigint"
    }
    column "rem" {
      type = "character varying(500)"
    }
    column "ext" {
      type = "character(1)"
    }
    column "generated" {
      type = "timestamp(0) without time zone"
    }
    column "last_changed" {
      type = "timestamp(0) without time zone"
    }
    column "stockindate" {
      type = "timestamp(0) without time zone"
    }
    column "considerinorder" {
      type = "character(1)"
    }
    column "considerasfree" {
      type = "character(1)"
    }
    column "barcode" {
      type = "character varying(50)"
    }
    column "listed_mrp" {
      type = "numeric(20,3)"
    }
    column "expiry_date" {
      type = "timestamp(0) without time zone"
    }
    column "cat1infamily" {
      type = "character(1)"
    }
    column "cat2infamily" {
      type = "character(1)"
    }
    column "cat3infamily" {
      type = "character(1)"
    }
    column "cat4infamily" {
      type = "character(1)"
    }
    column "cat5infamily" {
      type = "character(1)"
    }
    column "cat6infamily" {
      type = "character(1)"
    }
    column "attr1prompt" {
      type = "character varying(15)"
    }
    column "attr2prompt" {
      type = "character varying(15)"
    }
    column "attr3prompt" {
      type = "character varying(15)"
    }
    column "attr4prompt" {
      type = "character varying(15)"
    }
    column "attr5prompt" {
      type = "character varying(15)"
    }
    column "attr6prompt" {
      type = "character varying(15)"
    }
    column "cat1prompt" {
      type = "character varying(15)"
    }
    column "cat2prompt" {
      type = "character varying(15)"
    }
    column "cat3prompt" {
      type = "character varying(15)"
    }
    column "cat4prompt" {
      type = "character varying(15)"
    }
    column "cat5prompt" {
      type = "character varying(15)"
    }
    column "cat6prompt" {
      type = "character varying(15)"
    }
    column "itemdesc1" {
      type = "character varying(500)"
    }
    column "itemdesc2" {
      type = "character varying(500)"
    }
    column "itemdesc3" {
      type = "character varying(500)"
    }
    column "itemdesc4" {
      type = "character varying(500)"
    }
    column "itemdesc5" {
      type = "character varying(500)"
    }
    column "itemdesc6" {
      type = "character varying(500)"
    }
    column "ageing_appl" {
      type = "character(1)"
    }
    column "costing_method" {
      type = "character(1)"
    }
    column "noninventory" {
      type = "character(1)"
    }
    column "costrate" {
      type = "numeric(20,3)"
    }
    column "wsp" {
      type = "numeric(20,3)"
    }
    column "articlecode" {
      type = "bigint"
    }
    column "articlename" {
      type = "character varying(100)"
    }
    column "invmmrule_code" {
      type = "bigint"
    }
    column "invattr1_name" {
      type = "character varying(100)"
    }
    column "invattr1_code" {
      type = "bigint"
    }
    column "invattr2_name" {
      type = "character varying(100)"
    }
    column "invattr2_code" {
      type = "bigint"
    }
    column "invattr3_name" {
      type = "character varying(100)"
    }
    column "invattr3_code" {
      type = "bigint"
    }
    column "invattr4_name" {
      type = "character varying(100)"
    }
    column "invattr4_code" {
      type = "bigint"
    }
    column "invattr5_name" {
      type = "character varying(100)"
    }
    column "invattr5_code" {
      type = "bigint"
    }
    column "invattr6_name" {
      type = "character varying(100)"
    }
    column "invattr6_code" {
      type = "bigint"
    }
    column "article_mrp" {
      type = "numeric(20,2)"
    }
    column "article_mrprangefrom" {
      type = "numeric(20,2)"
    }
    column "article_mrprangeto" {
      type = "numeric(20,2)"
    }
    column "consignment_item" {
      type = text
    }
    column "isservice" {
      type = "character(1)"
    }
    column "pos_multiprice_action" {
      type = "character(1)"
    }
    column "pos_multiprice_actiondisplay" {
      type = text
    }
    column "service_days" {
      type = "bigint"
    }
    column "negative_stock_alert" {
      type = "character(1)"
    }
    column "negative_stock_alertdisplay" {
      type = text
    }
    column "grp_rem" {
      type = "character varying(10)"
    }
    column "ismetal" {
      type = "character(1)"
    }
    column "item_name" {
      type = "character varying(100)"
    }
    column "price_terms" {
      type = "character(1)"
    }
    column "price_basis" {
      type = "character(1)"
    }
    column "invmetal_code" {
      type = "bigint"
    }
    column "net_weight" {
      type = "numeric(20,5)"
    }
    column "grs_weight" {
      type = "numeric(20,5)"
    }
    column "job_cost_basis" {
      type = "character(1)"
    }
    column "job_cost_amt" {
      type = "numeric(20,2)"
    }
    column "other_chg" {
      type = "numeric(20,2)"
    }
    column "part_qty" {
      type = "numeric(10,3)"
    }
    column "certificate_no" {
      type = "character varying(100)"
    }
    column "d_count" {
      type = "numeric"
    }
    column "d_size" {
      type = "character varying(100)"
    }
    column "d_weight" {
      type = "numeric(20,5)"
    }
    column "d_value" {
      type = "numeric(20,2)"
    }
    column "d_desc" {
      type = "character varying(500)"
    }
    column "c_count" {
      type = "numeric"
    }
    column "c_weight" {
      type = "numeric(20,5)"
    }
    column "c_value" {
      type = "numeric(20,2)"
    }
    column "c_desc" {
      type = "character varying(500)"
    }
    column "o_count" {
      type = "numeric"
    }
    column "o_weight" {
      type = "numeric(20,5)"
    }
    column "o_value" {
      type = "numeric(20,2)"
    }
    column "o_desc" {
      type = "character varying(500)"
    }
    column "routecode" {
      type = "bigint"
    }
    column "routeid" {
      type = "character varying(100)"
    }
    column "material_type" {
      type = "character(1)"
    }
    column "disp_material_type" {
      type = text
    }
    column "desc1" {
      type = "character varying(500)"
    }
    column "desc2" {
      type = "character varying(500)"
    }
    column "desc3" {
      type = "character varying(500)"
    }
    column "desc4" {
      type = "character varying(500)"
    }
    column "desc5" {
      type = "character varying(500)"
    }
    column "desc6" {
      type = "character varying(500)"
    }
    column "num1" {
      type = "numeric(20,3)"
    }
    column "num2" {
      type = "numeric(20,3)"
    }
    column "num3" {
      type = "numeric(20,3)"
    }
    column "img_convention" {
      type = "character varying(10)"
    }
    column "department_seq" {
      type = "bigint"
    }
    column "section_seq" {
      type = "bigint"
    }
    column "itemnum1" {
      type = "numeric(20,3)"
    }
    column "itemnum2" {
      type = "numeric(20,3)"
    }
    column "itemnum3" {
      type = "numeric(20,3)"
    }
    column "autoqtypopup" {
      type = "character(1)"
    }
    column "autoqtypopupdisplay" {
      type = text
    }
    column "allow_price_modification" {
      type = "character(1)"
    }
    column "allow_price_modificationdisp" {
      type = text
    }
    column "price_change_limit" {
      type = "numeric(5,2)"
    }
    column "departmentalias" {
      type = "character varying(10)"
    }
    column "sectionalias" {
      type = "character varying(10)"
    }
    column "divisionalias" {
      type = "character varying(10)"
    }
    column "posreturnbehaviour" {
      type = "character(1)"
    }
    column "posreturnbehaviourdisplay" {
      type = text
    }
    column "search_string" {
      type = "character varying(4000)"
    }
    column "udfstring01" {
      type = "character varying(500)"
    }
    column "udfstring02" {
      type = "character varying(500)"
    }
    column "udfstring03" {
      type = "character varying(500)"
    }
    column "udfstring04" {
      type = "character varying(500)"
    }
    column "udfstring05" {
      type = "character varying(500)"
    }
    column "udfstring06" {
      type = "character varying(500)"
    }
    column "udfstring07" {
      type = "character varying(500)"
    }
    column "udfstring08" {
      type = "character varying(500)"
    }
    column "udfstring09" {
      type = "character varying(500)"
    }
    column "udfstring10" {
      type = "character varying(500)"
    }
    column "udfnum01" {
      type = "numeric(20,3)"
    }
    column "udfnum02" {
      type = "numeric(20,3)"
    }
    column "udfnum03" {
      type = "numeric(20,3)"
    }
    column "udfnum04" {
      type = "numeric(20,3)"
    }
    column "udfnum05" {
      type = "numeric(20,3)"
    }
    column "udfdate01" {
      type = "timestamp(0) without time zone"
    }
    column "udfdate02" {
      type = "timestamp(0) without time zone"
    }
    column "udfdate03" {
      type = "timestamp(0) without time zone"
    }
    column "udfdate04" {
      type = "timestamp(0) without time zone"
    }
    column "udfdate05" {
      type = "timestamp(0) without time zone"
    }
    column "hsn_sac_code" {
      type = "character varying(20)"
    }
    column "govt_identifier" {
      type = "character varying(20)"
    }
    column "invhsnsacmain_code" {
      type = "bigint"
    }
    column "isprice_excludes_tax" {
      type = "bigint"
    }
    column "glcode" {
      type = "bigint"
    }
    column "slcode" {
      type = "bigint"
    }
    column "gst_itc_appl" {
      type = "character(2)"
    }
    column "gl_cc_appl" {
      type = "character(1)"
    }
    column "costsheetcode" {
      type = "bigint"
    }
    column "costsheetid" {
      type = "character varying(30)"
    }
    column "glname" {
      type = "character varying(100)"
    }
    column "slname" {
      type = "character varying(100)"
    }
    column "item_management_mode" {
      type = "character(1)"
    }
    column "item_management_mode_display" {
      type = text
    }
    column "validity_mode" {
      type = "character(1)"
    }
    column "validity_mode_display" {
      type = text
    }
    column "validity_period" {
      type = "bigint"
    }
    column "price_management" {
      type = "character(1)"
    }
    column "price_management_display" {
      type = text
    }
    column "manage_expiry" {
      type = "character(1)"
    }
    column "manage_expiry_display" {
      type = text
    }
    column "pos_batch_selection_mode" {
      type = "character(1)"
    }
    column "pos_batch_selctn_mode_display" {
      type = text
    }
    column "iscreatebatchdocumentwise" {
      type = bpchar
    }
    column "batchcreation_doc_code" {
      type = "bigint"
    }
  )
}

