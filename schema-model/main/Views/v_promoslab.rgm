view "main"."v_promoslab" {
  text = """-
SELECT ps.promo_code AS promomasterid,
    ps.simple_factor AS simplefactor,
    ps.slab_range_from AS slabrangefrom,
    ps.slab_range_to AS slabrangeto,
    ps.get_benefit_code AS getbenefitcode,
    pb.name AS getbenefitname,
    pv.name AS getvouchername,
    pv.short_desc AS getvouchershortdesc,
    pv.text_to_print AS getvouchertexttoprint,
    ps.get_factor AS getfactor,
    ps.get_method AS getmethod,
        CASE
            WHEN (ps.get_method = 'H'::bpchar) THEN 'Highest'::text
            WHEN (ps.get_method = 'L'::bpchar) THEN 'Lowest'::text
            ELSE NULL::text
        END AS getmethoddisplay,
    ps.get_pool_type AS getpooltype,
        CASE
            WHEN (ps.get_pool_type = 'N'::bpchar) THEN 'Not Applicable'::text
            WHEN (ps.get_pool_type = 'A'::bpchar) THEN 'By Amount'::text
            WHEN (ps.get_pool_type = 'P'::bpchar) THEN 'By Percentage'::text
            WHEN (ps.get_pool_type = 'F'::bpchar) THEN 'Fix Price'::text
            ELSE NULL::text
        END AS getpooltypedisplay,
    ps.get_assortment_code AS getassortmentid,
    pas.name AS getassortmentname,
        CASE
            WHEN (ps.get_auto_include = 'Y'::bpchar) THEN 1
            ELSE 0
        END AS getautoinclude,
    ps.discount_type AS discounttype,
    ps.discount_factor AS discountfactor,
        CASE
            WHEN (ps.discount_price_basis = 'M'::bpchar) THEN 'R'::text
            WHEN (ps.discount_price_basis = 'L'::bpchar) THEN 'M'::text
            WHEN (ps.discount_price_basis = 'A'::bpchar) THEN 'A'::text
            WHEN (ps.discount_price_basis = 'E'::bpchar) THEN 'E'::text
            WHEN ((ps.discount_price_basis IS NULL) AND (pm.category = 'P'::bpchar) AND (pm.type = 'I'::bpchar)) THEN 'B'::text
            WHEN ((ps.discount_price_basis IS NULL) AND (pm.category = 'P'::bpchar) AND (pm.type = 'M'::bpchar)) THEN 'I'::text
            WHEN ((ps.discount_price_basis IS NULL) AND (pm.category = 'V'::bpchar)) THEN 'N'::text
            ELSE NULL::text
        END AS discountpricebasis,
        CASE
            WHEN (ps.discount_price_basis = 'M'::bpchar) THEN 'Rate'::text
            WHEN (ps.discount_price_basis = 'L'::bpchar) THEN 'MRP'::text
            WHEN (ps.discount_price_basis = 'A'::bpchar) THEN 'All'::text
            WHEN (ps.discount_price_basis = 'E'::bpchar) THEN 'Each'::text
            WHEN ((ps.discount_price_basis IS NULL) AND (pm.category = 'P'::bpchar) AND (pm.type = 'I'::bpchar)) THEN 'Basic Value'::text
            WHEN ((ps.discount_price_basis IS NULL) AND (pm.category = 'P'::bpchar) AND (pm.type = 'M'::bpchar)) THEN 'Item Gross Amount'::text
            WHEN ((ps.discount_price_basis IS NULL) AND (pm.category = 'V'::bpchar)) THEN 'Net Amount'::text
            ELSE NULL::text
        END AS discountpricebasisdisplay
   FROM main.promo_master pm,
    main.promo_benefits pb,
    ((main.promo_slab ps
     LEFT JOIN main.promo_voucher pv ON ((ps.get_voucher_code = pv.code)))
     LEFT JOIN main.promo_assortment pas ON ((ps.get_assortment_code = pas.code)))
  WHERE ((ps.promo_code = pm.code) AND (ps.get_benefit_code = pb.code));
"""
  columns = (
    column "promomasterid" {
      type = "bigint"
    }
    column "simplefactor" {
      type = "bigint"
    }
    column "slabrangefrom" {
      type = "numeric(20,2)"
    }
    column "slabrangeto" {
      type = "numeric(20,2)"
    }
    column "getbenefitcode" {
      type = "bigint"
    }
    column "getbenefitname" {
      type = "character varying(50)"
    }
    column "getvouchername" {
      type = "character varying(100)"
    }
    column "getvouchershortdesc" {
      type = "character varying(50)"
    }
    column "getvouchertexttoprint" {
      type = "character varying(500)"
    }
    column "getfactor" {
      type = "bigint"
    }
    column "getmethod" {
      type = "character(1)"
    }
    column "getmethoddisplay" {
      type = text
    }
    column "getpooltype" {
      type = "character(1)"
    }
    column "getpooltypedisplay" {
      type = text
    }
    column "getassortmentid" {
      type = "bigint"
    }
    column "getassortmentname" {
      type = "character varying(150)"
    }
    column "getautoinclude" {
      type = "integer"
    }
    column "discounttype" {
      type = "character(1)"
    }
    column "discountfactor" {
      type = "numeric(20,3)"
    }
    column "discountpricebasis" {
      type = text
    }
    column "discountpricebasisdisplay" {
      type = text
    }
  )
}

