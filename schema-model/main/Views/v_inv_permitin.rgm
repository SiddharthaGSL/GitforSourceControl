view "main"."v_inv_permitin" {
  text = """-
SELECT 'CREATE OR REPLACE FORCE VIEW MAIN.V_INV_PERMITIN(PERMIT_ROWID, PERMITCODE, PERMITNO, PERMITDT, VALIDDT, ISSUEDT, ENTRYDT, PCODE, STATUS, CHECKPOST, EXT, REM, PERMITTYPE, TYPE, CURRENT_STATUS, ADMOU_CODE, LOCCODE, CMPCODE, ADMSITE_CODE, ADMSITE_CODE_OWNER) AS 
	(SELECT permit_rowid,
        permitcode,
        permitno,
        permitdt,
        validdt,
        issuedt,
        entrydt,
        pcode,
        status,
        checkpost,
        ext,
        REM,
        permittype,
        TYPE,
        current_status,
        admou_code,
        loccode,
        cmpcode,
        admsite_code,
        admsite_code_owner
   FROM (SELECT ROWID permit_rowid,
                permitcode,
                permitno,
                permitdt,
                validdt,
                issuedt,
                entrydt,
                pcode,
                status,
                checkpost,
                ext,
                REM,
                permittype,
                ''N'' TYPE,
                CASE
                   WHEN invpermit.validdt < TO_DATE (SYSDATE, ''DD/MM/RRRR'')
                   THEN
                      ''EXPIRED''
                   ELSE
                      ''NEW''
                END
                   current_status,
                admou_code,
                loccode,
                cmpcode,
                admsite_code,
                admsite_code_owner
           FROM invpermit
          WHERE     invpermit.status = ''N''
                AND invpermit.permittype = ''I''
                AND invpermit.ext = ''N''
                AND invpermit.issuedt IS NULL
                AND invpermit.entrydt IS NULL
                AND LOCCODE IS NULL -- REV : 001
         UNION
         SELECT ROWID permit_rowid,
                permitcode,
                permitno,
                permitdt,
                validdt,
                issuedt,
                entrydt,
                pcode,
                status,
                checkpost,
                ext,
                REM,
                permittype,
                ''U'' TYPE,
                ''USED'' current_status,
                admou_code,
                loccode,
                cmpcode,
                admsite_code,
                admsite_code_owner
           FROM invpermit
          WHERE invpermit.status = ''U'' AND invpermit.permittype = ''I'' AND LOCCODE IS NULL -- REV : 001
         UNION
         SELECT ROWID permit_rowid,
                permitcode,
                permitno,
                permitdt,
                validdt,
                issuedt,
                entrydt,
                pcode,
                status,
                checkpost,
                ext,
                REM,
                permittype,
                ''C'' TYPE,
                ''CANCELLED'' current_status,
                admou_code,
                loccode,
                cmpcode,
                admsite_code,
                admsite_code_owner
           FROM invpermit
          WHERE invpermit.ext = ''Y'' AND invpermit.permittype = ''I'' AND LOCCODE IS NULL -- REV : 001
         UNION
         SELECT ROWID permit_rowid,
                permitcode,
                permitno,
                permitdt,
                validdt,
                issuedt,
                entrydt,
                pcode,
                status,
                checkpost,
                ext,
                REM,
                permittype,
                ''E'' TYPE,
                ''EXPIRED'' current_status,
                admou_code,
                loccode,
                cmpcode,
                admsite_code,
                admsite_code_owner
           FROM invpermit
          WHERE     invpermit.validdt < TO_DATE (SYSDATE, ''DD/MM/RRRR'')
                AND invpermit.ext = ''N''
                AND invpermit.permittype = ''I'' AND LOCCODE IS NULL -- REV : 001
         UNION
         SELECT ROWID permit_rowid,
                permitcode,
                permitno,
                permitdt,
                validdt,
                issuedt,
                entrydt,
                pcode,
                status,
                checkpost,
                ext,
                REM,
                permittype,
                ''A'' TYPE,
                CASE
                   WHEN invpermit.status = ''U''
                   THEN
                      ''USED''
                   WHEN invpermit.validdt < TO_DATE (SYSDATE, ''DD/MM/RRRR'')
                   THEN
                      ''EXPIRED''
                   WHEN entrydt IS NOT NULL AND invpermit.ext = ''N''
                   THEN
                      ''CHECKPOST''
                   WHEN     invpermit.status <> ''U''
                        AND issuedt IS NOT NULL
                        AND entrydt IS NULL
                        AND invpermit.ext = ''N''
                   THEN
                      ''ISSUED''
                   WHEN invpermit.ext = ''Y''
                   THEN
                      ''CANCELLED''
                   ELSE
                      ''NEW''
                END
                   current_status,
                admou_code,
                loccode,
                cmpcode,
                admsite_code,
                admsite_code_owner
           FROM invpermit
          WHERE invpermit.permittype = ''I'' AND LOCCODE IS NULL -- REV : 001
         UNION
         SELECT ROWID permit_rowid,
                permitcode,
                permitno,
                permitdt,
                validdt,
                issuedt,
                entrydt,
                pcode,
                status,
                checkpost,
                ext,
                REM,
                permittype,
                ''I'' TYPE,
                CASE
                   WHEN invpermit.status = ''U'' AND issuedt IS NOT NULL
                   THEN
                      ''USED''
                   WHEN invpermit.validdt < TO_DATE (SYSDATE, ''DD/MM/RRRR'')
                   THEN
                      ''EXPIRED''
                   WHEN entrydt IS NOT NULL
                   THEN
                      ''CHECKPOST''
                   WHEN entrydt IS NULL AND issuedt IS NOT NULL
                   THEN
                      ''ISSUED''
                END
                   current_status,
                admou_code,
                loccode,
                cmpcode,
                admsite_code,
                admsite_code_owner
           FROM invpermit
          WHERE     invpermit.permittype = ''I''
                AND invpermit.ext = ''N''
                AND invpermit.issuedt IS NOT NULL
                AND LOCCODE IS NULL -- REV : 001
         --AND INVPERMIT.ENTRYDT IS NULL
         UNION
         SELECT ROWID permit_rowid,
                permitcode,
                permitno,
                permitdt,
                validdt,
                issuedt,
                entrydt,
                pcode,
                status,
                checkpost,
                ext,
                REM,
                permittype,
                ''CP'' TYPE,
                CASE
                   WHEN invpermit.status = ''U''
                   THEN
                      ''USED''
                   WHEN entrydt IS NOT NULL
                   THEN
                      ''CHECKPOST''
                   WHEN invpermit.validdt < TO_DATE (SYSDATE, ''DD/MM/RRRR'')
                   THEN
                      ''EXPIRED''
                END
                   current_status,
                admou_code,
                loccode,
                cmpcode,
                admsite_code,
                admsite_code_owner
           FROM invpermit
          WHERE     invpermit.permittype = ''I''
          AND LOCCODE IS NULL -- REV : 001
                AND invpermit.ext = ''N''
                AND invpermit.entrydt IS NOT NULL));'::character varying AS text,
    '5598 - Severity CRITICAL - PostgreSQL doesn''t support ROWID. Turn on the Create ROWID option and make sure that all related objects are converted.
5598 - Severity CRITICAL - PostgreSQL doesn''t support ROWID. Turn on the Create ROWID option and make sure that all related objects are converted.
5598 - Severity CRITICAL - PostgreSQL doesn''t support ROWID. Turn on the Create ROWID option and make sure that all related objects are converted.
5598 - Severity CRITICAL - PostgreSQL doesn''t support ROWID. Turn on the Create ROWID option and make sure that all related objects are converted.
5598 - Severity CRITICAL - PostgreSQL doesn''t support ROWID. Turn on the Create ROWID option and make sure that all related objects are converted.
5598 - Severity CRITICAL - PostgreSQL doesn''t support ROWID. Turn on the Create ROWID option and make sure that all related objects are converted.
5598 - Severity CRITICAL - PostgreSQL doesn''t support ROWID. Turn on the Create ROWID option and make sure that all related objects are converted.
5578 - Severity CRITICAL - AWS SCT can''t convert the SELECT statement. Revise your SELECT statement and try again.
'::character varying AS error_msg;
"""
  columns = (
    column "text" {
      type = "character varying"
    }
    column "error_msg" {
      type = "character varying"
    }
  )
}

