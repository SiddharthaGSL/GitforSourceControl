view "main"."v_margin_loss_article" {
  text = """-
SELECT alias176.grcno,
    alias176.grccode,
    alias176.grcdt,
    alias176.pcode,
    alias176.admou_code,
    alias176.icode,
    alias176.acqty,
    alias176.acrate,
    alias176.discount,
    alias176.taxamt,
    alias176.wsp,
    alias176.mrp,
    alias176.listed_mrp,
    alias176.invarticle_code,
    alias176.invmmrule_code,
    alias176.name,
    alias176.eff_dtfr,
    alias176.eff_dtto,
    alias176.rule_type,
    alias176.price_def,
    alias176.cost_def,
    alias176.basis,
    alias176.calc_mode,
    alias176.value,
    alias176.state,
    alias176.formula,
        CASE
            WHEN (sign(alias176.prop_rate) = ('-1'::integer)::numeric) THEN (0)::numeric
            ELSE alias176.prop_rate
        END AS prop_rate
   FROM ( SELECT alias172.grcno,
            alias172.grccode,
            alias172.grcdt,
            alias172.pcode,
            alias172.admou_code,
            alias172.icode,
            alias172.acqty,
            alias172.acrate,
            alias172.discount,
            alias172.taxamt,
            alias172.wsp,
            alias172.mrp,
            alias172.listed_mrp,
            alias172.invarticle_code,
            alias172.invmmrule_code,
            alias172.name,
            alias172.eff_dtfr,
            alias172.eff_dtto,
            alias172.rule_type,
            alias172.price_def,
            alias172.cost_def,
            alias172.basis,
            alias172.calc_mode,
            alias172.value,
            alias172.state,
            alias172.formula,
            alias172.prop_rate,
            row_number() OVER (PARTITION BY alias172.grccode, alias172.icode ORDER BY alias172.prop_rate) AS topn
           FROM ( SELECT a.grcno,
                    a.grccode,
                    a.grcdt,
                    a.pcode,
                    a.admou_code,
                    b.icode,
                    b.acqty,
                    b.acrate,
                    b.discount,
                    b.taxamt,
                    c.wsp,
                    c.mrp,
                    c.listed_mrp,
                    c.invarticle_code,
                    d.invmmrule_code,
                    e.name,
                    f.eff_dtfr,
                    COALESCE((f.eff_dtto)::timestamp with time zone, date_trunc('day'::text, statement_timestamp())) AS eff_dtto,
                    g.rule_type,
                    g.price_def,
                    g.cost_def,
                    g.basis,
                    g.calc_mode,
                    g.value,
                    g.state,
                        CASE
                            WHEN (g.rule_type = 'CM'::bpchar) THEN
                            CASE
                                WHEN ((g.basis = 'U'::bpchar) AND (g.calc_mode = 'P'::bpchar) AND (g.cost_def = 'B'::bpchar) AND (g.price_def = 'M'::bpchar)) THEN (('BASIC COST + '::text || (COALESCE(g.value, (0)::numeric))::text) || '% OF BASIC COST > MRP'::text)
                                WHEN ((g.basis = 'U'::bpchar) AND (g.calc_mode = 'P'::bpchar) AND (g.cost_def = 'B'::bpchar) AND (g.price_def = 'L'::bpchar)) THEN (('BASIC COST + '::text || (COALESCE(g.value, (0)::numeric))::text) || '% OF BASIC COST > LISTED MRP'::text)
                                WHEN ((g.basis = 'U'::bpchar) AND (g.calc_mode = 'P'::bpchar) AND (g.cost_def = 'E'::bpchar) AND (g.price_def = 'M'::bpchar)) THEN (('EFFECTIVE COST + '::text || (COALESCE(g.value, (0)::numeric))::text) || '% OF EFFECTIVE COST > MRP'::text)
                                WHEN ((g.basis = 'U'::bpchar) AND (g.calc_mode = 'P'::bpchar) AND (g.cost_def = 'E'::bpchar) AND (g.price_def = 'L'::bpchar)) THEN (('EFFECTIVE COST + '::text || (COALESCE(g.value, (0)::numeric))::text) || '% OF EFFECTIVE COST > LISTED MRP'::text)
                                WHEN ((g.basis = 'D'::bpchar) AND (g.calc_mode = 'P'::bpchar) AND (g.cost_def = 'B'::bpchar) AND (g.price_def = 'M'::bpchar)) THEN (('MRP - '::text || (COALESCE(g.value, (0)::numeric))::text) || '% OF MRP < BASIC COST'::text)
                                WHEN ((g.basis = 'D'::bpchar) AND (g.calc_mode = 'P'::bpchar) AND (g.cost_def = 'B'::bpchar) AND (g.price_def = 'L'::bpchar)) THEN (('LISTED MRP - '::text || (COALESCE(g.value, (0)::numeric))::text) || '% OF LISTED MRP < BASIC COST'::text)
                                WHEN ((g.basis = 'D'::bpchar) AND (g.calc_mode = 'P'::bpchar) AND (g.cost_def = 'E'::bpchar) AND (g.price_def = 'M'::bpchar)) THEN (('MRP - '::text || (COALESCE(g.value, (0)::numeric))::text) || '% OF MRP < EFFECTIVE COST'::text)
                                WHEN ((g.basis = 'D'::bpchar) AND (g.calc_mode = 'P'::bpchar) AND (g.cost_def = 'E'::bpchar) AND (g.price_def = 'L'::bpchar)) THEN (('LISTED MRP - '::text || (COALESCE(g.value, (0)::numeric))::text) || '% OF LISTED MRP < EFFECTIVE COST'::text)
                                WHEN ((g.basis = 'U'::bpchar) AND (g.calc_mode = 'A'::bpchar) AND (g.cost_def = 'B'::bpchar) AND (g.price_def = 'M'::bpchar)) THEN (('BASIC COST + '::text || (COALESCE(g.value, (0)::numeric))::text) || ' > MRP'::text)
                                WHEN ((g.basis = 'U'::bpchar) AND (g.calc_mode = 'A'::bpchar) AND (g.cost_def = 'B'::bpchar) AND (g.price_def = 'L'::bpchar)) THEN (('BASIC COST + '::text || (COALESCE(g.value, (0)::numeric))::text) || ' > LISTED MRP'::text)
                                WHEN ((g.basis = 'U'::bpchar) AND (g.calc_mode = 'A'::bpchar) AND (g.cost_def = 'E'::bpchar) AND (g.price_def = 'M'::bpchar)) THEN (('EFFECTIVE COST + '::text || (COALESCE(g.value, (0)::numeric))::text) || ' > MRP'::text)
                                WHEN ((g.basis = 'U'::bpchar) AND (g.calc_mode = 'A'::bpchar) AND (g.cost_def = 'E'::bpchar) AND (g.price_def = 'L'::bpchar)) THEN (('EFFECTIVE COST + '::text || (COALESCE(g.value, (0)::numeric))::text) || ' <= LISTED MRP'::text)
                                WHEN ((g.basis = 'D'::bpchar) AND (g.calc_mode = 'A'::bpchar) AND (g.cost_def = 'B'::bpchar) AND (g.price_def = 'M'::bpchar)) THEN (('MRP - '::text || (COALESCE(g.value, (0)::numeric))::text) || ' < BASIC COST'::text)
                                WHEN ((g.basis = 'D'::bpchar) AND (g.calc_mode = 'A'::bpchar) AND (g.cost_def = 'B'::bpchar) AND (g.price_def = 'L'::bpchar)) THEN (('LISTED MRP - '::text || (COALESCE(g.value, (0)::numeric))::text) || ' < BASIC COST'::text)
                                WHEN ((g.basis = 'D'::bpchar) AND (g.calc_mode = 'A'::bpchar) AND (g.cost_def = 'E'::bpchar) AND (g.price_def = 'M'::bpchar)) THEN (('MRP - '::text || (COALESCE(g.value, (0)::numeric))::text) || ' < EFFECTIVE COST'::text)
                                WHEN ((g.basis = 'D'::bpchar) AND (g.calc_mode = 'A'::bpchar) AND (g.cost_def = 'E'::bpchar) AND (g.price_def = 'L'::bpchar)) THEN (('LISTED MRP - '::text || (COALESCE(g.value, (0)::numeric))::text) || ' < EFFCETIVE COST'::text)
                                ELSE NULL::text
                            END
                            WHEN (g.rule_type = 'CW'::bpchar) THEN
                            CASE
                                WHEN ((g.basis = 'U'::bpchar) AND (g.calc_mode = 'P'::bpchar) AND (g.cost_def = 'B'::bpchar) AND (g.price_def = 'W'::bpchar)) THEN (('BASIC COST + '::text || (COALESCE(g.value, (0)::numeric))::text) || '% OF BASIC COST > WSP'::text)
                                WHEN ((g.basis = 'U'::bpchar) AND (g.calc_mode = 'P'::bpchar) AND (g.cost_def = 'E'::bpchar) AND (g.price_def = 'W'::bpchar)) THEN (('EFFECTIVE COST + '::text || (COALESCE(g.value, (0)::numeric))::text) || '% OF EFFECTIVE COST > WSP'::text)
                                WHEN ((g.basis = 'D'::bpchar) AND (g.calc_mode = 'P'::bpchar) AND (g.cost_def = 'B'::bpchar) AND (g.price_def = 'W'::bpchar)) THEN (('WSP - '::text || (COALESCE(g.value, (0)::numeric))::text) || '% OF WSP < BASIC COST'::text)
                                WHEN ((g.basis = 'D'::bpchar) AND (g.calc_mode = 'P'::bpchar) AND (g.cost_def = 'E'::bpchar) AND (g.price_def = 'W'::bpchar)) THEN (('WSP - '::text || (COALESCE(g.value, (0)::numeric))::text) || '% OF WSP < EFFECTIVE COST'::text)
                                WHEN ((g.basis = 'U'::bpchar) AND (g.calc_mode = 'A'::bpchar) AND (g.cost_def = 'B'::bpchar) AND (g.price_def = 'W'::bpchar)) THEN (('BASIC COST + '::text || (COALESCE(g.value, (0)::numeric))::text) || ' > WSP'::text)
                                WHEN ((g.basis = 'U'::bpchar) AND (g.calc_mode = 'A'::bpchar) AND (g.cost_def = 'E'::bpchar) AND (g.price_def = 'W'::bpchar)) THEN (('EFFECTIVE COST + '::text || (COALESCE(g.value, (0)::numeric))::text) || ' > WSP'::text)
                                WHEN ((g.basis = 'D'::bpchar) AND (g.calc_mode = 'A'::bpchar) AND (g.cost_def = 'B'::bpchar) AND (g.price_def = 'W'::bpchar)) THEN (('WSP - '::text || (COALESCE(g.value, (0)::numeric))::text) || ' < BASIC COST'::text)
                                WHEN ((g.basis = 'D'::bpchar) AND (g.calc_mode = 'A'::bpchar) AND (g.cost_def = 'E'::bpchar) AND (g.price_def = 'W'::bpchar)) THEN (('WSP - '::text || (COALESCE(g.value, (0)::numeric))::text) || ' < EFFCETIVE COST'::text)
                                ELSE NULL::text
                            END
                            ELSE NULL::text
                        END AS formula,
                        CASE
                            WHEN (g.rule_type = 'CM'::bpchar) THEN
                            CASE
                                WHEN ((g.basis = 'U'::bpchar) AND (g.calc_mode = 'P'::bpchar) AND (g.cost_def = 'B'::bpchar) AND (g.price_def = 'M'::bpchar)) THEN trunc(((COALESCE(c.mrp, (0)::numeric) * (100)::numeric) / (COALESCE(g.value, (0)::numeric) + (100)::numeric)), 2)
                                WHEN ((g.basis = 'U'::bpchar) AND (g.calc_mode = 'P'::bpchar) AND (g.cost_def = 'B'::bpchar) AND (g.price_def = 'L'::bpchar)) THEN trunc(((COALESCE(c.listed_mrp, (0)::numeric) * (100)::numeric) / (COALESCE(g.value, (0)::numeric) + (100)::numeric)), 2)
                                WHEN ((g.basis = 'U'::bpchar) AND (g.calc_mode = 'P'::bpchar) AND (g.cost_def = 'E'::bpchar) AND (g.price_def = 'M'::bpchar)) THEN trunc(((((COALESCE(c.mrp, (0)::numeric) * (100)::numeric) / (g.value + (100)::numeric)) + COALESCE(b.discount, (0)::numeric)) - COALESCE(b.taxamt, (0)::numeric)), 2)
                                WHEN ((g.basis = 'U'::bpchar) AND (g.calc_mode = 'P'::bpchar) AND (g.cost_def = 'E'::bpchar) AND (g.price_def = 'L'::bpchar)) THEN trunc(((((COALESCE(c.listed_mrp, (0)::numeric) * (100)::numeric) / (g.value + (100)::numeric)) + COALESCE(b.discount, (0)::numeric)) - COALESCE(b.taxamt, (0)::numeric)), 2)
                                WHEN ((g.basis = 'D'::bpchar) AND (g.calc_mode = 'P'::bpchar) AND (g.cost_def = 'B'::bpchar) AND (g.price_def = 'M'::bpchar)) THEN trunc((COALESCE(c.mrp, (0)::numeric) - ((COALESCE(c.mrp, (0)::numeric) * COALESCE(g.value, (0)::numeric)) / (100)::numeric)), 2)
                                WHEN ((g.basis = 'D'::bpchar) AND (g.calc_mode = 'P'::bpchar) AND (g.cost_def = 'B'::bpchar) AND (g.price_def = 'L'::bpchar)) THEN trunc((COALESCE(c.listed_mrp, (0)::numeric) - ((COALESCE(c.listed_mrp, (0)::numeric) * COALESCE(g.value, (0)::numeric)) / (100)::numeric)), 2)
                                WHEN ((g.basis = 'D'::bpchar) AND (g.calc_mode = 'P'::bpchar) AND (g.cost_def = 'E'::bpchar) AND (g.price_def = 'M'::bpchar)) THEN trunc((((COALESCE(c.mrp, (0)::numeric) - ((COALESCE(c.mrp, (0)::numeric) * COALESCE(g.value, (0)::numeric)) / (100)::numeric)) + COALESCE(b.discount, (0)::numeric)) - COALESCE(b.taxamt, (0)::numeric)), 2)
                                WHEN ((g.basis = 'D'::bpchar) AND (g.calc_mode = 'P'::bpchar) AND (g.cost_def = 'E'::bpchar) AND (g.price_def = 'L'::bpchar)) THEN trunc((((COALESCE(c.listed_mrp, (0)::numeric) - ((COALESCE(c.listed_mrp, (0)::numeric) * COALESCE(g.value, (0)::numeric)) / (100)::numeric)) + COALESCE(b.discount, (0)::numeric)) - COALESCE(b.taxamt, (0)::numeric)), 2)
                                WHEN ((g.basis = 'U'::bpchar) AND (g.calc_mode = 'A'::bpchar) AND (g.cost_def = 'B'::bpchar) AND (g.price_def = 'M'::bpchar)) THEN trunc((COALESCE(c.mrp, (0)::numeric) - COALESCE(g.value, (0)::numeric)), 2)
                                WHEN ((g.basis = 'U'::bpchar) AND (g.calc_mode = 'A'::bpchar) AND (g.cost_def = 'B'::bpchar) AND (g.price_def = 'L'::bpchar)) THEN trunc((COALESCE(c.listed_mrp, (0)::numeric) - COALESCE(g.value, (0)::numeric)), 2)
                                WHEN ((g.basis = 'U'::bpchar) AND (g.calc_mode = 'A'::bpchar) AND (g.cost_def = 'E'::bpchar) AND (g.price_def = 'M'::bpchar)) THEN trunc((((COALESCE(c.mrp, (0)::numeric) - COALESCE(g.value, (0)::numeric)) + COALESCE(b.discount, (0)::numeric)) - COALESCE(b.taxamt, (0)::numeric)), 2)
                                WHEN ((g.basis = 'U'::bpchar) AND (g.calc_mode = 'A'::bpchar) AND (g.cost_def = 'E'::bpchar) AND (g.price_def = 'L'::bpchar)) THEN trunc((((COALESCE(c.listed_mrp, (0)::numeric) - COALESCE(g.value, (0)::numeric)) + COALESCE(b.discount, (0)::numeric)) - COALESCE(b.taxamt, (0)::numeric)), 2)
                                WHEN ((g.basis = 'D'::bpchar) AND (g.calc_mode = 'A'::bpchar) AND (g.cost_def = 'B'::bpchar) AND (g.price_def = 'M'::bpchar)) THEN trunc((COALESCE(c.mrp, (0)::numeric) - COALESCE(g.value, (0)::numeric)), 2)
                                WHEN ((g.basis = 'D'::bpchar) AND (g.calc_mode = 'A'::bpchar) AND (g.cost_def = 'B'::bpchar) AND (g.price_def = 'L'::bpchar)) THEN trunc((COALESCE(c.listed_mrp, (0)::numeric) - COALESCE(g.value, (0)::numeric)), 2)
                                WHEN ((g.basis = 'D'::bpchar) AND (g.calc_mode = 'A'::bpchar) AND (g.cost_def = 'E'::bpchar) AND (g.price_def = 'M'::bpchar)) THEN trunc((((COALESCE(c.mrp, (0)::numeric) - COALESCE(g.value, (0)::numeric)) + COALESCE(b.discount, (0)::numeric)) - COALESCE(b.taxamt, (0)::numeric)), 2)
                                WHEN ((g.basis = 'D'::bpchar) AND (g.calc_mode = 'A'::bpchar) AND (g.cost_def = 'E'::bpchar) AND (g.price_def = 'L'::bpchar)) THEN trunc((((COALESCE(c.listed_mrp, (0)::numeric) - COALESCE(g.value, (0)::numeric)) + COALESCE(b.discount, (0)::numeric)) - COALESCE(b.taxamt, (0)::numeric)), 2)
                                ELSE NULL::numeric
                            END
                            WHEN (g.rule_type = 'CW'::bpchar) THEN
                            CASE
                                WHEN ((g.basis = 'U'::bpchar) AND (g.calc_mode = 'P'::bpchar) AND (g.cost_def = 'B'::bpchar) AND (g.price_def = 'W'::bpchar)) THEN trunc(((COALESCE(c.wsp, (0)::numeric) * (100)::numeric) / (COALESCE(g.value, (0)::numeric) + (100)::numeric)), 2)
                                WHEN ((g.basis = 'U'::bpchar) AND (g.calc_mode = 'P'::bpchar) AND (g.cost_def = 'E'::bpchar) AND (g.price_def = 'W'::bpchar)) THEN trunc(((((COALESCE(c.wsp, (0)::numeric) * (100)::numeric) / (g.value + (100)::numeric)) + COALESCE(b.discount, (0)::numeric)) - COALESCE(b.taxamt, (0)::numeric)), 2)
                                WHEN ((g.basis = 'D'::bpchar) AND (g.calc_mode = 'P'::bpchar) AND (g.cost_def = 'B'::bpchar) AND (g.price_def = 'W'::bpchar)) THEN trunc((COALESCE(c.wsp, (0)::numeric) - ((COALESCE(c.wsp, (0)::numeric) * COALESCE(g.value, (0)::numeric)) / (100)::numeric)), 2)
                                WHEN ((g.basis = 'D'::bpchar) AND (g.calc_mode = 'P'::bpchar) AND (g.cost_def = 'E'::bpchar) AND (g.price_def = 'W'::bpchar)) THEN trunc((((COALESCE(c.wsp, (0)::numeric) - ((COALESCE(c.wsp, (0)::numeric) * COALESCE(g.value, (0)::numeric)) / (100)::numeric)) + COALESCE(b.discount, (0)::numeric)) - COALESCE(b.taxamt, (0)::numeric)), 2)
                                WHEN ((g.basis = 'U'::bpchar) AND (g.calc_mode = 'A'::bpchar) AND (g.cost_def = 'B'::bpchar) AND (g.price_def = 'W'::bpchar)) THEN trunc((COALESCE(c.wsp, (0)::numeric) - COALESCE(g.value, (0)::numeric)), 2)
                                WHEN ((g.basis = 'U'::bpchar) AND (g.calc_mode = 'A'::bpchar) AND (g.cost_def = 'E'::bpchar) AND (g.price_def = 'W'::bpchar)) THEN trunc((((COALESCE(c.wsp, (0)::numeric) - COALESCE(g.value, (0)::numeric)) + COALESCE(b.discount, (0)::numeric)) - COALESCE(b.taxamt, (0)::numeric)), 2)
                                WHEN ((g.basis = 'D'::bpchar) AND (g.calc_mode = 'A'::bpchar) AND (g.cost_def = 'B'::bpchar) AND (g.price_def = 'W'::bpchar)) THEN trunc((COALESCE(c.wsp, (0)::numeric) - COALESCE(g.value, (0)::numeric)), 2)
                                WHEN ((g.basis = 'D'::bpchar) AND (g.calc_mode = 'A'::bpchar) AND (g.cost_def = 'E'::bpchar) AND (g.price_def = 'W'::bpchar)) THEN trunc((((COALESCE(c.wsp, (0)::numeric) - COALESCE(g.value, (0)::numeric)) + COALESCE(b.discount, (0)::numeric)) - COALESCE(b.taxamt, (0)::numeric)), 2)
                                ELSE NULL::numeric
                            END
                            ELSE NULL::numeric
                        END AS prop_rate
                   FROM main.invgrcmain a,
                    main.invgrcdet b,
                    main.invitem c,
                    main.invarticle d,
                    main.invmmrule e,
                    main.invmmrule_date f,
                    main.invmmrule_det g
                  WHERE ((a.grccode = b.grccode) AND ((b.icode)::text = (c.icode)::text) AND (c.invarticle_code = d.code) AND (d.invmmrule_code = e.code) AND (COALESCE(e.ext, 'N'::bpchar) = 'N'::bpchar) AND (e.code = f.invmmrule_code) AND (f.code = g.invmmrule_date_code) AND (a.grcdt >= f.eff_dtfr) AND (a.grcdt <= COALESCE((f.eff_dtto)::timestamp with time zone, statement_timestamp())) AND (g.state = 'A'::bpchar))) alias172
          WHERE ((COALESCE(alias172.acrate, (0)::numeric) > COALESCE(alias172.prop_rate, (0)::numeric)) AND (COALESCE(alias172.acrate, (0)::numeric) > (0)::numeric))) alias176
  WHERE (alias176.topn = 1);
"""
  columns = (
    column "grcno" {
      type = "bigint"
    }
    column "grccode" {
      type = "bigint"
    }
    column "grcdt" {
      type = "timestamp(0) without time zone"
    }
    column "pcode" {
      type = "bigint"
    }
    column "admou_code" {
      type = "bigint"
    }
    column "icode" {
      type = "character varying(9)"
    }
    column "acqty" {
      type = "numeric(20,3)"
    }
    column "acrate" {
      type = "numeric(20,3)"
    }
    column "discount" {
      type = "numeric(20,2)"
    }
    column "taxamt" {
      type = "numeric(20,2)"
    }
    column "wsp" {
      type = "numeric(20,3)"
    }
    column "mrp" {
      type = "numeric(20,3)"
    }
    column "listed_mrp" {
      type = "numeric(20,3)"
    }
    column "invarticle_code" {
      type = "bigint"
    }
    column "invmmrule_code" {
      type = "bigint"
    }
    column "name" {
      type = "character varying(100)"
    }
    column "eff_dtfr" {
      type = "timestamp(0) without time zone"
    }
    column "eff_dtto" {
      type = "timestamp with time zone"
    }
    column "rule_type" {
      type = "character(2)"
    }
    column "price_def" {
      type = "character(1)"
    }
    column "cost_def" {
      type = "character(1)"
    }
    column "basis" {
      type = "character(1)"
    }
    column "calc_mode" {
      type = "character(1)"
    }
    column "value" {
      type = "numeric(20,3)"
    }
    column "state" {
      type = "character(1)"
    }
    column "formula" {
      type = text
    }
    column "prop_rate" {
      type = "numeric"
    }
  )
}

