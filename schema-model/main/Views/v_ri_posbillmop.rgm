view "main"."v_ri_posbillmop" {
  text = """-
SELECT ((replace((pm.code)::text, COALESCE(concat_ws(''::text, s.psite_initial, '-'), ''::text), ''::text))::character varying)::numeric AS id,
    ((replace((pm.psite_posbill_code)::text, COALESCE(concat_ws(''::text, s.psite_initial, '-'), ''::text), ''::text))::character varying)::numeric AS posbillid,
    ((replace((pm.psite_possession_code)::text, COALESCE(concat_ws(''::text, s.psite_initial, '-'), ''::text), ''::text))::character varying)::numeric AS possessionid,
    pm.mopdesc,
    pm.mopstlmdesc,
    pm.mopshortcode,
    pm.moptype,
    ((pm.admcurrency_code)::double precision)::character varying AS currencyid,
    pm.displayorder,
    pm.basetender,
    pm.basebalance,
    pm.baseamt,
    pm.forexrate,
    pm.forextender,
    pm.forexamt,
    pm.adjbaseamt,
    pm.ccno,
    pm.ccholdername,
    pm.ccvalidupto,
    pm.cctype,
    NULLIF((NULLIF(((replace((pm.ref_psite_posbill_code)::text, COALESCE(concat_ws(''::text, s.psite_initial, '-'), ''::text), ''::text))::character varying)::text, ''::text))::numeric, (0)::numeric) AS refposbillid,
    NULLIF((NULLIF(((replace((pm.ref_psite_posbillmop_code)::text, COALESCE(concat_ws(''::text, s.psite_initial, '-'), ''::text), ''::text))::character varying)::text, ''::text))::numeric, (0)::numeric) AS refposbillmopid,
    pm.forexbalance,
    ((pm.psite_mop_code)::double precision)::character varying AS mopid,
    pm.cccommpercent,
    pm.cccommamt,
    NULLIF((NULLIF(((replace((pm.psite_posbillcn_code)::text, COALESCE(concat_ws(''::text, s.psite_initial, '-'), ''::text), ''::text))::character varying)::text, ''::text))::numeric, (0)::numeric) AS posbillcnid,
    pm.billdate,
    NULLIF((NULLIF(((replace((pm.psite_posbilldn_code)::text, COALESCE(concat_ws(''::text, s.psite_initial, '-'), ''::text), ''::text))::character varying)::text, ''::text))::numeric, (0)::numeric) AS posbilldnid,
    pm.paymentsource,
    ((replace((pm.lpredemptiontoken_code)::text, COALESCE(concat_ws(''::text, s.psite_initial, '-'), ''::text), ''::text))::character varying)::numeric AS lpredemptiontokenid,
    pm.psite_ptchead_code AS ptcheadid,
    pm.restrictbenefit,
    pm.globalposbillcncode AS globalposbillcnid,
    pm.tpedc,
    pm.tpedcresponse,
    pm.tpedcbankname,
    pm.tpedccardtype,
    pm.tpbillrefnumber,
    pm.isdenoapplicable,
    pm.wlt_otpcode AS wltotpcode,
    pm.wlt_refnumber AS walletrefnumber,
    pm.wlt_response AS wltresponse,
    pm.wlt_mobile AS wltmobile,
    pm.transactionreftracking,
    pm.admsite_code
   FROM (main.psite_posbillmop pm
     RIGHT JOIN main.admsite s ON ((pm.admsite_code = s.code)))
  WHERE (pm.moptype <> ALL (ARRAY['CNI'::bpchar, 'CNR'::bpchar]))
UNION ALL
 SELECT ((replace((pm.code)::text, COALESCE(concat_ws(''::text, s.psite_initial, '-'), ''::text), ''::text))::character varying)::numeric AS id,
    ((replace((pm.psite_posbill_code)::text, COALESCE(concat_ws(''::text, s.psite_initial, '-'), ''::text), ''::text))::character varying)::numeric AS posbillid,
    ((replace((pm.psite_possession_code)::text, COALESCE(concat_ws(''::text, s.psite_initial, '-'), ''::text), ''::text))::character varying)::numeric AS possessionid,
    pm.mopdesc,
    pm.mopstlmdesc,
    pm.mopshortcode,
    pm.moptype,
    ((pm.admcurrency_code)::double precision)::character varying AS currencyid,
    pm.displayorder,
    pm.basetender,
    pm.basebalance,
    pm.baseamt,
    pm.forexrate,
    pm.forextender,
    pm.forexamt,
    pm.adjbaseamt,
    pm.ccno,
    pm.ccholdername,
    pm.ccvalidupto,
    pm.cctype,
    NULLIF((NULLIF(((replace((pm.ref_psite_posbill_code)::text, COALESCE(concat_ws(''::text, s.psite_initial, '-'), ''::text), ''::text))::character varying)::text, ''::text))::numeric, (0)::numeric) AS refposbillid,
    NULLIF((NULLIF(((replace((pm.ref_psite_posbillmop_code)::text, COALESCE(concat_ws(''::text, s.psite_initial, '-'), ''::text), ''::text))::character varying)::text, ''::text))::numeric, (0)::numeric) AS refposbillmopid,
    pm.forexbalance,
    ((pm.psite_mop_code)::double precision)::character varying AS mopid,
    pm.cccommpercent,
    pm.cccommamt,
    ((replace((pm.psite_posbillcn_code)::text, COALESCE(concat_ws(''::text, s.psite_initial, '-'), ''::text), ''::text))::character varying)::numeric AS posbillcnid,
    pm.billdate,
    NULLIF((NULLIF(((replace((pm.psite_posbilldn_code)::text, COALESCE(concat_ws(''::text, s.psite_initial, '-'), ''::text), ''::text))::character varying)::text, ''::text))::numeric, (0)::numeric) AS posbilldnid,
    pm.paymentsource,
    ((replace((pm.lpredemptiontoken_code)::text, COALESCE(concat_ws(''::text, s.psite_initial, '-'), ''::text), ''::text))::character varying)::numeric AS lpredemptiontokenid,
    pm.psite_ptchead_code AS ptcheadid,
    pm.restrictbenefit,
    pm.globalposbillcncode AS globalposbillcnid,
    pm.tpedc,
    pm.tpedcresponse,
    pm.tpedcbankname,
    pm.tpedccardtype,
    pm.tpbillrefnumber,
    pm.isdenoapplicable,
    pm.wlt_otpcode AS wltotpcode,
    pm.wlt_refnumber AS walletrefnumber,
    pm.wlt_response AS wltresponse,
    pm.wlt_mobile AS wltmobile,
    pm.transactionreftracking,
    pm.admsite_code
   FROM (main.psite_posbillmop pm
     RIGHT JOIN main.admsite s ON ((pm.admsite_code = s.code)))
  WHERE ((pm.moptype = ANY (ARRAY['CNI'::bpchar, 'CNR'::bpchar])) AND ((pm.psite_posbillcn_code)::text ~~ concat_ws(''::text, s.psite_initial, '%')))
UNION ALL
 SELECT ((replace((pm.code)::text, COALESCE(concat_ws(''::text, a1.psite_initial, '-'), ''::text), ''::text))::character varying)::numeric AS id,
    ((replace((pm.psite_posbill_code)::text, COALESCE(concat_ws(''::text, a1.psite_initial, '-'), ''::text), ''::text))::character varying)::numeric AS posbillid,
    ((replace((pm.psite_possession_code)::text, COALESCE(concat_ws(''::text, a1.psite_initial, '-'), ''::text), ''::text))::character varying)::numeric AS possessionid,
    pm.mopdesc,
    pm.mopstlmdesc,
    pm.mopshortcode,
    pm.moptype,
    ((pm.admcurrency_code)::double precision)::character varying AS currencyid,
    pm.displayorder,
    pm.basetender,
    pm.basebalance,
    pm.baseamt,
    pm.forexrate,
    pm.forextender,
    pm.forexamt,
    pm.adjbaseamt,
    pm.ccno,
    pm.ccholdername,
    pm.ccvalidupto,
    pm.cctype,
    ((replace((pm.ref_psite_posbill_code)::text, COALESCE(concat_ws(''::text, a.psite_initial, '-'), ''::text), ''::text))::character varying)::numeric AS refposbillid,
    ((replace((pm.ref_psite_posbillmop_code)::text, COALESCE(concat_ws(''::text, a.psite_initial, '-'), ''::text), ''::text))::character varying)::numeric AS refposbillmopid,
    pm.forexbalance,
    ((pm.psite_mop_code)::double precision)::character varying AS mopid,
    pm.cccommpercent,
    pm.cccommamt,
    ((replace((pm.psite_posbillcn_code)::text, COALESCE(concat_ws(''::text, "substring"((pm.globalposbillcncode)::text, ((1)::numeric)::text, (((main.instr((pm.globalposbillcncode)::text, '-'::text))::numeric - (1)::numeric))::text), '-'), ''::text), ''::text))::character varying)::numeric AS posbillcnid,
    pm.billdate,
    ((replace((pm.psite_posbilldn_code)::text, COALESCE(concat_ws(''::text, a.psite_initial, '-'), ''::text), ''::text))::character varying)::bigint AS posbilldnid,
    pm.paymentsource,
    ((replace((pm.lpredemptiontoken_code)::text, COALESCE(concat_ws(''::text, a.psite_initial, '-'), ''::text), ''::text))::character varying)::bigint AS lpredemptiontokenid,
    pm.psite_ptchead_code AS ptcheadid,
    pm.restrictbenefit,
    pm.globalposbillcncode AS globalposbillcnid,
    pm.tpedc,
    pm.tpedcresponse,
    pm.tpedcbankname,
    pm.tpedccardtype,
    pm.tpbillrefnumber,
    pm.isdenoapplicable,
    pm.wlt_otpcode AS wltotpcode,
    pm.wlt_refnumber AS walletrefnumber,
    pm.wlt_response AS wltresponse,
    pm.wlt_mobile AS wltmobile,
    pm.transactionreftracking,
    pm.admsite_code
   FROM main.psite_posbillmop pm,
    main.psite_posbillcn pcn,
    main.admsite a,
    main.admsite a1
  WHERE (((pm.psite_posbillcn_code)::text = (pcn.code)::text) AND ("substring"((pm.globalposbillcncode)::text, ((1)::numeric)::text, (((main.instr((pm.globalposbillcncode)::text, '-'::text))::numeric - (1)::numeric))::text) = (a.psite_initial)::text) AND (pm.moptype = ANY (ARRAY['CNI'::bpchar, 'CNR'::bpchar])) AND (pm.admsite_code = a1.code) AND ((pm.psite_posbillcn_code)::text !~~ concat_ws(''::text, a1.psite_initial, '%')))
UNION ALL
 SELECT ((replace((pm.code)::text, COALESCE(concat_ws(''::text, a1.psite_initial, '-'), ''::text), ''::text))::character varying)::numeric AS id,
    ((replace((pm.psite_posbill_code)::text, COALESCE(concat_ws(''::text, a1.psite_initial, '-'), ''::text), ''::text))::character varying)::numeric AS posbillid,
    ((replace((pm.psite_possession_code)::text, COALESCE(concat_ws(''::text, a1.psite_initial, '-'), ''::text), ''::text))::character varying)::numeric AS possessionid,
    pm.mopdesc,
    pm.mopstlmdesc,
    pm.mopshortcode,
    pm.moptype,
    ((pm.admcurrency_code)::double precision)::character varying AS currencyid,
    pm.displayorder,
    pm.basetender,
    pm.basebalance,
    pm.baseamt,
    pm.forexrate,
    pm.forextender,
    pm.forexamt,
    pm.adjbaseamt,
    pm.ccno,
    pm.ccholdername,
    pm.ccvalidupto,
    pm.cctype,
    ((replace((pm.ref_psite_posbill_code)::text, COALESCE(concat_ws(''::text, a.psite_initial, '-'), ''::text), ''::text))::character varying)::numeric AS refposbillid,
    ((replace((pm.ref_psite_posbillmop_code)::text, COALESCE(concat_ws(''::text, a.psite_initial, '-'), ''::text), ''::text))::character varying)::numeric AS refposbillmopid,
    pm.forexbalance,
    ((pm.psite_mop_code)::double precision)::character varying AS mopid,
    pm.cccommpercent,
    pm.cccommamt,
    ((replace((pm.psite_posbillcn_code)::text, COALESCE(concat_ws(''::text, "substring"((pm.globalposbillcncode)::text, ((1)::numeric)::text, (((main.instr((pm.globalposbillcncode)::text, '-'::text))::numeric - (1)::numeric))::text), '-'), ''::text), ''::text))::character varying)::numeric AS posbillcnid,
    pm.billdate,
    ((replace((pm.psite_posbilldn_code)::text, COALESCE(concat_ws(''::text, a1.psite_initial, '-'), ''::text), ''::text))::character varying)::bigint AS posbilldnid,
    pm.paymentsource,
    ((replace((pm.lpredemptiontoken_code)::text, COALESCE(concat_ws(''::text, a1.psite_initial, '-'), ''::text), ''::text))::character varying)::bigint AS lpredemptiontokenid,
    pm.psite_ptchead_code AS ptcheadid,
    pm.restrictbenefit,
    pm.globalposbillcncode AS globalposbillcnid,
    pm.tpedc,
    pm.tpedcresponse,
    pm.tpedcbankname,
    pm.tpedccardtype,
    pm.tpbillrefnumber,
    pm.isdenoapplicable,
    pm.wlt_otpcode AS wltotpcode,
    pm.wlt_refnumber AS walletrefnumber,
    pm.wlt_response AS wltresponse,
    pm.wlt_mobile AS wltmobile,
    pm.transactionreftracking,
    pm.admsite_code
   FROM main.psite_posbillmop pm,
    main.psite_posbillcn pcn,
    main.admsite a,
    main.admsite a1
  WHERE (((pm.psite_posbillcn_code)::text = (pcn.code)::text) AND ("substring"((pm.globalposbillcncode)::text, ((1)::numeric)::text, (((main.instr((pm.globalposbillcncode)::text, '-'::text))::numeric - (1)::numeric))::text) = (a.sitedocin)::text) AND (pm.moptype = ANY (ARRAY['CNI'::bpchar, 'CNR'::bpchar])) AND (pm.admsite_code = a1.code) AND (POSITION(('-'::text) IN (pm.globalposbillcncode)) = 4) AND ((pm.psite_posbill_code)::text ~~ concat_ws(''::text, a1.psite_initial, '%')));
"""
  columns = (
    column "id" {
      type = "numeric"
    }
    column "posbillid" {
      type = "numeric"
    }
    column "possessionid" {
      type = "numeric"
    }
    column "mopdesc" {
      type = "character varying(500)"
    }
    column "mopstlmdesc" {
      type = "character varying(500)"
    }
    column "mopshortcode" {
      type = "character varying(5)"
    }
    column "moptype" {
      type = "character(3)"
    }
    column "currencyid" {
      type = "character varying"
    }
    column "displayorder" {
      type = "bigint"
    }
    column "basetender" {
      type = "numeric(20,2)"
    }
    column "basebalance" {
      type = "numeric(20,2)"
    }
    column "baseamt" {
      type = "numeric(20,2)"
    }
    column "forexrate" {
      type = "numeric(10,5)"
    }
    column "forextender" {
      type = "numeric(20,4)"
    }
    column "forexamt" {
      type = "numeric(20,4)"
    }
    column "adjbaseamt" {
      type = "numeric(20,2)"
    }
    column "ccno" {
      type = "character varying(25)"
    }
    column "ccholdername" {
      type = "character varying(100)"
    }
    column "ccvalidupto" {
      type = "character varying(5)"
    }
    column "cctype" {
      type = "character varying(25)"
    }
    column "refposbillid" {
      type = "numeric"
    }
    column "refposbillmopid" {
      type = "numeric"
    }
    column "forexbalance" {
      type = "numeric(20,4)"
    }
    column "mopid" {
      type = "character varying"
    }
    column "cccommpercent" {
      type = "numeric(5,2)"
    }
    column "cccommamt" {
      type = "numeric(20,2)"
    }
    column "posbillcnid" {
      type = "numeric"
    }
    column "billdate" {
      type = "timestamp(0) without time zone"
    }
    column "posbilldnid" {
      type = "numeric"
    }
    column "paymentsource" {
      type = "character varying(25)"
    }
    column "lpredemptiontokenid" {
      type = "numeric"
    }
    column "ptcheadid" {
      type = "bigint"
    }
    column "restrictbenefit" {
      type = "bigint"
    }
    column "globalposbillcnid" {
      type = "character varying(50)"
    }
    column "tpedc" {
      type = "bigint"
    }
    column "tpedcresponse" {
      type = "character varying(4000)"
    }
    column "tpedcbankname" {
      type = "character varying(1000)"
    }
    column "tpedccardtype" {
      type = "character varying(500)"
    }
    column "tpbillrefnumber" {
      type = "character varying(2000)"
    }
    column "isdenoapplicable" {
      type = "bigint"
    }
    column "wltotpcode" {
      type = "character varying(30)"
    }
    column "walletrefnumber" {
      type = "character varying(100)"
    }
    column "wltresponse" {
      type = text
    }
    column "wltmobile" {
      type = "character varying(25)"
    }
    column "transactionreftracking" {
      type = "bigint"
    }
    column "admsite_code" {
      type = "bigint"
    }
  )
}

