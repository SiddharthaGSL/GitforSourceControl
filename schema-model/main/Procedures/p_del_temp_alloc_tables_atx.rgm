procedure "main"."p_del_temp_alloc_tables_atx(bigint)" {
  text = """

DECLARE

   sql_stmt          varchar(500);
   v_row_limit       bigint         := 100;
   v_table_counter   bigint         := 0;
   v_code			BIGINT;
   v_table_rec		TYPE_REC_p_del_temp_alloc_tables[];
BEGIN

   v_code := 0;
   LOOP

   v_table_rec := '{}';
		SELECT ARRAY_AGG(t)
				STRICT INTO v_table_rec
				FROM 
				(SELECT CTID FROM
				(SELECT CTID,ROW_NUMBER() OVER () AS RN
                   FROM temp_alloc_item
          WHERE code IN (
                   SELECT refcode
                     FROM psite_event
                    WHERE eventtype IN ('ALLOCATEITEM', 'ITEMCHANGE')
                      AND dxsendid = p_dxsendid))T1
				WHERE T1.RN	> v_code	
                
			   LIMIT 100)t;
			   
			IF ARRAY_LENGTH(v_table_rec,1) IS NULL THEN
				EXIT; 
			END IF;
			sql_stmt := 'DELETE FROM TEMP_ALLOC_ITEM WHERE ROWID = :1';
			FOR i IN ARRAY_LOWER(v_table_rec, 1)..ARRAY_UPPER(v_table_rec, 1)
				LOOP
                  EXECUTE sql_stmt
                     USING v_table_rec[I].CTID;
			 V_CODE := V_CODE + 1;
            END LOOP;
			IF v_row_limit = ARRAY_LENGTH(v_table_rec,1)
			  THEN
				 v_table_counter := v_table_counter + v_row_limit;
			  ELSE
				 v_table_counter := v_table_counter + ARRAY_LENGTH(v_table_rec,1);
			  END IF;
			
        END LOOP;
   
  
   v_code := 0;
   LOOP

   v_table_rec := '{}';
		SELECT ARRAY_AGG(t)
				STRICT INTO v_table_rec
				FROM 
				(SELECT CTID FROM
				(SELECT CTID,ROW_NUMBER() OVER () AS RN
                   FROM temp_alloc_lpcard
          WHERE code IN (
                   SELECT refcode
                     FROM psite_event
                    WHERE eventtype IN ('CARDALLOCATE', 'CARDINFOCHANGE')
                      AND dxsendid = p_dxsendid))T1
				WHERE T1.RN	> v_code	
                
			   LIMIT 100)t;
			   
			IF ARRAY_LENGTH(v_table_rec,1) IS NULL THEN
				EXIT; 
			END IF;
			sql_stmt := 'DELETE FROM TEMP_ALLOC_LPCARD WHERE ROWID = :1';
			FOR i IN ARRAY_LOWER(v_table_rec, 1)..ARRAY_UPPER(v_table_rec, 1)
				LOOP
                  EXECUTE sql_stmt
                     USING v_table_rec[I].CTID;
			 V_CODE := V_CODE + 1;
            END LOOP;
			IF v_row_limit = ARRAY_LENGTH(v_table_rec,1)
			  THEN
				 v_table_counter := v_table_counter + v_row_limit;
			  ELSE
				 v_table_counter := v_table_counter + ARRAY_LENGTH(v_table_rec,1);
			  END IF;
        END LOOP;


   v_code := 0;
   LOOP
   
   v_table_rec := '{}';
		SELECT ARRAY_AGG(t)
				STRICT INTO v_table_rec
				FROM 
				(SELECT CTID FROM
				(SELECT CTID,ROW_NUMBER() OVER () AS RN
                   FROM temp_alloc_customer
          WHERE code IN (
                   SELECT refcode
                     FROM psite_event
                    WHERE eventtype IN ('CUSTOMERCHANGE', 'CUSTOMERDISTRIBUTE')
                      AND dxsendid = p_dxsendid))T1
				WHERE T1.RN	> v_code	
                
			   LIMIT 100)t;
			   
			IF ARRAY_LENGTH(v_table_rec,1) IS NULL THEN
				EXIT; 
			END IF;
   sql_stmt := 'DELETE FROM TEMP_ALLOC_CUSTOMER WHERE ROWID = :1';
			FOR i IN ARRAY_LOWER(v_table_rec, 1)..ARRAY_UPPER(v_table_rec, 1)
				LOOP
                  EXECUTE sql_stmt
                     USING v_table_rec[I].CTID;
			 V_CODE := V_CODE + 1;
            END LOOP;
			IF v_row_limit = ARRAY_LENGTH(v_table_rec,1)
			  THEN
				 v_table_counter := v_table_counter + v_row_limit;
			  ELSE
				 v_table_counter := v_table_counter + ARRAY_LENGTH(v_table_rec,1);
			  END IF;
        END LOOP;
  
   v_code := 0;
   LOOP
   
   v_table_rec := '{}';
		SELECT ARRAY_AGG(t)
				STRICT INTO v_table_rec
				FROM 
				(SELECT CTID FROM
				(SELECT CTID,ROW_NUMBER() OVER () AS RN
                   FROM TEMP_ALLOC_GVLEAVES
          WHERE code IN (
                   SELECT refcode
                     FROM psite_event
                    WHERE eventtype IN ('GVALLOCATE', 'GVCHANGE')
                      AND dxsendid = p_dxsendid))T1
				WHERE T1.RN	> v_code	
                
			   LIMIT 100)t;
			   
			IF ARRAY_LENGTH(v_table_rec,1) IS NULL THEN
				EXIT; 
			END IF;
   sql_stmt := 'DELETE FROM TEMP_ALLOC_GVLEAVES WHERE ROWID = :1';
			FOR i IN ARRAY_LOWER(v_table_rec, 1)..ARRAY_UPPER(v_table_rec, 1)
				LOOP
                  EXECUTE sql_stmt
                     USING v_table_rec[I].CTID;
			 V_CODE := V_CODE + 1;
            END LOOP;
			IF v_row_limit = ARRAY_LENGTH(v_table_rec,1)
			  THEN
				 v_table_counter := v_table_counter + v_row_limit;
			  ELSE
				 v_table_counter := v_table_counter + ARRAY_LENGTH(v_table_rec,1);
			  END IF;
        END LOOP;
 
   v_code := 0;
   LOOP
  
   v_table_rec := '{}';
		SELECT ARRAY_AGG(t)
				STRICT INTO v_table_rec
				FROM 
				(SELECT CTID FROM
				(SELECT CTID,ROW_NUMBER() OVER () AS RN
                   FROM temp_alloc_article
          WHERE code IN (
                   SELECT refcode
                     FROM psite_event
                    WHERE eventtype IN ('ARTICLECHANGE')
                      AND dxsendid = p_dxsendid))T1
				WHERE T1.RN	> v_code	
                
			   LIMIT 100)t;
			   
			IF ARRAY_LENGTH(v_table_rec,1) IS NULL THEN
				EXIT; 
			END IF;
   sql_stmt := 'DELETE FROM TEMP_ALLOC_ARTICLE WHERE ROWID = :1';
			FOR i IN ARRAY_LOWER(v_table_rec, 1)..ARRAY_UPPER(v_table_rec, 1)
				LOOP
                  EXECUTE sql_stmt
                     USING v_table_rec[I].CTID;
			 V_CODE := V_CODE + 1;
            END LOOP;
			IF v_row_limit = ARRAY_LENGTH(v_table_rec,1)
			  THEN
				 v_table_counter := v_table_counter + v_row_limit;
			  ELSE
				 v_table_counter := v_table_counter + ARRAY_LENGTH(v_table_rec,1);
			  END IF;
        END LOOP;
   
END;
"""
  arguments = <
    {
      name = p_dxsendid
      type = bigint
      mode = IN
    }

  >
  language = plpgsql
}

