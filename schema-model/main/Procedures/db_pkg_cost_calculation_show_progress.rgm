procedure "main"."db_pkg_cost_calculation_show_progress(bigint)" {
  text = """

BEGIN
        PERFORM set_config('db_pkg_cost_calculation.v_rows_interval', coalesce(current_setting('db_pkg_cost_calculation.v_rows_interval')::numeric(20),0) + coalesce(P_PROCESSED,0), false);
        PERFORM set_config('db_pkg_cost_calculation.v_rows_processed', coalesce(current_setting('db_pkg_cost_calculation.v_rows_processed')::numeric(20),0) + coalesce(P_PROCESSED,0), false);
        IF current_setting('db_pkg_cost_calculation.v_rows_interval')::numeric(20) >= current_setting('db_pkg_cost_calculation.v_disp_freq')::bigint THEN

-- START REV : 014
        IF coalesce(current_setting('db_pkg_cost_calculation.v_rows_processed')::numeric(20),0) <> 0 THEN
-- END REV : 014
            CALL db_pkg_cost_calculation_record_progress('Updating ['||current_setting('db_pkg_cost_calculation.v_rows_processed')::numeric(20)||' of '||current_setting('db_pkg_cost_calculation.v_rows_to_be_processed')::numeric(20)||' Records processed.]#'||current_setting('db_pkg_cost_calculation.v_rows_to_be_processed')::numeric(20)-current_setting('db_pkg_cost_calculation.v_rows_processed')::numeric(20)::varchar||' Records pending.',1);
        END IF;
            PERFORM set_config('db_pkg_cost_calculation.v_rows_interval', 0, false);
        END IF;
    END;

"""
  arguments = <
    {
      name = p_processed
      type = bigint
      mode = IN
    }

  >
  language = plpgsql
}

