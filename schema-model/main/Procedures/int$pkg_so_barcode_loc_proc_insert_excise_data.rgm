procedure "main"."int$pkg_so_barcode_loc_proc_insert_excise_data(bigint)" {
  text = """

DECLARE

        v_excise_appl           char(1);
        v_orddt                 timestamp;
        v_excisemain_code 	    salorddet.excisemain_code%type;		
        v_ex_basis 				salorddet.ex_basis%type;		
        v_ex_effrate 			salorddet.ex_effrate%type;		
        v_ex_abtfactor 			salorddet.ex_abtfactor%type;		
        v_ex_dutyfactor 		salorddet.ex_dutyfactor%type;		
        v_ex_cessfactor 		salorddet.ex_cessfactor%type;		
        v_ex_appamt 			salorddet.ex_appamt%type;		
        v_ex_dutyamt 			salorddet.ex_dutyamt%type;		
        v_ex_cessamt 			salorddet.ex_cessamt%type;
        v_ex_roundoff			excisedet.roundoff%type;
        v_ex_applicable_from	excisedet.ex_applicable_from%type;

  c1_loop RECORD;

BEGIN
        select coalesce(isexcise,'N')
        into STRICT   v_excise_appl
        from   admdocscheme
        where  doccode = (SELECT doccode from salordmain where ordcode = p_ordcode);

        select orddt into STRICT v_orddt 
        from   salordmain 
        where  ordcode = p_ordcode;

        if  v_excise_appl = 'Y' then
            for	c1_loop in ( 
                                SELECT 	d.icode, d.ordqty qty, d.rate, i.mrp, i.listed_mrp, d.code 
                                from    salorddet d, invitem i
                                where 	d.ordcode = p_ordcode
                                and     d.icode = i.icode 
                            )
		  	loop
                v_ex_dutyfactor 	:= 0;
                v_ex_abtfactor  	:= 0;
                v_ex_basis      	:= null;
                v_ex_cessfactor 	:= 0;
                v_ex_roundoff   	:= 0;
                v_excisemain_code   := null;
                v_ex_applicable_from:= null;
		  	
                begin
                    select	coalesce(t2.dutyfactor, 0),
                            coalesce(t2.abtfactor, 0),
                            t2.basis,
                            coalesce(t2.cessfactor, 0),
                            coalesce(t2.roundoff, 0),
                            t3.excisemain_code,
                            t2.ex_applicable_from
                    into STRICT    v_ex_dutyfactor,
                            v_ex_abtfactor,
                            v_ex_basis,
                            v_ex_cessfactor,
                            v_ex_roundoff,
                            v_excisemain_code,
                            v_ex_applicable_from
                    FROM invitem t1, invgrp t3
LEFT OUTER JOIN excisedet t2 ON (t3.excisemain_code = t2.excisemain_code)
WHERE t1.icode = c1_loop.icode and t1.grpcode = t3.grpcode  and (	
                                t2.dtfr =	
											(
												SELECT max(c.dtfr)
												from   excisedet c
												where  c.dtfr <= v_orddt
												and (	
															c.dtto >= v_orddt
															or
															c.dtto is null
                                                        )
                                                and   	c.excisemain_code = t3.excisemain_code
                                            )
                            );
                exception
                    when no_data_found then
                        v_ex_dutyfactor 	:= 0;
                        v_ex_abtfactor  	:= 0;
                        v_ex_basis      	:= null;
                        v_ex_cessfactor 	:= 0;
                        v_ex_roundoff   	:= 0;
                        v_excisemain_code   := null;
                        v_ex_applicable_from:= null;
                end;
		  			
                update salorddet
                set	   excisemain_code = v_excisemain_code,
                       ex_basis = v_ex_basis,
                       ex_effrate =	(
                                        CASE WHEN                                             v_ex_basis = NULL THEN  0 WHEN                                             v_ex_basis='M' THEN  coalesce(c1_loop.mrp, 0) WHEN                                             v_ex_basis='R' THEN  coalesce(c1_loop.rate, 0) WHEN                                             v_ex_basis='L' THEN  coalesce(c1_loop.listed_mrp, 0)  ELSE 0 END
                                    ),
                       ex_abtfactor	= v_ex_abtfactor,
                       ex_dutyfactor = v_ex_dutyfactor,
                       ex_cessfactor = v_ex_cessfactor,
                       ex_roundoff = coalesce(v_ex_roundoff, 0),
                       ex_appamt = (
                                        CASE WHEN                                             v_ex_basis = NULL THEN 	0 WHEN                                             v_ex_basis='M' THEN  	round(coalesce(c1_loop.qty, 0) * ((c1_loop.mrp - ((c1_loop.mrp * v_ex_abtfactor) / 100))), 2) WHEN                                             v_ex_basis='R' THEN  	round(coalesce(c1_loop.qty, 0) * ((c1_loop.rate - ((c1_loop.rate * v_ex_abtfactor) / 100))), 2) WHEN                                             v_ex_basis='L' THEN  	round(coalesce(c1_loop.qty, 0) * ((c1_loop.listed_mrp - ((c1_loop.listed_mrp * v_ex_abtfactor) / 100))), 2)  ELSE 0 END 
                                    ),
                        ex_dutyamt = (
                                        CASE WHEN                                                 v_ex_basis = NULL THEN 	0 WHEN                                                 v_ex_basis='M' THEN 	round((coalesce(c1_loop.qty, 0) * (((c1_loop.mrp - ((c1_loop.mrp * v_ex_abtfactor) / 100)) * v_ex_dutyfactor) / 100)), (CASE WHEN v_ex_roundoff=0 THEN  0  ELSE 2 END )) WHEN                                                 v_ex_basis='R' THEN 	round((coalesce(c1_loop.qty, 0) * (((c1_loop.rate - ((c1_loop.rate * v_ex_abtfactor) / 100)) * v_ex_dutyfactor) / 100)), (CASE WHEN v_ex_roundoff=0 THEN  0  ELSE 2 END )) WHEN                                                 v_ex_basis='L' THEN 	round((coalesce(c1_loop.qty, 0) * (((c1_loop.listed_mrp - ((c1_loop.listed_mrp * v_ex_abtfactor) / 100)) * v_ex_dutyfactor) / 100)), (CASE WHEN v_ex_roundoff=0 THEN  0  ELSE 2 END ))  ELSE 0 END 	
                                    ),
                       ex_cessamt = (
                                        CASE WHEN                                                 v_ex_basis = NULL THEN 	0 WHEN                                                 v_ex_basis='M' THEN 	round((coalesce(c1_loop.qty, 0) * (((((c1_loop.mrp - ((c1_loop.mrp * v_ex_abtfactor) / 100)) * v_ex_dutyfactor) / 100) * v_ex_cessfactor) / 100)), (CASE WHEN v_ex_roundoff=0 THEN  0  ELSE 2 END )) WHEN                                                 v_ex_basis='R' THEN  	round((coalesce(c1_loop.qty, 0) * (((((c1_loop.rate - ((c1_loop.rate * v_ex_abtfactor) / 100)) * v_ex_dutyfactor) / 100) * v_ex_cessfactor) / 100)), (CASE WHEN v_ex_roundoff=0 THEN  0  ELSE 2 END )) WHEN                                                 v_ex_basis='L' THEN 	round((coalesce(c1_loop.qty, 0) * (((((c1_loop.listed_mrp - ((c1_loop.listed_mrp * v_ex_abtfactor) / 100)) * v_ex_dutyfactor) / 100) * v_ex_cessfactor) / 100)), (CASE WHEN v_ex_roundoff=0 THEN  0  ELSE 2 END ))  ELSE 0 END 
                                    ),
                       ex_applicable_from = v_ex_applicable_from
		  			where		code	=	c1_loop.code;
		  	end loop;
				
  			-- set excise related charge to 0 as per budget 2016 if ex_effrate is less than ex_exempt_limit
  			update salorddet d
  			set	   ex_dutyfactor = 0,
                   ex_dutyamt = 0,
                   ex_cessamt = 0	
            where  ordcode = p_ordcode
            and    coalesce(ex_effrate,0) < coalesce(ex_applicable_from,0);

            CALL int$pkg_so_barcode_loc_pro_setoff_fraction_value(p_ordcode);
		else
            update salorddet	d	
            set	   excisemain_code  = NULL,
                   ex_basis  = NULL,
                   ex_roundoff = 0,
                   ex_effrate =	0,
                   ex_abtfactor = 0,
                   ex_dutyfactor = 0,
                   ex_cessfactor = 0,
                   ex_appamt = 0,
                   ex_dutyamt = 0,
                   ex_cessamt =	0
            where  ordcode = p_ordcode;				
		end if;
    end;

"""
  arguments = <
    {
      name = p_ordcode
      type = bigint
      mode = IN
    }

  >
  language = plpgsql
}

