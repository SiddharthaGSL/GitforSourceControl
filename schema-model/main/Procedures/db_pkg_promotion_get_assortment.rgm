procedure "main"."db_pkg_promotion_get_assortment(text)" {
  text = """

DECLARE

		VNDIVISIONGRPCODE	bigint;
		VNSECTIONGRPCODE	bigint;
		VNDEPARTMENTGRPCODE	bigint;
		VNINVARTICLECODE	bigint;
		VCICODE			varchar(9);
		VNCCODE1		bigint;
		VNCCODE2		bigint;
		VNCCODE3		bigint;
		VNCCODE4		bigint;
		VNCCODE5		bigint;
		VNCCODE6		bigint;
		VNRATE			double precision;
		VNMRP			double precision;
		VNLISTEDMRP		double precision;
		VNCOSTRATE		double precision;
		VNWSP			double precision;
		VDSTOCKINDATE		timestamp(0);
	
BEGIN
		DELETE FROM GLOBAL_PROMO_INCLUDE;

		SELECT (SELECT PARCODE
			    FROM INVGRP
			    WHERE GRPCODE = (SELECT PARCODE
								FROM INVGRP
								WHERE GRPCODE = I.GRPCODE)
				) DIVISION_GRPCODE,
			(SELECT PARCODE
			FROM INVGRP
			WHERE GRPCODE = I.GRPCODE
                        ) SECTION_GRPCODE,
			I.GRPCODE DEPARTMENT_GRPCODE, I.INVARTICLE_CODE, I.ICODE,
			I.CCODE1, I.CCODE2, I.CCODE3, I.CCODE4, I.CCODE5, I.CCODE6,
			I.RATE, I.MRP, I.LISTED_MRP, I.COSTRATE, I.WSP, I.STOCKINDATE
		INTO STRICT 	VNDIVISIONGRPCODE, VNSECTIONGRPCODE,
			VNDEPARTMENTGRPCODE, VNINVARTICLECODE, VCICODE,
			VNCCODE1, VNCCODE2, VNCCODE3, VNCCODE4, VNCCODE5, VNCCODE6,
			VNRATE, VNMRP, VNLISTEDMRP, VNCOSTRATE, VNWSP, VDSTOCKINDATE
		FROM INVITEM I
		WHERE ICODE = PCICODE;

		INSERT INTO GLOBAL_PROMO_INCLUDE(ASSORTMENT_CODE)
		SELECT	ASSORTMENT_CODE
		FROM	PROMO_ASSORTMENT_INCLUDE
		WHERE	((DIVISION_GRPCODE IS NOT NULL AND DIVISION_GRPCODE = VNDIVISIONGRPCODE) OR DIVISION_GRPCODE IS NULL)
		AND	((SECTION_GRPCODE IS NOT NULL AND SECTION_GRPCODE = VNSECTIONGRPCODE) OR SECTION_GRPCODE IS NULL)
		AND	((DEPARTMENT_GRPCODE IS NOT NULL AND DEPARTMENT_GRPCODE = VNDEPARTMENTGRPCODE) OR DEPARTMENT_GRPCODE IS NULL)
		AND	((INVARTICLE_CODE IS NOT NULL AND INVARTICLE_CODE = VNINVARTICLECODE) OR INVARTICLE_CODE IS NULL)
		AND	((INVARTICLE_CODE IS NOT NULL AND INVARTICLE_CODE = VNINVARTICLECODE) OR INVARTICLE_CODE IS NULL)
		AND	((ICODE IS NOT NULL AND ICODE = VCICODE) OR ICODE IS NULL)
		AND	((CCODE1 IS NOT NULL AND CCODE1 = VNCCODE1) OR CCODE1 IS NULL)
		AND	((CCODE2 IS NOT NULL AND CCODE2 = VNCCODE2) OR CCODE2 IS NULL)
		AND	((CCODE3 IS NOT NULL AND CCODE3 = VNCCODE3) OR CCODE3 IS NULL)
		AND	((CCODE4 IS NOT NULL AND CCODE4 = VNCCODE4) OR CCODE4 IS NULL)
		AND	((CCODE5 IS NOT NULL AND CCODE5 = VNCCODE5) OR CCODE5 IS NULL)
		AND	((CCODE6 IS NOT NULL AND CCODE6 = VNCCODE6) OR CCODE6 IS NULL)
		AND	((PRICE_RANGE_BASIS IS NOT NULL
				AND '1' =
					CASE
					WHEN PRICE_RANGE_BASIS = 'R' AND VNRATE BETWEEN PRICE_RANGE_FROM AND PRICE_RANGE_TO THEN '1'
					WHEN PRICE_RANGE_BASIS = 'M' AND VNMRP BETWEEN PRICE_RANGE_FROM AND PRICE_RANGE_TO THEN '1'
					WHEN PRICE_RANGE_BASIS = 'L' AND VNLISTEDMRP BETWEEN PRICE_RANGE_FROM AND PRICE_RANGE_TO THEN '1'
					WHEN PRICE_RANGE_BASIS = 'C' AND VNCOSTRATE BETWEEN PRICE_RANGE_FROM AND PRICE_RANGE_TO THEN '1'
					WHEN PRICE_RANGE_BASIS = 'W' AND VNWSP BETWEEN PRICE_RANGE_FROM AND PRICE_RANGE_TO THEN '1'
					END
			) OR PRICE_RANGE_BASIS IS NULL)
		AND	((STOCKINDATE_FROM IS NOT NULL AND VDSTOCKINDATE BETWEEN STOCKINDATE_FROM AND STOCKINDATE_TO) OR STOCKINDATE_FROM IS NULL)
		EXCEPT
		SELECT	ASSORTMENT_CODE
		FROM	PROMO_ASSORTMENT_EXCLUDE
		WHERE	((DIVISION_GRPCODE IS NOT NULL AND DIVISION_GRPCODE = VNDIVISIONGRPCODE) OR DIVISION_GRPCODE IS NULL)
		AND	((SECTION_GRPCODE IS NOT NULL AND SECTION_GRPCODE = VNSECTIONGRPCODE) OR SECTION_GRPCODE IS NULL)
		AND	((DEPARTMENT_GRPCODE IS NOT NULL AND DEPARTMENT_GRPCODE = VNDEPARTMENTGRPCODE) OR DEPARTMENT_GRPCODE IS NULL)
		AND	((INVARTICLE_CODE IS NOT NULL AND INVARTICLE_CODE = VNINVARTICLECODE) OR INVARTICLE_CODE IS NULL)
		AND	((INVARTICLE_CODE IS NOT NULL AND INVARTICLE_CODE = VNINVARTICLECODE) OR INVARTICLE_CODE IS NULL)
		AND	((ICODE IS NOT NULL AND ICODE = VCICODE) OR ICODE IS NULL)
		AND	((CCODE1 IS NOT NULL AND CCODE1 = VNCCODE1) OR CCODE1 IS NULL)
		AND	((CCODE2 IS NOT NULL AND CCODE2 = VNCCODE2) OR CCODE2 IS NULL)
		AND	((CCODE3 IS NOT NULL AND CCODE3 = VNCCODE3) OR CCODE3 IS NULL)
		AND	((CCODE4 IS NOT NULL AND CCODE4 = VNCCODE4) OR CCODE4 IS NULL)
		AND	((CCODE5 IS NOT NULL AND CCODE5 = VNCCODE5) OR CCODE5 IS NULL)
		AND	((CCODE6 IS NOT NULL AND CCODE6 = VNCCODE6) OR CCODE6 IS NULL)
		AND	((PRICE_RANGE_BASIS IS NOT NULL
				AND '1' =
					CASE
					WHEN PRICE_RANGE_BASIS = 'R' AND VNRATE BETWEEN PRICE_RANGE_FROM AND PRICE_RANGE_TO THEN '1'
					WHEN PRICE_RANGE_BASIS = 'M' AND VNMRP BETWEEN PRICE_RANGE_FROM AND PRICE_RANGE_TO THEN '1'
					WHEN PRICE_RANGE_BASIS = 'L' AND VNLISTEDMRP BETWEEN PRICE_RANGE_FROM AND PRICE_RANGE_TO THEN '1'
					WHEN PRICE_RANGE_BASIS = 'C' AND VNCOSTRATE BETWEEN PRICE_RANGE_FROM AND PRICE_RANGE_TO THEN '1'
					WHEN PRICE_RANGE_BASIS = 'W' AND VNWSP BETWEEN PRICE_RANGE_FROM AND PRICE_RANGE_TO THEN '1'
					END
			) OR PRICE_RANGE_BASIS IS NULL)
		AND	((STOCKINDATE_FROM IS NOT NULL AND VDSTOCKINDATE BETWEEN STOCKINDATE_FROM AND STOCKINDATE_TO) OR STOCKINDATE_FROM IS NULL);
	EXCEPTION WHEN OTHERS THEN
		call ERRAUDIT(USER, 'DB_PKG_PROMOTION.GET_ASSORTMENT()', SQLSTATE, SQLERRM);
	END;

"""
  arguments = <
    {
      name = pcicode
      type = text
      mode = IN
    }

  >
  language = plpgsql
}

