procedure "main"."db_pro_pos_customer_merge(text)" {
  text = """

DECLARE

   C_CUSTOMER CURSOR FOR
      SELECT    CODE,
                OLD_PSITE_CUSTOMER_CODE OLD_CUSTOMER_CODE, 
                NEW_PSITE_CUSTOMER_CODE NEW_CUSTOMER_CODE
        FROM PSITE_CUSTOMER_MERGE
       WHERE NEW_PSITE_CUSTOMER_CODE = P_NEW_CUSTOMER_CODE
       AND   STATUS = 'P';
   C_CUS_DIST CURSOR(P_NEW_CUS_CODE CHARACTER VARYING , P_OLD_CUS_CODE CHARACTER VARYING)
   FOR
      SELECT ADMSITE_CODE
        FROM PSITE_CUSTOMER_DIST
       WHERE PSITE_CUSTOMER_CODE = P_OLD_CUS_CODE
      EXCEPT
      SELECT ADMSITE_CODE
        FROM PSITE_CUSTOMER_DIST
       WHERE PSITE_CUSTOMER_CODE = P_NEW_CUS_CODE;
   C_CUS_MERGE_DIST CURSOR(P_OLD_CUS_CODE CHARACTER VARYING)
   FOR
      SELECT ADMSITE_CODE
        FROM PSITE_CUSTOMER_DIST
       WHERE PSITE_CUSTOMER_CODE = P_OLD_CUS_CODE;
BEGIN
/*******************************************************************************************************************
      REVISIONS:
      No.       Date         Author                   Description
      --------- -----------  ----------------------   -----------------------------------------------------------------
      REV : 000 06-JUN-2022  Anindya                  (TFS ID : 6933) Duplicate POS Customer Merging based on Mobile No.
*******************************************************************************************************************/
   FOR C1 IN C_CUSTOMER
   LOOP
      UPDATE PSITE_POSBILL
         SET PSITE_CUSTOMER_CODE = C1.NEW_CUSTOMER_CODE
       WHERE PSITE_CUSTOMER_CODE = C1.OLD_CUSTOMER_CODE;
      UPDATE PSITE_POSBILLVOID
         SET PSITE_CUSTOMER_CODE = C1.NEW_CUSTOMER_CODE
       WHERE PSITE_CUSTOMER_CODE = C1.OLD_CUSTOMER_CODE;
        UPDATE CAPILLARY_GV_SYNC_CUSTOM
                 SET PSITE_CUSTOMER_CODE = C1.NEW_CUSTOMER_CODE
       WHERE PSITE_CUSTOMER_CODE = C1.OLD_CUSTOMER_CODE;
        UPDATE LPCARD
                 SET PSITE_CUSTOMER_CODE = C1.NEW_CUSTOMER_CODE
       WHERE PSITE_CUSTOMER_CODE = C1.OLD_CUSTOMER_CODE;
        UPDATE PSITE_DELIVERYSLIP
                 SET PSITE_CUSTOMER_CODE = C1.NEW_CUSTOMER_CODE
       WHERE PSITE_CUSTOMER_CODE = C1.OLD_CUSTOMER_CODE;
        UPDATE PSITE_DELIVERYSLIPVOID
                 SET PSITE_CUSTOMER_CODE = C1.NEW_CUSTOMER_CODE
       WHERE PSITE_CUSTOMER_CODE = C1.OLD_CUSTOMER_CODE;
        UPDATE PSITE_POSBILL
                 SET PSITE_CUSTOMER_CODE = C1.NEW_CUSTOMER_CODE
       WHERE PSITE_CUSTOMER_CODE = C1.OLD_CUSTOMER_CODE;
        UPDATE PSITE_POSBILLCN
                 SET PSITE_CUSTOMER_CODE = C1.NEW_CUSTOMER_CODE
       WHERE PSITE_CUSTOMER_CODE = C1.OLD_CUSTOMER_CODE;
        UPDATE PSITE_POSBILLCNOP
                 SET PSITE_CUSTOMER_CODE = C1.NEW_CUSTOMER_CODE
       WHERE PSITE_CUSTOMER_CODE = C1.OLD_CUSTOMER_CODE;
        UPDATE PSITE_POSBILLCNVOID
                 SET PSITE_CUSTOMER_CODE = C1.NEW_CUSTOMER_CODE
       WHERE PSITE_CUSTOMER_CODE = C1.OLD_CUSTOMER_CODE;
        UPDATE PSITE_POSBILLDN
                 SET PSITE_CUSTOMER_CODE = C1.NEW_CUSTOMER_CODE
       WHERE PSITE_CUSTOMER_CODE = C1.OLD_CUSTOMER_CODE;
        UPDATE PSITE_POSBILLDNOP
                 SET PSITE_CUSTOMER_CODE = C1.NEW_CUSTOMER_CODE
       WHERE PSITE_CUSTOMER_CODE = C1.OLD_CUSTOMER_CODE;
        UPDATE PSITE_POSBILLDNVOID
                 SET PSITE_CUSTOMER_CODE = C1.NEW_CUSTOMER_CODE
       WHERE PSITE_CUSTOMER_CODE = C1.OLD_CUSTOMER_CODE;
        UPDATE PSITE_POSBILLVOID
                 SET PSITE_CUSTOMER_CODE = C1.NEW_CUSTOMER_CODE
       WHERE PSITE_CUSTOMER_CODE = C1.OLD_CUSTOMER_CODE;
        UPDATE PSITE_POSBILL_PARK
                 SET PSITE_CUSTOMER_CODE = C1.NEW_CUSTOMER_CODE
       WHERE PSITE_CUSTOMER_CODE = C1.OLD_CUSTOMER_CODE;
        UPDATE PSITE_POSDEPREFBILL
                 SET PSITE_CUSTOMER_CODE = C1.NEW_CUSTOMER_CODE
       WHERE PSITE_CUSTOMER_CODE = C1.OLD_CUSTOMER_CODE;
        UPDATE PSITE_POSDEPREFBILLVOID
                 SET PSITE_CUSTOMER_CODE = C1.NEW_CUSTOMER_CODE
       WHERE PSITE_CUSTOMER_CODE = C1.OLD_CUSTOMER_CODE;
        UPDATE PSITE_POSGVBILL
                 SET PSITE_CUSTOMER_CODE = C1.NEW_CUSTOMER_CODE
       WHERE PSITE_CUSTOMER_CODE = C1.OLD_CUSTOMER_CODE;
        UPDATE PSITE_POSORDER
                 SET PSITE_CUSTOMER_CODE = C1.NEW_CUSTOMER_CODE
       WHERE PSITE_CUSTOMER_CODE = C1.OLD_CUSTOMER_CODE;
        UPDATE PSITE_RECPOSBILLCN
                 SET PSITE_CUSTOMER_CODE = C1.NEW_CUSTOMER_CODE
       WHERE PSITE_CUSTOMER_CODE = C1.OLD_CUSTOMER_CODE;
       UPDATE SALCSMAIN
                 SET PSITE_CUSTOMER_CODE = C1.NEW_CUSTOMER_CODE
       WHERE PSITE_CUSTOMER_CODE = C1.OLD_CUSTOMER_CODE;
        UPDATE SALCSMAIN_DELETED
                 SET PSITE_CUSTOMER_CODE = C1.NEW_CUSTOMER_CODE
       WHERE PSITE_CUSTOMER_CODE = C1.OLD_CUSTOMER_CODE;
        UPDATE SALSSMAIN
                 SET PSITE_CUSTOMER_CODE = C1.NEW_CUSTOMER_CODE
       WHERE PSITE_CUSTOMER_CODE = C1.OLD_CUSTOMER_CODE;
        UPDATE TEMP_POSBILL_STLM
                 SET PSITE_CUSTOMER_CODE = C1.NEW_CUSTOMER_CODE
       WHERE PSITE_CUSTOMER_CODE = C1.OLD_CUSTOMER_CODE;
      FOR C2 IN C_CUS_DIST(C1.NEW_CUSTOMER_CODE, C1.OLD_CUSTOMER_CODE)
      LOOP
         INSERT INTO PSITE_CUSTOMER_DIST(ADMSITE_CODE, PSITE_CUSTOMER_CODE)
              VALUES (C2.ADMSITE_CODE, C1.NEW_CUSTOMER_CODE);
      END LOOP;
      FOR C3 IN C_CUS_MERGE_DIST(C1.OLD_CUSTOMER_CODE)
      LOOP
         CALL db_pkg_npos_event$track(C3.ADMSITE_CODE, 'CUSTOMERMERGE', C1.code);
      END LOOP;
      CALL db_pkg_npos_event$webtrack('CUSTOMERMERGEWEB', C1.code);
      DELETE FROM PSITE_CUSTOMER_DIST
            WHERE PSITE_CUSTOMER_CODE = C1.OLD_CUSTOMER_CODE;
      DELETE FROM PSITE_CUSTOMER
            WHERE CODE = C1.OLD_CUSTOMER_CODE;
      UPDATE  PSITE_CUSTOMER_MERGE
      SET STATUS = 'S'
      WHERE CODE = C1.CODE;
   END LOOP;
END;
"""
  arguments = <
    {
      name = p_new_customer_code
      type = text
      mode = IN
    }

  >
  language = plpgsql
}

