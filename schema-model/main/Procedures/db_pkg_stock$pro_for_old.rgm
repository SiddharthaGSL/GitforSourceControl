procedure "main"."db_pkg_stock$pro_for_old()" {
  text = """

DECLARE
  V_STOCKCODE       INVSTOCK.STOCKCODE%TYPE;
  V_SUBENTTYPE      INVSTOCK.SUBENTTYPE%TYPE; 
  V_ENTTYPE         INVSTOCK.ENTTYPE%TYPE; 
  V_DETAIL_CODE     INVSTOCK.DETAIL_CODE%TYPE;
  V_QUERY			TEXT;
BEGIN
        PERFORM set_config('db_pkg_stock.l_noninventory', (SELECT  NONINVENTORY
        FROM    INVITEM
        WHERE   ICODE = current_setting('db_pkg_stock.l_old_icode')::CHARACTER VARYING(9)), false);

        IF  NULLIF(current_setting('db_pkg_stock.l_noninventory'),'')::char(1) = 'N' THEN
			
            IF  NULLIF(current_setting('db_pkg_stock.l_subenttype'),'') IS NULL THEN
                /*EXECUTE 'DELETE FROM INVSTOCK WHERE  ENTTYPE = $1 AND DETAIL_CODE = $2 AND SUBENTTYPE IS NULL RETURNING STOCKCODE INTO $3'
				USING current_setting('db_pkg_stock.l_enttype')::CHARACTER VARYING(3),
				current_setting('db_pkg_stock.l_detail_code')::CHARACTER VARYING(50);*/
				DELETE FROM INVSTOCK WHERE  ENTTYPE = current_setting('db_pkg_stock.l_enttype')::CHARACTER VARYING(3) 
				AND DETAIL_CODE = current_setting('db_pkg_stock.l_detail_code')::CHARACTER VARYING(50)
				AND SUBENTTYPE IS NULL 
				RETURNING STOCKCODE INTO V_STOCKCODE;
            ELSE
                /*EXECUTE 'DELETE FROM INVSTOCK WHERE  ENTTYPE = $1    AND DETAIL_CODE = $2 AND SUBENTTYPE = $3 RETURNING STOCKCODE INTO $4'
				USING current_setting('db_pkg_stock.l_enttype')::CHARACTER VARYING(3),
				current_setting('db_pkg_stock.l_detail_code')::CHARACTER VARYING(50),
				current_setting('db_pkg_stock.l_subenttype')::CHARACTER VARYING(3),
				V_STOCKCODE;*/
				DELETE FROM INVSTOCK WHERE  ENTTYPE = NULLIF(current_setting('db_pkg_stock.l_enttype'),'')::CHARACTER VARYING(3)   
				AND DETAIL_CODE = NULLIF(current_setting('db_pkg_stock.l_detail_code'),'')::CHARACTER VARYING(50)
				AND SUBENTTYPE = NULLIF(current_setting('db_pkg_stock.l_subenttype'),'')::CHARACTER VARYING(3) 
				RETURNING STOCKCODE INTO V_STOCKCODE;
            END IF;
			PERFORM set_config('db_pkg_stock.l_stockcode',V_STOCKCODE::BIGINT,false);
        END IF;
    END;

"""
  arguments = [
  ]
  language = plpgsql
}

