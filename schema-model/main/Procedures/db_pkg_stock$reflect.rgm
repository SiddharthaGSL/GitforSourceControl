procedure "main"."db_pkg_stock$reflect(text, bigint, timestamp without time zone, text, bigint, bigint, bigint, bigint, bigint, bigint, bigint, bigint, text, bigint, text, text, bigint, bigint, bigint, text)" {
  text = """

BEGIN

        IF  P_YCODE <> 1 THEN

            UPDATE  INVSTOCK
            SET     ENTNO           = coalesce(P_ENTNO,ENTNO)
                    ,SCHEME_DOCNO   = coalesce(P_SCHEME_DOCNO,SCHEME_DOCNO)
                    ,ENTDT          = coalesce(P_ENTDT,ENTDT)
                    ,LOCCODE        = coalesce(P_LOCCODE,LOCCODE)
                    ,YCODE          = coalesce(P_YCODE,YCODE)
                    ,REFPCODE       = coalesce(P_REFPCODE,REFPCODE)
                    ,REFLOCCODE     = coalesce(P_REFLOCCODE,REFLOCCODE)
                    ,REFCMPCODE     = coalesce(P_REFCMPCODE,REFCMPCODE)
                    ,REFGLCODE      = coalesce(P_REFGLCODE,REFGLCODE)
                    ,REFDEPTCODE    = coalesce(P_REFDEPTCODE,REFDEPTCODE)
                    ,REFPRCODE      = coalesce(P_REFPRCODE,REFPRCODE)
                    ,REFDOCNO       = coalesce(P_REFDOCNO,REFDOCNO)
                    ,REFPKGCODE     = coalesce(P_REFPKGCODE,REFPKGCODE)
                    ,ONHOLD_DOCUMENT= P_ONHOLD_DOCUMENT
                    ,ADMOU_CODE     = coalesce(P_ADMOU_CODE,ADMOU_CODE)
                    ,ADMSITE_CODE   = coalesce(P_ADMSITE_CODE,ADMSITE_CODE)
                    ,TRANSIT_SOURCE_ADMSITE_CODE = coalesce(P_TS_SITECODE,TRANSIT_SOURCE_ADMSITE_CODE)
                    ,PSITE_STOCKPOINT_CODE = coalesce(P_PSITE_STKPT_CODE,PSITE_STOCKPOINT_CODE)
            WHERE
                   ENTTYPE = P_ENTTYPE
            AND
                   ENTCODE = P_ENTCODE;
        END IF;
    END;

"""
  arguments = <
    {
      name = p_entcode
      type = text
      mode = IN
    }

    {
      name = p_entno
      type = bigint
      mode = IN
    }

    {
      name = p_entdt
      type = timestamp without time zone
      mode = IN
    }

    {
      name = p_enttype
      type = text
      mode = IN
    }

    {
      name = p_loccode
      type = bigint
      mode = IN
    }

    {
      name = p_ycode
      type = bigint
      mode = IN
    }

    {
      name = p_refpcode
      type = bigint
      mode = IN
    }

    {
      name = p_refloccode
      type = bigint
      mode = IN
    }

    {
      name = p_refcmpcode
      type = bigint
      mode = IN
    }

    {
      name = p_refglcode
      type = bigint
      mode = IN
    }

    {
      name = p_refdeptcode
      type = bigint
      mode = IN
    }

    {
      name = p_refprcode
      type = bigint
      mode = IN
    }

    {
      name = p_refdocno
      type = text
      mode = IN
    }

    {
      name = p_refpkgcode
      type = bigint
      mode = IN
    }

    {
      name = p_scheme_docno
      type = text
      mode = IN
      default = NULL::text
    }

    {
      name = p_onhold_document
      type = text
      mode = IN
      default = NULL::text
    }

    {
      name = p_admou_code
      type = bigint
      mode = IN
      default = NULL::bigint
    }

    {
      name = p_admsite_code
      type = bigint
      mode = IN
      default = NULL::bigint
    }

    {
      name = p_ts_sitecode
      type = bigint
      mode = IN
      default = NULL::bigint
    }

    {
      name = p_psite_stkpt_code
      type = text
      mode = IN
      default = NULL::text
    }

  >
  language = plpgsql
}

procedure "main"."db_pkg_stock$reflect(text, text, text, bigint, timestamp without time zone, text, bigint, bigint, text, text, numeric, numeric, numeric, numeric, bigint, bigint, bigint, bigint, bigint, bigint, text, bigint, bigint, double, text, text, text, text, bigint, text, text, numeric, bigint, text, numeric, numeric, numeric, numeric, text, numeric, numeric, numeric, bigint, numeric, bigint, double, text, text, text, timestamp without time zone, timestamp without time zone, bigint)" {
  text = """

DECLARE

        ERRCODE  varchar(50);
        ERRMSG   varchar(2000);

        V_FIFO_LEVEL char(1);
		
BEGIN
        PERFORM set_config('db_pkg_stock.l_type', P_TYPE, false);
        PERFORM set_config('db_pkg_stock.l_detail_code', P_CODE, false);
        PERFORM set_config('db_pkg_stock.l_entcode', P_ENTCODE, false);
        PERFORM set_config('db_pkg_stock.l_entno', P_ENTNO, false);
        PERFORM set_config('db_pkg_stock.l_scheme_docno', P_SCHEME_DOCNO, false);
        PERFORM set_config('db_pkg_stock.l_entdt', P_ENTDT::TEXT, false);
        PERFORM set_config('db_pkg_stock.l_enttype', P_ENTTYPE, false);
        PERFORM set_config('db_pkg_stock.l_loccode', P_LOCCODE, false);
        PERFORM set_config('db_pkg_stock.l_ycode', P_YCODE, false);
        PERFORM set_config('db_pkg_stock.l_new_icode', P_NEW_ICODE, false);
        PERFORM set_config('db_pkg_stock.l_old_icode', P_OLD_ICODE, false);
        PERFORM set_config('db_pkg_stock.l_new_rate', COALESCE(P_NEW_RATE,0), false);
        PERFORM set_config('db_pkg_stock.l_old_rate', COALESCE(P_OLD_RATE,0), false);
        PERFORM set_config('db_pkg_stock.l_refpcode', P_REFPCODE, false);
        PERFORM set_config('db_pkg_stock.l_refsitecode', P_REFSITECODE, false);
        PERFORM set_config('db_pkg_stock.l_refloccode', P_REFLOCCODE, false);
        PERFORM set_config('db_pkg_stock.l_refcmpcode', P_REFCMPCODE, false);
        PERFORM set_config('db_pkg_stock.l_refglcode', P_REFGLCODE, false);
        PERFORM set_config('db_pkg_stock.l_refdeptcode', P_REFDEPTCODE, false);
        PERFORM set_config('db_pkg_stock.l_refprcode', P_REFPRCODE, false);
        PERFORM set_config('db_pkg_stock.l_refdocno', P_REFDOCNO, false);
        PERFORM set_config('db_pkg_stock.l_refpkgcode', P_REFPKGCODE, false);
        PERFORM set_config('db_pkg_stock.l_refdccode', P_REFDCCODE, false);
        PERFORM set_config('db_pkg_stock.l_other_rate', COALESCE(P_OTHER_RATE,0)::numeric, false);
        PERFORM set_config('db_pkg_stock.l_subenttype', P_SUBENTTYPE, false);
        PERFORM set_config('db_pkg_stock.l_upd_cost', P_UPD_COST, false);
        PERFORM set_config('db_pkg_stock.l_item_remarks', P_ITEM_REMARKS, false);
        PERFORM set_config('db_pkg_stock.l_issecondary', P_ISSECONDARY, false);
        PERFORM set_config('db_pkg_stock.l_site_upd_cost', P_SITE_UPD_COST, false);
        PERFORM set_config('db_pkg_stock.l_site_costrate', COALESCE(P_SITE_COSTRATE,0)::numeric, false);
        PERFORM set_config('db_pkg_stock.l_ts_sitecode', COALESCE(P_TS_SITECODE,0), false);
        PERFORM set_config('db_pkg_stock.l_psite_stkpt_code', P_PSITE_STKPT_CODE, false);
        PERFORM set_config('db_pkg_stock.l_promoamt', COALESCE(P_PROMOAMT,0), false);
        PERFORM set_config('db_pkg_stock.l_discountamt', COALESCE(P_DISCOUNTAMT,0), false);
        PERFORM set_config('db_pkg_stock.l_extaxamt', COALESCE(P_EXTAXAMT,0), false);
        PERFORM set_config('db_pkg_stock.l_taxamt', COALESCE(P_TAXAMT,0), false);
        PERFORM set_config('db_pkg_stock.l_channeltype', P_CHANNELTYPE, false);
        PERFORM set_config('db_pkg_stock.l_shipchg', COALESCE(P_SHIPCHG,0), false);
        PERFORM set_config('db_pkg_stock.l_codchg', COALESCE(P_CODCHG,0), false);
        PERFORM set_config('db_pkg_stock.l_gwchg', COALESCE(P_GWCHG,0), false);
        PERFORM set_config('db_pkg_stock.l_invbin_code', P_INVBIN_CODE, false);
        PERFORM set_config('db_pkg_stock.l_reserve_qty', COALESCE(P_RESERVE_QTY,0), false);
        PERFORM set_config('db_pkg_stock.l_ref_family_code', P_REF_FAMILY_CODE, false);
        PERFORM set_config('db_pkg_stock.l_costrate', COALESCE(P_COSTRATE,0)::numeric, false);
        PERFORM set_config('db_pkg_stock.l_promocode', P_PROMOCODE, false);
        PERFORM set_config('db_pkg_stock.l_promono', P_PROMONO, false);
        PERFORM set_config('db_pkg_stock.l_promoname', P_PROMONAME, false);
        PERFORM set_config('db_pkg_stock.l_promostartdate', P_PROMOSTARTDATE::TEXT, false);
        PERFORM set_config('db_pkg_stock.l_promoenddate', P_PROMOENDDATE::TEXT, false);
        PERFORM set_config('db_pkg_stock.l_batch_serial_code', P_BATCH_SERIAL_CODE, false);
        IF  P_ENTTYPE IN ('GRT','PRI','DCO','DIS','PCO','STO','TFS','SAL','PIS','PTO','MIS','DSO', 'OUO','WTO','BTO', 'RES') THEN
            PERFORM set_config('db_pkg_stock.l_new_qty', coalesce(P_NEW_QTY,0) * -1, false);
            PERFORM set_config('db_pkg_stock.l_old_qty', coalesce(P_OLD_QTY,0) * -1, false);
        ELSE
            PERFORM set_config('db_pkg_stock.l_new_qty', coalesce(P_NEW_QTY,0), false);
            PERFORM set_config('db_pkg_stock.l_old_qty', coalesce(P_OLD_QTY,0), false);
        END IF;

        V_FIFO_LEVEL := DB_PKG_COST_CALCULATION$CHECK_ENTTYPE(NULLIF(current_setting('db_pkg_stock.l_enttype'),'')::TEXT,
															  NULLIF(current_setting('db_pkg_stock.l_subenttype'),'')::TEXT,
															  NULLIF(current_setting('db_pkg_stock.l_new_qty'),'')::numeric(20,3),'IN','C');

        IF  V_FIFO_LEVEL = 'C' THEN
            PERFORM set_config('db_pkg_stock.l_upd_cost', coalesce(NULLIF(current_setting('db_pkg_stock.l_upd_cost'),'')::CHARACTER(1),'Y'), false);
        END IF;

        V_FIFO_LEVEL := DB_PKG_COST_CALCULATION$CHECK_ENTTYPE(NULLIF(current_setting('db_pkg_stock.l_enttype'),'')::TEXT,
															  NULLIF(current_setting('db_pkg_stock.l_subenttype'),'')::TEXT,
															  NULLIF(current_setting('db_pkg_stock.l_new_qty'),'')::numeric(20,3),'IN','S');

        IF  V_FIFO_LEVEL = 'S' THEN
            PERFORM set_config('db_pkg_stock.l_site_upd_cost', coalesce(NULLIF(current_setting('db_pkg_stock.l_site_upd_cost'),'')::CHARACTER(1),'Y'), false);
        END IF;

        IF  NULLIF(current_setting('db_pkg_stock.l_ycode'),'')::BIGINT <> 1 THEN
            CASE P_TYPE
            WHEN 'INSERTING' THEN
                    PERFORM set_config('db_pkg_stock.l_stockcode', NULL, false);
                    CALL db_pkg_stock$pro_for_new();
            WHEN 'UPDATING' THEN
                    CALL db_pkg_stock$pro_for_old();
                    CALL db_pkg_stock$pro_for_new();
            WHEN 'DELETING' THEN
                    CALL db_pkg_stock$pro_for_old();

                    PERFORM set_config('db_pkg_stock.l_stockcode', NULL, false);
            END CASE;
        END IF;
    EXCEPTION
        WHEN OTHERS THEN
        ERRCODE := SQLSTATE;
        ERRMSG     := SQLERRM;
        CALL ERRAUDIT(USER,'DB_REFLECT_STOCK',ERRCODE,P_ENTTYPE||' : '||P_TYPE||' : '||P_ENTCODE||' : '||ERRMSG);
        --CALL ERRAUDIT ('X','X','Y',ERRMSG);
		RAISE EXCEPTION '%', 'Unable to update stock : '||ERRMSG USING ERRCODE = '45200';
    END;

"""
  arguments = <
    {
      name = p_code
      type = text
      mode = IN
    }

    {
      name = p_type
      type = text
      mode = IN
    }

    {
      name = p_entcode
      type = text
      mode = IN
    }

    {
      name = p_entno
      type = bigint
      mode = IN
    }

    {
      name = p_entdt
      type = timestamp without time zone
      mode = IN
    }

    {
      name = p_enttype
      type = text
      mode = IN
    }

    {
      name = p_loccode
      type = bigint
      mode = IN
    }

    {
      name = p_ycode
      type = bigint
      mode = IN
    }

    {
      name = p_new_icode
      type = text
      mode = IN
    }

    {
      name = p_old_icode
      type = text
      mode = IN
    }

    {
      name = p_new_qty
      type = numeric
      mode = IN
    }

    {
      name = p_old_qty
      type = numeric
      mode = IN
    }

    {
      name = p_new_rate
      type = numeric
      mode = IN
    }

    {
      name = p_old_rate
      type = numeric
      mode = IN
    }

    {
      name = p_refpcode
      type = bigint
      mode = IN
    }

    {
      name = p_refloccode
      type = bigint
      mode = IN
    }

    {
      name = p_refcmpcode
      type = bigint
      mode = IN
    }

    {
      name = p_refglcode
      type = bigint
      mode = IN
    }

    {
      name = p_refdeptcode
      type = bigint
      mode = IN
    }

    {
      name = p_refprcode
      type = bigint
      mode = IN
    }

    {
      name = p_refdocno
      type = text
      mode = IN
    }

    {
      name = p_refpkgcode
      type = bigint
      mode = IN
    }

    {
      name = p_refdccode
      type = bigint
      mode = IN
    }

    {
      name = p_other_rate
      type = double precision
      mode = IN
    }

    {
      name = p_scheme_docno
      type = text
      mode = IN
      default = NULL::text
    }

    {
      name = p_subenttype
      type = text
      mode = IN
      default = NULL::text
    }

    {
      name = p_upd_cost
      type = text
      mode = IN
      default = NULL::text
    }

    {
      name = p_item_remarks
      type = text
      mode = IN
      default = NULL::text
    }

    {
      name = p_refsitecode
      type = bigint
      mode = IN
      default = NULL::bigint
    }

    {
      name = p_issecondary
      type = text
      mode = IN
      default = NULL::text
    }

    {
      name = p_site_upd_cost
      type = text
      mode = IN
      default = NULL::text
    }

    {
      name = p_site_costrate
      type = numeric
      mode = IN
      default = NULL::numeric
    }

    {
      name = p_ts_sitecode
      type = bigint
      mode = IN
      default = NULL::bigint
    }

    {
      name = p_psite_stkpt_code
      type = text
      mode = IN
      default = NULL::text
    }

    {
      name = p_promoamt
      type = numeric
      mode = IN
      default = NULL::numeric(20,2)
    }

    {
      name = p_discountamt
      type = numeric
      mode = IN
      default = NULL::numeric(20,2)
    }

    {
      name = p_extaxamt
      type = numeric
      mode = IN
      default = NULL::numeric(20,2)
    }

    {
      name = p_taxamt
      type = numeric
      mode = IN
      default = NULL::numeric(20,2)
    }

    {
      name = p_channeltype
      type = text
      mode = IN
      default = NULL::text
    }

    {
      name = p_shipchg
      type = numeric
      mode = IN
      default = NULL::numeric(20,2)
    }

    {
      name = p_codchg
      type = numeric
      mode = IN
      default = NULL::numeric(20,2)
    }

    {
      name = p_gwchg
      type = numeric
      mode = IN
      default = NULL::numeric(20,2)
    }

    {
      name = p_invbin_code
      type = bigint
      mode = IN
      default = NULL::bigint
    }

    {
      name = p_reserve_qty
      type = numeric
      mode = IN
      default = 0
    }

    {
      name = p_ref_family_code
      type = bigint
      mode = IN
      default = NULL::bigint
    }

    {
      name = p_costrate
      type = double precision
      mode = IN
      default = NULL::numeric
    }

    {
      name = p_promocode
      type = text
      mode = IN
      default = NULL::text
    }

    {
      name = p_promono
      type = text
      mode = IN
      default = NULL::text
    }

    {
      name = p_promoname
      type = text
      mode = IN
      default = NULL::text
    }

    {
      name = p_promostartdate
      type = timestamp without time zone
      mode = IN
      default = NULL::timestamp without time zone
    }

    {
      name = p_promoenddate
      type = timestamp without time zone
      mode = IN
      default = NULL::timestamp without time zone
    }

    {
      name = p_batch_serial_code
      type = bigint
      mode = IN
      default = NULL::bigint
    }

  >
  language = plpgsql
}

