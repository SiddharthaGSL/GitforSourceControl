procedure "main"."int$pkg_createpo_calculate_term(bigint, bigint)" {
  text = """

DECLARE

      dummy_appamt      double precision;
      v_item_chg        double precision;
      dummy_totchgamt   double precision;
      dummy_chkchgamt   double precision;
      dummy_chk         char(1);
      dummy_prvchk      char(1);
      dummy_sign        char(1);
      v_tot_grsamt      double precision;

      c1 CURSOR FOR
           SELECT d.purtermmain_code purtermcode,
                  d.chgcode,
                  coalesce(d.rate, 0)   rate,
                  d.formulae,
                  LENGTH(d.formulae) formlen,
                  d.SIGN,
                  g.formcode,
                  g.roundoff,
                  d.seq,
                  g.basis,
                  d.operation_level,
                  g.istax,
                  g.source
             FROM purtermdet d, finchg g
            WHERE     d.chgcode = g.chgcode
                  AND purtermmain_code = p_purtermcode
                  AND d.operation_level = 'H'
         ORDER BY d.seq;

BEGIN
      DELETE FROM purordchg
       WHERE ordcode = p_ordcode AND operation_level = 'H';

      SELECT SUM (
                  ROUND ( (coalesce(a.ordqty, 0) * coalesce(a.rate, 0)), 2)
                - coalesce(a.discount, 0))
        INTO STRICT v_tot_grsamt
        FROM purorddet a
       WHERE ordcode = p_ordcode;

      -- ADJUST ITEM CHARGE FROM GRSAMT
      BEGIN
         SELECT SUM(chgamt)
           INTO STRICT v_item_chg
           FROM purordchg_item
          WHERE ordcode = p_ordcode;
      EXCEPTION
         WHEN no_data_found
         THEN
            v_item_chg := 0;
      END;

      FOR c1rec IN c1
      LOOP
         dummy_totchgamt := 0;

         FOR i IN 1 .. c1rec.formlen
         LOOP
            IF MOD(i, 2) != 0
            THEN
               dummy_chk := SUBSTR(c1rec.formulae, i, 1);
               dummy_chkchgamt := 0;

               IF dummy_chk = 'B'
               THEN
                  dummy_chkchgamt :=
                     coalesce(v_tot_grsamt, 0) + coalesce(v_item_chg, 0);
               ELSE
                  BEGIN
                     SELECT g.chgamt
                       INTO STRICT dummy_chkchgamt
                       FROM purtermdet d, purordchg g
                      WHERE     d.chgcode = g.chgcode
                            AND g.ordcode = p_ordcode
                            AND d.purtermmain_code = c1rec.purtermcode
                            AND d.operation_level = 'H'
                            AND d.seq = (dummy_chk)::numeric;
                  EXCEPTION
                     WHEN no_data_found
                     THEN
                        dummy_chkchgamt := 0;
                  END;
               END IF;

               dummy_prvchk := SUBSTR(c1rec.formulae, i - 1, 1);

               IF dummy_prvchk = '+'
               THEN
                  dummy_totchgamt :=
                     dummy_totchgamt + coalesce(dummy_chkchgamt, 0);
               ELSIF dummy_prvchk = '-'
               THEN
                  dummy_totchgamt :=
                     dummy_totchgamt - coalesce(dummy_chkchgamt, 0);
               ELSE
                  dummy_totchgamt := coalesce(dummy_chkchgamt, 0);
               END IF;
            END IF;
         END LOOP;

         dummy_appamt := dummy_totchgamt;

         IF c1rec.basis = 'P'
         THEN
            dummy_totchgamt :=
               ROUND ( ( (c1rec.rate / 100) * coalesce(dummy_totchgamt, 0)), 2);
         ELSE
            dummy_totchgamt := round((c1rec.rate)::numeric, 2);
         END IF;

         IF c1rec.SIGN = '-' AND dummy_totchgamt >= 0
         THEN
            dummy_totchgamt := -1 * coalesce(dummy_totchgamt, 0);
         END IF;

         dummy_sign := c1rec.SIGN;

         IF c1rec.roundoff = 'Y'
         THEN
            dummy_totchgamt := ROUND(dummy_totchgamt);
         END IF;

         INSERT INTO purordchg(ordcode,
                                seq,
                                chgcode,
                                rate,
                                SIGN,
                                chgamt,
                                basis,
                                appamt,
                                formulae,
                                operation_level,
                                istax,
                                source,
                                without_term_formula)
              VALUES (p_ordcode,
                      c1rec.seq,
                      c1rec.chgcode,
                      c1rec.rate,
                      dummy_sign,
                      dummy_totchgamt,
                      c1rec.basis,
                      dummy_appamt,
                      c1rec.formulae,
                      c1rec.operation_level,
                      c1rec.istax,
                      c1rec.source,
                      'N');
      END LOOP;
   EXCEPTION
      WHEN OTHERS
      THEN
         NULL;
   END;

"""
  arguments = <
    {
      name = p_ordcode
      type = bigint
      mode = IN
    }

    {
      name = p_purtermcode
      type = bigint
      mode = IN
    }

  >
  language = plpgsql
}

