procedure "main"."db_pro_upload_emg_data(text, bigint, text, text, text, double)" {
  text = """

DECLARE

   C100 CURSOR(
      PDTFR    timestamp(0),
      PDTTO    timestamp(0))
   IS
      -- start rev : 002
      SELECT    QUERY_RESULT
      from
      (
       --+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
       --CONSOLIDATED
       --+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
       -- start rev : 002
       SELECT   'ENTRY_SOURCE,ENTRY_SITE,ENTRY_DATE,ENTRY_NO,ENTRY_TRADETYPE,ENTRY_NETVALUE,REF_DOC_NO,REF_DOC_DATE,GST_APPLICABILITY,ETIN,CP_GSTIN_NO,CP_GSTIN_STATE_CODE,CP_GSTIN_REGISTRATION_DATE,CP_GST_REGISTRATION_STATUS,CP_NAME,CP_PAN,CP_CONTACT_PERSON,CP_MOBILE,CP_EMAIL,CP_CLASS,CP_AGENT_NAME,CP_AGENT_CLASS,ORIGINAL_INV_ENT_NO,ORIGINAL_INV_ENT_DT,ORIGINAL_INV_ENT_NETVALUE,ORIGINAL_INV_REFNO,ORIGINAL_INV_REFDT,DNCN_REASON,HSN_SAC_CODE,HSN_SAC_DESC,UOM,CGST_RATE,SGST_RATE,IGST_RATE,CESS_RATE,TOTAL_TAXRATE,QUANTITY,TAXABLE_AMOUNT,CGST_AMOUNT,SGST_AMOUNT,IGST_AMOUNT,CESS_AMOUNT,NET_AMOUNT,INPUT_ELIGIBILITY,INPUT_CGST_AMOUNT,INPUT_SGST_AMOUNT,INPUT_IGST_AMOUNT,INPUT_CESS_AMOUNT'
                            QUERY_RESULT,
                '1'         order_by_col
       
       
union all

       SELECT   REPLACE(REPLACE(QUERY_RESULT,',',' '),'|',',')  QUERY_RESULT,
                '2'                                             order_by_col
       FROM     (
                   -- end rev : 002
                   SELECT    DATA.ENTRY_SOURCE
                          || '|'
                          || DATA.ENTRY_SITE
                          || '|'
                          || DATA.ENTRY_DATE
                          || '|'
                          || DATA.ENTRY_NO
                          || '|'
                          || TG.NAME
                          || '|'
                          || DATA.ENTRY_NETVALUE::TEXT
                          || '|'
                          || REPLACE(DATA.REF_DOC_NO, '|', ' ')
                          || '|'
                          || DATA.REF_DOC_DATE
                          || '|'
                          || DATA.GST_APPLICABILITY
                          || '|'
                          || DATA.ETIN
                          || '|'
                          || CASE
                                WHEN(    DATA.GST_APPLICABILITY IN ('INWARD SUPPLY',
                                                 'PURCHASE DEBIT NOTE',
                                                 'PURCHASE CREDIT NOTE')
                                         AND DATA.CP_GSTIN_REGISTRATION_DATE >
                                                coalesce(REF_DOC_DATE, DATA.ENTRY_DATE))
                                     OR (    DATA.GST_APPLICABILITY NOT IN ('INWARD SUPPLY',
                                                 'PURCHASE DEBIT NOTE',
                                                 'PURCHASE CREDIT NOTE')
                                         AND DATA.CP_GSTIN_REGISTRATION_DATE >
                                                DATA.ENTRY_DATE)
                                THEN
                                   NULL
                                ELSE
                                   DATA.CP_GSTIN_NO
                             END
                          || '|'
                          || coalesce(DATA.CP_GSTIN_STATE_CODE, SUBSTR(PGSTIN, 1, 2))
                          || '|'
                          || CASE
                                WHEN(    DATA.GST_APPLICABILITY IN ('INWARD SUPPLY',
                                                 'PURCHASE DEBIT NOTE',
                                                 'PURCHASE CREDIT NOTE')
                                         AND DATA.CP_GSTIN_REGISTRATION_DATE >
                                                coalesce(REF_DOC_DATE, DATA.ENTRY_DATE))
                                     OR (    DATA.GST_APPLICABILITY NOT IN ('INWARD SUPPLY',
                                                 'PURCHASE DEBIT NOTE',
                                                 'PURCHASE CREDIT NOTE')
                                         AND DATA.CP_GSTIN_REGISTRATION_DATE >
                                                DATA.ENTRY_DATE)
                                THEN
                                   NULL
                                ELSE
                                   DATA.CP_GSTIN_REGISTRATION_DATE
                             END
                          || '|'
                          || CASE
                                WHEN(    DATA.GST_APPLICABILITY IN ('INWARD SUPPLY',
                                                 'PURCHASE DEBIT NOTE',
                                                 'PURCHASE CREDIT NOTE')
                                         AND DATA.CP_GSTIN_REGISTRATION_DATE >
                                                coalesce(REF_DOC_DATE, DATA.ENTRY_DATE))
                                     OR (    DATA.GST_APPLICABILITY NOT IN ('INWARD SUPPLY',
                                                 'PURCHASE DEBIT NOTE',
                                                 'PURCHASE CREDIT NOTE')
                                         AND DATA.CP_GSTIN_REGISTRATION_DATE >
                                                DATA.ENTRY_DATE)
                                THEN
                                   'Unregistered'
                                ELSE
                                   CASE
                                      WHEN DATA.CP_CODE IS NULL
                                      THEN
                                         DATA.CP_GST_REGISTRATION_STATUS
                                      ELSE
                                         CP.GST_CATEGORY
                                   END
                             END
                          || '|'
                          || CASE
                                WHEN DATA.CP_CODE IS NULL THEN DATA.CP_NAME
                                ELSE CP.NAME
                             END
                          || '|'
                          || CASE
                                WHEN DATA.CP_CODE IS NULL THEN DATA.CP_PAN
                                ELSE CP.PAN
                             END
                          || '|'
                          || CASE
                                WHEN DATA.CP_CODE IS NULL THEN DATA.CP_CONTACT_PERSON
                                ELSE CP.BILLING_CONTACT_PERSON
                             END
                          || '|'
                          || CASE
                                WHEN DATA.CP_CODE IS NULL THEN DATA.CP_MOBILE
                                ELSE CP.BILLING_MOBILE
                             END
                          || '|'
                          || CASE
                                WHEN DATA.CP_CODE IS NULL THEN DATA.CP_EMAIL
                                ELSE CP.BILLING_EMAIL1
                             END
                          || '|'
                          || CASE
                                WHEN DATA.CP_CODE IS NULL THEN DATA.CP_CLASS
                                ELSE CP.CLASS_NAME
                             END
                          || '|'
                          || CASE
                                WHEN DATA.CP_CODE IS NULL THEN DATA.CP_AGENT_NAME
                                ELSE AGENT.NAME
                             END
                          || '|'
                          || CASE
                                WHEN DATA.CP_CODE IS NULL THEN DATA.CP_AGENT_CLASS
                                ELSE AGENT.CLASS_NAME
                             END
                          || '|'
                          || REPLACE(DATA.ORIGINAL_INV_ENT_NO, '.', '')
                          || '|'
                          || DATA.ORIGINAL_INV_ENT_DT
                          || '|'
                          || DATA.ORIGINAL_INV_ENT_NETVALUE::TEXT
                          || '|'
                          || DATA.ORIGINAL_INV_REFNO
                          || '|'
                          || DATA.ORIGINAL_INV_REFDT
                          || '|'
                          || DATA.DNCN_REASON
                          || '|'
                          || CASE
                                WHEN UPPER(DATA.HSN_SAC_CODE) IN ('NON-GST GOODS',
                                                                   'NON-GST SERVICES',
                                                                   'NON-GST',
                                                                   'NON GST')
                                THEN
                                   'NON GST'
                                ELSE
                                   REPLACE(
                                      REPLACE(REPLACE(DATA.HSN_SAC_CODE, '|', ' '),
                                               ' ',
                                               ''),
                                      '-',
                                      '')
                             END
                          || '|'
                          || REPLACE(DATA.HSN_SAC_DESC, '|', ' ')
                          || '|'
                          || DATA.UOM
                          || '|'
                          || DATA.CGST_RATE::TEXT
                          || '|'
                          || DATA.SGST_RATE::TEXT
                          || '|'
                          || DATA.IGST_RATE::TEXT
                          || '|'
                          || DATA.CESS_RATE::TEXT
                          || '|'
                          || DATA.TOTAL_TAXRATE::TEXT
                          || '|'
                          || DATA.QUANTITY::TEXT
                          || '|'
                          || DATA.TAXABLE_AMOUNT::TEXT
                          || '|'
                          || DATA.CGST_AMOUNT::TEXT
                          || '|'
                          || DATA.SGST_AMOUNT::TEXT
                          || '|'
                          || DATA.IGST_AMOUNT::TEXT
                          || '|'
                          || DATA.CESS_AMOUNT::TEXT
                          || '|'
                          || DATA.NET_AMOUNT::TEXT
                          || '|'
                          || DATA.INPUT_ELIGIBILITY
                          || '|'
                          || DATA.INPUT_CGST_AMOUNT::TEXT
                          || '|'
                          || DATA.INPUT_SGST_AMOUNT::TEXT
                          || '|'
                          || DATA.INPUT_IGST_AMOUNT::TEXT
                          || '|'
                          || DATA.INPUT_CESS_AMOUNT::TEXT
                             QUERY_RESULT
                     FROM (  SELECT CASE
                                       WHEN MAIN.SALETYPE = 'C' THEN 'SND: TRANSFER OUT'
                                       ELSE 'SND: SALES INVOICE'
                                    END
                                       ENTRY_SOURCE,
                                    OWNERSITE.NAME              ENTRY_SITE,
                                    MAIN.INVDT                  ENTRY_DATE,
                                    MAIN.SCHEME_DOCNO           ENTRY_NO,
                                    MAIN.SALTRADEGRP_CODE       ENTRY_TRADETYPECODE,
                                    MAIN.NETAMT                 ENTRY_NETVALUE,
                                    MAIN.DOCNO                  REF_DOC_NO,
                                    MAIN.DOCDT                  REF_DOC_DATE,
                                    CASE
                                       WHEN MAIN.GSTAPPL = 'Y' THEN 'OUTWARD SUPPLY'
                                       ELSE 'OTHER OUTWARD SUPPLY'
                                    END
                                       GST_APPLICABILITY,
                                    NULL                        ETIN,
                                    REFSITE.GST_IDENTIFICATION_NO CP_GSTIN_NO,
                                    REFSITE.GST_STATE_CODE      CP_GSTIN_STATE_CODE,
                                    REFSITE.GST_REGISTRATION_DATE
                                       CP_GSTIN_REGISTRATION_DATE,
                                    CASE
                                       WHEN MAIN.SALETYPE = 'C' THEN NULL
                                       ELSE MAIN.PCODE
                                    END
                                       CP_CODE, -- For sales invoice, counter party information will be picked up in outer query
                                    CASE
                                       WHEN MAIN.SALETYPE = 'C' THEN 'Normal Registered'
                                       ELSE NULL
                                    END
                                       CP_GST_REGISTRATION_STATUS,
                                    CASE
                                       WHEN MAIN.SALETYPE = 'C' THEN OU.NAME
                                       ELSE NULL
                                    END
                                       CP_NAME,
                                    CASE WHEN MAIN.SALETYPE = 'C' THEN OU.PAN ELSE NULL END
                                       CP_PAN,
                                    CASE
                                       WHEN MAIN.SALETYPE = 'C' THEN OU.CONTACT_PERSON
                                       ELSE NULL
                                    END
                                       CP_CONTACT_PERSON,
                                    CASE
                                       WHEN MAIN.SALETYPE = 'C' THEN OU.MOBILE
                                       ELSE NULL
                                    END
                                       CP_MOBILE,
                                    CASE
                                       WHEN MAIN.SALETYPE = 'C' THEN OU.EMAIL1
                                       ELSE NULL
                                    END
                                       CP_EMAIL,
                                    NULL                        CP_CLASS,
                                    NULL                        CP_AGENT_NAME,
                                    NULL                        CP_AGENT_CLASS,
                                    NULL                        ORIGINAL_INV_ENT_NO,
                                    NULL                        ORIGINAL_INV_ENT_DT,
                                    NULL                        ORIGINAL_INV_ENT_NETVALUE,
                                    NULL                        ORIGINAL_INV_REFNO,
                                    NULL                        ORIGINAL_INV_REFDT,
                                    NULL                        DNCN_REASON,
                                    ITEM.HSN_CODE               HSN_SAC_CODE,
                                    ITEM.HSN_DESCRIPTION        HSN_SAC_DESC,
                                    ITEM.UOM                    UOM,
                                    TAX.CGST_RATE               CGST_RATE,
                                    TAX.SGST_RATE               SGST_RATE,
                                    TAX.IGST_RATE               IGST_RATE,
                                    TAX.CESS_RATE               CESS_RATE,
                                    TAX.CGST_RATE + TAX.SGST_RATE + TAX.IGST_RATE
                                       TOTAL_TAXRATE,
                                    SUM(DET.INVQTY)            QUANTITY,
                                    SUM(TAX.TAXABLE_AMOUNT)    TAXABLE_AMOUNT,
                                    SUM(TAX.CGST_AMOUNT)       CGST_AMOUNT,
                                    SUM(TAX.SGST_AMOUNT)       SGST_AMOUNT,
                                    SUM(TAX.IGST_AMOUNT)       IGST_AMOUNT,
                                    SUM(TAX.CESS_AMOUNT)       CESS_AMOUNT,
                                    SUM(
                                         coalesce(DET.INVAMT, 0)
                                       + coalesce(DET.CHGAMT, 0)
                                       + coalesce(DET.TAXAMT, 0))
                                       NET_AMOUNT,
                                    NULL                        INPUT_ELIGIBILITY,
                                    NULL                        INPUT_CGST_AMOUNT,
                                    NULL                        INPUT_SGST_AMOUNT,
                                    NULL                        INPUT_IGST_AMOUNT,
                                    NULL                        INPUT_CESS_AMOUNT
                               FROM ginview.lv_site ownersite, salinvmain main, ginview.lv_item item, salinvdet det
LEFT OUTER JOIN (  SELECT SALINVDET_CODE,
                                              APPAMT            TAXABLE_AMOUNT,
                                              SUM(coalesce(CHGAMT, 0)) TAX_CHARGE_AMOUNT,
                                              SUM(
                                                 CASE
                                                    WHEN GST_COMPONENT = 'CGST' THEN RATE
                                                    ELSE 0
                                                 END)
                                                 CGST_RATE,
                                              SUM(
                                                 CASE
                                                    WHEN GST_COMPONENT = 'CGST' THEN CHGAMT
                                                    ELSE 0
                                                 END)
                                                 CGST_AMOUNT,
                                              SUM(
                                                 CASE
                                                    WHEN GST_COMPONENT = 'SGST' THEN RATE
                                                    ELSE 0
                                                 END)
                                                 SGST_RATE,
                                              SUM(
                                                 CASE
                                                    WHEN GST_COMPONENT = 'SGST' THEN CHGAMT
                                                    ELSE 0
                                                 END)
                                                 SGST_AMOUNT,
                                              SUM(
                                                 CASE
                                                    WHEN GST_COMPONENT = 'IGST' THEN RATE
                                                    ELSE 0
                                                 END)
                                                 IGST_RATE,
                                              SUM(
                                                 CASE
                                                    WHEN GST_COMPONENT = 'IGST' THEN CHGAMT
                                                    ELSE 0
                                                 END)
                                                 IGST_AMOUNT,
                                              SUM(
                                                 CASE
                                                    WHEN GST_COMPONENT = 'CESS' THEN RATE
                                                    ELSE 0
                                                 END)
                                                 CESS_RATE,
                                              SUM(
                                                 CASE
                                                    WHEN GST_COMPONENT = 'CESS' THEN CHGAMT
                                                    ELSE 0
                                                 END)
                                                 CESS_AMOUNT
                                         FROM SALINVCHG_ITEM
                                        WHERE SOURCE = 'G'
                                     GROUP BY SALINVDET_CODE, APPAMT) tax ON (DET.CODE = TAX.SALINVDET_CODE)
, ginview.lv_site refsite
LEFT OUTER JOIN admou ou ON (REFSITE.ADMOU_CODE = OU.CODE)
WHERE MAIN.INVCODE = DET.INVCODE  AND MAIN.ADMSITE_CODE_OWNER = OWNERSITE.SITECODE AND MAIN.ADMSITE_CODE = REFSITE.SITECODE  AND DET.ICODE = ITEM.ITEM_CODE AND MAIN.INVDT BETWEEN PDTFR AND PDTTO AND OWNERSITE.GST_IDENTIFICATION_NO = PGSTIN AND coalesce(UPPER(MAIN.RELEASE_STATUS), 'U') = 'P'  -- ONLY POSTED RECORDS TO BE SYNCED.
  AND coalesce(MAIN.SALTRADEGRP_CODE, 1) <> 4  -- CONSIGNMENT TRANSFERS / LOCAL TRANSFERS WHERE GST IS NOT CHARGED, SHOULDN'T BE SYNCED TO EMG.
 GROUP BY CASE
                                       WHEN MAIN.SALETYPE = 'C' THEN 'SND: TRANSFER OUT'
                                       ELSE 'SND: SALES INVOICE'
                                    END,
                                    OWNERSITE.NAME,
                                    MAIN.INVDT,
                                    MAIN.SCHEME_DOCNO,
                                    MAIN.SALTRADEGRP_CODE,
                                    MAIN.NETAMT,
                                    MAIN.DOCNO,
                                    MAIN.DOCDT,
                                    CASE
                                       WHEN MAIN.GSTAPPL = 'Y' THEN 'OUTWARD SUPPLY'
                                       ELSE 'OTHER OUTWARD SUPPLY'
                                    END,
                                    REFSITE.GST_IDENTIFICATION_NO,
                                    REFSITE.GST_STATE_CODE,
                                    REFSITE.GST_REGISTRATION_DATE,
                                    CASE
                                       WHEN MAIN.SALETYPE = 'C' THEN NULL
                                       ELSE MAIN.PCODE
                                    END,
                                    CASE
                                       WHEN MAIN.SALETYPE = 'C' THEN 'Normal Registered'
                                       ELSE NULL
                                    END,
                                    CASE
                                       WHEN MAIN.SALETYPE = 'C' THEN OU.NAME
                                       ELSE NULL
                                    END,
                                    CASE
                                       WHEN MAIN.SALETYPE = 'C' THEN OU.PAN
                                       ELSE NULL
                                    END,
                                    CASE
                                       WHEN MAIN.SALETYPE = 'C' THEN OU.CONTACT_PERSON
                                       ELSE NULL
                                    END,
                                    CASE
                                       WHEN MAIN.SALETYPE = 'C' THEN OU.MOBILE
                                       ELSE NULL
                                    END,
                                    CASE
                                       WHEN MAIN.SALETYPE = 'C' THEN OU.EMAIL1
                                       ELSE NULL
                                    END,
                                    ITEM.HSN_CODE,
                                    ITEM.HSN_DESCRIPTION,
                                    ITEM.UOM,
                                    TAX.CGST_RATE,
                                    TAX.SGST_RATE,
                                    TAX.IGST_RATE,
                                    TAX.CESS_RATE,
                                    TAX.CGST_RATE + TAX.SGST_RATE + TAX.IGST_RATE
                           
UNION ALL

                             SELECT CASE
                                       WHEN MAIN.SALETYPE = 'C' THEN 'SND: TRANSFER IN'
                                       ELSE 'SND: SALES RETURN'
                                    END
                                       ENTRY_SOURCE,
                                    OWNERSITE.NAME               ENTRY_SITE,
                                    MAIN.RTDT                    ENTRY_DATE,
                                    MAIN.SCHEME_DOCNO            ENTRY_NO,
                                    coalesce(MAIN.SALTRADEGRP_CODE, 6) ENTRY_TRADETYPECODE, -- NULL RECORDS WILL BE TRAPPED IN EMG
                                    MAIN.NETAMT                  ENTRY_NETVALUE,
                                    CASE
                                       WHEN REFSITE.SITE_TYPE LIKE 'MS%'
                                       THEN
                                          coalesce(GRTM.GSTDOCNO, GRTM.DOCNO)
                                       WHEN REFSITE.SITE_TYPE = 'OS-OO-CM'
                                       THEN
                                          TRANSFER.SCHEME_DOCNO
                                       ELSE
                                          MAIN.DOCNO
                                    END
                                       REF_DOC_NO,
                                    CASE
                                       WHEN REFSITE.SITE_TYPE LIKE 'MS%'
                                       THEN
                                          GRTM.DOCDT
                                       WHEN REFSITE.SITE_TYPE = 'OS-OO-CM'
                                       THEN
                                          TRANSFER.INVDT
                                       ELSE
                                          MAIN.DOCDT
                                    END
                                       REF_DOC_DATE,
                                    CASE
                                       WHEN MAIN.GSTAPPL = 'C' THEN 'SALES CREDIT NOTE'
                                       ELSE 'INWARD SUPPLY'
                                    END
                                       GST_APPLICABILITY,
                                    NULL                         ETIN,
                                    REFSITE.GST_IDENTIFICATION_NO CP_GSTIN_NO,
                                    REFSITE.GST_STATE_CODE       CP_GSTIN_STATE_CODE,
                                    REFSITE.GST_REGISTRATION_DATE
                                       CP_GSTIN_REGISTRATION_DATE,
                                    CASE
                                       WHEN MAIN.SALETYPE = 'C' THEN NULL
                                       ELSE MAIN.PCODE
                                    END
                                       CP_CODE,
                                    CASE
                                       WHEN MAIN.SALETYPE = 'C' THEN 'Normal Registered'
                                       ELSE NULL
                                    END
                                       CP_GST_REGISTRATION_STATUS,
                                    CASE
                                       WHEN MAIN.SALETYPE = 'C' THEN OU.NAME
                                       ELSE NULL
                                    END
                                       CP_NAME,
                                    CASE WHEN MAIN.SALETYPE = 'C' THEN OU.PAN ELSE NULL END
                                       CP_PAN,
                                    CASE
                                       WHEN MAIN.SALETYPE = 'C' THEN OU.CONTACT_PERSON
                                       ELSE NULL
                                    END
                                       CP_CONTACT_PERSON,
                                    CASE
                                       WHEN MAIN.SALETYPE = 'C' THEN OU.MOBILE
                                       ELSE NULL
                                    END
                                       CP_MOBILE,
                                    CASE
                                       WHEN MAIN.SALETYPE = 'C' THEN OU.EMAIL1
                                       ELSE NULL
                                    END
                                       CP_EMAIL,
                                    NULL                         CP_CLASS,
                                    NULL                         CP_AGENT_NAME,
                                    NULL                         CP_AGENT_CLASS,
                                    CASE
                                       WHEN MAIN.GSTAPPL = 'C'
                                       THEN
                                          coalesce(ORIGINALINV.SCHEME_DOCNO, MAIN.DOCNO)
                                       ELSE
                                          NULL
                                    END
                                       ORIGINAL_INV_ENT_NO,
                                    CASE
                                       WHEN MAIN.GSTAPPL = 'C'
                                       THEN
                                          coalesce(ORIGINALINV.INVDT, MAIN.DOCDT)
                                       ELSE
                                          NULL
                                    END
                                       ORIGINAL_INV_ENT_DT,
                                    CASE
                                       WHEN MAIN.GSTAPPL = 'C' THEN ORIGINALINV.NETAMT
                                       ELSE NULL
                                    END
                                       ORIGINAL_INV_ENT_NETVALUE,
                                    CASE
                                       WHEN MAIN.GSTAPPL = 'C' THEN ORIGINALINV.DOCNO
                                       ELSE NULL
                                    END
                                       ORIGINAL_INV_REFNO,
                                    CASE
                                       WHEN MAIN.GSTAPPL = 'C' THEN ORIGINALINV.DOCDT
                                       ELSE NULL
                                    END
                                       ORIGINAL_INV_REFDT,
                                    CASE
                                       WHEN MAIN.GSTAPPL = 'C' THEN 'Sales Return'
                                       ELSE NULL
                                    END
                                       DNCN_REASON,
                                    ITEM.HSN_CODE                HSN_SAC_CODE,
                                    ITEM.HSN_DESCRIPTION         HSN_SAC_DESC,
                                    ITEM.UOM                     UOM,
                                    TAX.CGST_RATE                CGST_RATE,
                                    TAX.SGST_RATE                SGST_RATE,
                                    TAX.IGST_RATE                IGST_RATE,
                                    TAX.CESS_RATE                CESS_RATE,
                                    TAX.CGST_RATE + TAX.SGST_RATE + TAX.IGST_RATE
                                       TOTAL_TAXRATE,
                                    SUM(
                                       CASE
                                          WHEN MAIN.GSTAPPL = 'C'
                                          THEN
                                             coalesce(DET.QTY, 0) + coalesce(DET.SHORTEXCESSQTY, 0)
                                          ELSE
                                             DET.QTY
                                       END)
                                       QUANTITY,
                                    SUM(TAX.TAXABLE_AMOUNT)     TAXABLE_AMOUNT,
                                    SUM(TAX.CGST_AMOUNT)        CGST_AMOUNT,
                                    SUM(TAX.SGST_AMOUNT)        SGST_AMOUNT,
                                    SUM(TAX.IGST_AMOUNT)        IGST_AMOUNT,
                                    SUM(TAX.CESS_AMOUNT)        CESS_AMOUNT,
                                    SUM (
                                         (CASE
                                             WHEN MAIN.GSTAPPL = 'C'
                                             THEN (  coalesce(DET.QTY, 0)
                                                   + coalesce(DET.SHORTEXCESSQTY, 0))
                                                * coalesce(DET.RATE, 0)
                                             ELSE
                                                coalesce(DET.QTY, 0) * coalesce(DET.RATE, 0)
                                          END)
                                       + coalesce(TAX.TAX_CHARGE_AMOUNT, 0)
                                       + coalesce(OTX.OTHER_CHARGE_AMOUNT, 0))
                                       NET_AMOUNT,
                                    CASE
                                       WHEN     MAIN.GSTAPPL = 'N'
                                            AND TAX.TAXABLE_AMOUNT IS NOT NULL
                                       THEN
                                          'IP'
                                       ELSE
                                          NULL
                                    END
                                       INPUT_ELIGIBILITY,
                                    SUM(
                                       CASE
                                          WHEN MAIN.GSTAPPL = 'N' THEN TAX.CGST_AMOUNT
                                          ELSE NULL
                                       END)
                                       INPUT_CGST_AMOUNT,
                                    SUM(
                                       CASE
                                          WHEN MAIN.GSTAPPL = 'N' THEN TAX.SGST_AMOUNT
                                          ELSE NULL
                                       END)
                                       INPUT_SGST_AMOUNT,
                                    SUM(
                                       CASE
                                          WHEN MAIN.GSTAPPL = 'N' THEN TAX.IGST_AMOUNT
                                          ELSE NULL
                                       END)
                                       INPUT_IGST_AMOUNT,
                                    SUM(
                                       CASE
                                          WHEN MAIN.GSTAPPL = 'N' THEN TAX.CESS_AMOUNT
                                          ELSE NULL
                                       END)
                                       INPUT_CESS_AMOUNT
                               FROM ginview.lv_site ownersite, ginview.lv_item item, salrtmain main
LEFT OUTER JOIN salinvmain transfer ON (MAIN.TRANSFEROUT_INVCODE = TRANSFER.INVCODE)
LEFT OUTER JOIN psite_grt grtm ON (MAIN.PSITE_GRT_CODE = GRTM.CODE)
, salrtdet det
LEFT OUTER JOIN (  SELECT SALRTDET_CODE,
                                              APPAMT            TAXABLE_AMOUNT,
                                              SUM(coalesce(CHGAMT, 0)) TAX_CHARGE_AMOUNT,
                                              SUM(
                                                 CASE
                                                    WHEN GST_COMPONENT = 'CGST' THEN RATE
                                                    ELSE 0
                                                 END)
                                                 CGST_RATE,
                                              SUM(
                                                 CASE
                                                    WHEN GST_COMPONENT = 'CGST' THEN CHGAMT
                                                    ELSE 0
                                                 END)
                                                 CGST_AMOUNT,
                                              SUM(
                                                 CASE
                                                    WHEN GST_COMPONENT = 'SGST' THEN RATE
                                                    ELSE 0
                                                 END)
                                                 SGST_RATE,
                                              SUM(
                                                 CASE
                                                    WHEN GST_COMPONENT = 'SGST' THEN CHGAMT
                                                    ELSE 0
                                                 END)
                                                 SGST_AMOUNT,
                                              SUM(
                                                 CASE
                                                    WHEN GST_COMPONENT = 'IGST' THEN RATE
                                                    ELSE 0
                                                 END)
                                                 IGST_RATE,
                                              SUM(
                                                 CASE
                                                    WHEN GST_COMPONENT = 'IGST' THEN CHGAMT
                                                    ELSE 0
                                                 END)
                                                 IGST_AMOUNT,
                                              SUM(
                                                 CASE
                                                    WHEN GST_COMPONENT = 'CESS' THEN RATE
                                                    ELSE 0
                                                 END)
                                                 CESS_RATE,
                                              SUM(
                                                 CASE
                                                    WHEN GST_COMPONENT = 'CESS' THEN CHGAMT
                                                    ELSE 0
                                                 END)
                                                 CESS_AMOUNT
                                         FROM SALRTCHG_ITEM
                                        WHERE SOURCE = 'G'
                                     GROUP BY SALRTDET_CODE, APPAMT) tax ON (DET.CODE = TAX.SALRTDET_CODE)
LEFT OUTER JOIN (  SELECT SALRTDET_CODE,
                                              SUM(coalesce(CHGAMT, 0)) OTHER_CHARGE_AMOUNT
                                         FROM SALRTCHG_ITEM
                                        WHERE SOURCE <> 'G'
                                     GROUP BY SALRTDET_CODE) otx ON (DET.CODE = OTX.SALRTDET_CODE)
LEFT OUTER JOIN salinvmain originalinv ON (DET.INVCODE = ORIGINALINV.INVCODE)
, ginview.lv_site refsite
LEFT OUTER JOIN admou ou ON (REFSITE.ADMOU_CODE = OU.CODE)
WHERE MAIN.RTCODE = DET.RTCODE      AND MAIN.ADMSITE_CODE_OWNER = OWNERSITE.SITECODE AND MAIN.ADMSITE_CODE = REFSITE.SITECODE  AND DET.ICODE = ITEM.ITEM_CODE AND MAIN.RTDT BETWEEN PDTFR AND PDTTO AND OWNERSITE.GST_IDENTIFICATION_NO = PGSTIN AND coalesce(UPPER(MAIN.RELEASE_STATUS), 'U') = 'P' AND (   (    MAIN.PSITE_GRT_CODE IS NOT NULL
                                             AND coalesce(QTY, 0) <> 0)
                                         OR MAIN.PSITE_GRT_CODE IS NULL)  -- Short excess rows of SRT shouldn't be sent to EMG
  AND coalesce(MAIN.SALTRADEGRP_CODE, 6) <> 4  -- CONSIGNMENT TRANSFERS / LOCAL TRANSFERS WHERE GST IS NOT CHARGED, SHOULDN'T BE SYNCED TO EMG.
 GROUP BY CASE
                                       WHEN MAIN.SALETYPE = 'C' THEN 'SND: TRANSFER IN'
                                       ELSE 'SND: SALES RETURN'
                                    END,
                                    OWNERSITE.NAME,
                                    MAIN.RTDT,
                                    MAIN.SCHEME_DOCNO,
                                    MAIN.SALTRADEGRP_CODE,
                                    MAIN.NETAMT,
                                    CASE
                                       WHEN REFSITE.SITE_TYPE LIKE 'MS%'
                                       THEN
                                          coalesce(GRTM.GSTDOCNO, GRTM.DOCNO)
                                       WHEN REFSITE.SITE_TYPE = 'OS-OO-CM'
                                       THEN
                                          TRANSFER.SCHEME_DOCNO
                                       ELSE
                                          MAIN.DOCNO
                                    END,
                                    CASE
                                       WHEN REFSITE.SITE_TYPE LIKE 'MS%'
                                       THEN
                                          GRTM.DOCDT
                                       WHEN REFSITE.SITE_TYPE = 'OS-OO-CM'
                                       THEN
                                          TRANSFER.INVDT
                                       ELSE
                                          MAIN.DOCDT
                                    END,
                                    CASE
                                       WHEN MAIN.GSTAPPL = 'C' THEN 'SALES CREDIT NOTE'
                                       ELSE 'INWARD SUPPLY'
                                    END,
                                    CASE WHEN 2=2 THEN NULL END,
                                    REFSITE.GST_IDENTIFICATION_NO,
                                    REFSITE.GST_STATE_CODE,
                                    REFSITE.GST_REGISTRATION_DATE,
                                    CASE
                                       WHEN MAIN.SALETYPE = 'C' THEN NULL
                                       ELSE MAIN.PCODE
                                    END,
                                    CASE
                                       WHEN MAIN.SALETYPE = 'C' THEN 'Normal Registered'
                                       ELSE NULL
                                    END,
                                    CASE
                                       WHEN MAIN.SALETYPE = 'C' THEN OU.NAME
                                       ELSE NULL
                                    END,
                                    CASE
                                       WHEN MAIN.SALETYPE = 'C' THEN OU.PAN
                                       ELSE NULL
                                    END,
                                    CASE
                                       WHEN MAIN.SALETYPE = 'C' THEN OU.CONTACT_PERSON
                                       ELSE NULL
                                    END,
                                    CASE
                                       WHEN MAIN.SALETYPE = 'C' THEN OU.MOBILE
                                       ELSE NULL
                                    END,
                                    CASE
                                       WHEN MAIN.SALETYPE = 'C' THEN OU.EMAIL1
                                       ELSE NULL
                                    END,
                                    CASE
                                       WHEN MAIN.GSTAPPL = 'C'
                                       THEN
                                          coalesce(ORIGINALINV.SCHEME_DOCNO, MAIN.DOCNO)
                                       ELSE
                                          NULL
                                    END,
                                    CASE
                                       WHEN MAIN.GSTAPPL = 'C'
                                       THEN
                                          coalesce(ORIGINALINV.INVDT, MAIN.DOCDT)
                                       ELSE
                                          NULL
                                    END,
                                    CASE
                                       WHEN MAIN.GSTAPPL = 'C' THEN ORIGINALINV.NETAMT
                                       ELSE NULL
                                    END,
                                    CASE
                                       WHEN MAIN.GSTAPPL = 'C' THEN ORIGINALINV.DOCNO
                                       ELSE NULL
                                    END,
                                    CASE
                                       WHEN MAIN.GSTAPPL = 'C' THEN ORIGINALINV.DOCDT
                                       ELSE NULL
                                    END,
                                    CASE
                                       WHEN MAIN.GSTAPPL = 'C' THEN 'Sales Return'
                                       ELSE NULL
                                    END,
                                    ITEM.HSN_CODE,
                                    ITEM.HSN_DESCRIPTION,
                                    ITEM.UOM,
                                    TAX.CGST_RATE,
                                    TAX.SGST_RATE,
                                    TAX.IGST_RATE,
                                    TAX.CESS_RATE,
                                    TAX.CGST_RATE + TAX.SGST_RATE + TAX.IGST_RATE,
                                    CASE
                                       WHEN     MAIN.GSTAPPL = 'N'
                                            AND TAX.TAXABLE_AMOUNT IS NOT NULL
                                       THEN
                                          'IP'
                                       ELSE
                                          NULL
                                    END
                           
UNION ALL

                             SELECT CASE
                                       WHEN MAIN.JRNTYPE = 'D' THEN 'SND: SALES DEBIT NOTE'
                                       ELSE 'SND: SALES CREDIT NOTE'
                                    END
                                       ENTRY_SOURCE,
                                    OWNERSITE.NAME              ENTRY_SITE,
                                    MAIN.JRNDT                  ENTRY_DATE,
                                    MAIN.SCHEME_DOCNO           ENTRY_NO,
                                    MAIN.SALTRADEGRP_CODE       ENTRY_TRADETYPECODE,
                                    MAIN.NETAMT                 ENTRY_NETVALUE,
                                    MAIN.DOCNO                  REF_DOC_NO,
                                    MAIN.DOCDT                  REF_DOC_DATE,
                                    CASE
                                       WHEN UPPER(MAIN.GSTAPPL) = 'C'
                                       THEN
                                          'SALES CREDIT NOTE'
                                       WHEN UPPER(MAIN.GSTAPPL) = 'D'
                                       THEN
                                          'SALES DEBIT NOTE'
                                       ELSE
                                          CASE
                                             WHEN MAIN.JRNTYPE = 'D'
                                             THEN
                                                'OTHER SALES DEBIT NOTE'
                                             ELSE
                                                'OTHER SALES CREDIT NOTE'
                                          END
                                    END
                                       GST_APPLICABILITY,
                                    NULL                        ETIN,
                                    REFSITE.GST_IDENTIFICATION_NO CP_GSTIN_NO,
                                    REFSITE.GST_STATE_CODE      CP_GSTIN_STATE_CODE,
                                    REFSITE.GST_REGISTRATION_DATE
                                       CP_GSTIN_REGISTRATION_DATE,
                                    MAIN.PCODE                  CP_CODE,
                                    NULL
                                       CP_GST_REGISTRATION_STATUS,
                                    NULL                        CP_NAME,
                                    NULL                        CP_PAN,
                                    NULL                        CP_CONTACT_PERSON,
                                    NULL                        CP_MOBILE,
                                    NULL                        CP_EMAIL,
                                    NULL                        CP_CLASS,
                                    NULL                        CP_AGENT_NAME,
                                    NULL                        CP_AGENT_CLASS,
                                    INVM.SCHEME_DOCNO           ORIGINAL_INV_ENT_NO,
                                    INVM.INVDT                  ORIGINAL_INV_ENT_DT,
                                    INVM.NETAMT                 ORIGINAL_INV_ENT_NETVALUE,
                                    MAIN.DOCNO                  ORIGINAL_INV_REFNO,
                                    MAIN.DOCDT                  ORIGINAL_INV_REFDT,
                                    REASON.REASON               DNCN_REASON,
                                    ITEM.HSN_CODE               HSN_SAC_CODE,
                                    ITEM.HSN_DESCRIPTION        HSN_SAC_DESC,
                                    ITEM.UOM                    UOM,
                                    TAX.CGST_RATE               CGST_RATE,
                                    TAX.SGST_RATE               SGST_RATE,
                                    TAX.IGST_RATE               IGST_RATE,
                                    TAX.CESS_RATE               CESS_RATE,
                                    TAX.CGST_RATE + TAX.SGST_RATE + TAX.IGST_RATE
                                       TOTAL_TAXRATE,
                                    NULL                        QUANTITY,
                                    SUM(TAX.TAXABLE_AMOUNT)    TAXABLE_AMOUNT,
                                    SUM(TAX.CGST_AMOUNT)       CGST_AMOUNT,
                                    SUM(TAX.SGST_AMOUNT)       SGST_AMOUNT,
                                    SUM(TAX.IGST_AMOUNT)       IGST_AMOUNT,
                                    SUM(TAX.CESS_AMOUNT)       CESS_AMOUNT,
                                    SUM(
                                         coalesce(DET.AMOUNT, 0)
                                       + coalesce(DET.CHGAMT, 0)
                                       + coalesce(DET.TAXAMT, 0))
                                       NET_AMOUNT,
                                    NULL                        INPUT_ELIGIBILITY,
                                    NULL                        INPUT_CGST_AMOUNT,
                                    NULL                        INPUT_SGST_AMOUNT,
                                    NULL                        INPUT_IGST_AMOUNT,
                                    NULL                        INPUT_CESS_AMOUNT
                               FROM ginview.lv_site refsite, admgstjrnreason reason, ginview.lv_site ownersite, salinvjrnmain main, ginview.lv_item item, salinvmain invm, salinvjrndet det
LEFT OUTER JOIN (  SELECT SALINVJRNDET_CODE,
                                              APPAMT TAXABLE_AMOUNT,
                                              SUM(
                                                 CASE
                                                    WHEN GST_COMPONENT = 'CGST' THEN RATE
                                                    ELSE 0
                                                 END)
                                                 CGST_RATE,
                                              SUM(
                                                 CASE
                                                    WHEN GST_COMPONENT = 'CGST' THEN CHGAMT
                                                    ELSE 0
                                                 END)
                                                 CGST_AMOUNT,
                                              SUM(
                                                 CASE
                                                    WHEN GST_COMPONENT = 'SGST' THEN RATE
                                                    ELSE 0
                                                 END)
                                                 SGST_RATE,
                                              SUM(
                                                 CASE
                                                    WHEN GST_COMPONENT = 'SGST' THEN CHGAMT
                                                    ELSE 0
                                                 END)
                                                 SGST_AMOUNT,
                                              SUM(
                                                 CASE
                                                    WHEN GST_COMPONENT = 'IGST' THEN RATE
                                                    ELSE 0
                                                 END)
                                                 IGST_RATE,
                                              SUM(
                                                 CASE
                                                    WHEN GST_COMPONENT = 'IGST' THEN CHGAMT
                                                    ELSE 0
                                                 END)
                                                 IGST_AMOUNT,
                                              SUM(
                                                 CASE
                                                    WHEN GST_COMPONENT = 'CESS' THEN RATE
                                                    ELSE 0
                                                 END)
                                                 CESS_Rate,
                                              SUM(
                                                 CASE
                                                    WHEN GST_COMPONENT = 'CESS' THEN CHGAMT
                                                    ELSE 0
                                                 END)
                                                 CESS_AMOUNT
                                         FROM SALINVJRNCHG_ITEM
                                        WHERE SOURCE = 'G'
                                     GROUP BY SALINVJRNDET_CODE, APPAMT) tax ON (DET.CODE = TAX.SALINVJRNDET_CODE)
WHERE MAIN.JRNCODE = DET.JRNCODE  AND MAIN.SALINVMAIN_CODE = INVM.INVCODE AND MAIN.ADMSITE_CODE_OWNER = OWNERSITE.SITECODE AND MAIN.ADMSITE_CODE = REFSITE.SITECODE AND DET.ICODE = ITEM.ITEM_CODE AND MAIN.ADMGSTJRNREASON_CODE = REASON.CODE AND MAIN.JRNDT BETWEEN PDTFR AND PDTTO AND OWNERSITE.GST_IDENTIFICATION_NO = PGSTIN AND coalesce(UPPER(MAIN.RELEASE_STATUS), 'U') = 'P' GROUP BY CASE
                                       WHEN MAIN.JRNTYPE = 'D'
                                       THEN
                                          'SND: SALES DEBIT NOTE'
                                       ELSE
                                          'SND: SALES CREDIT NOTE'
                                    END,
                                    OWNERSITE.NAME,
                                    MAIN.JRNDT,
                                    MAIN.SCHEME_DOCNO,
                                    MAIN.SALTRADEGRP_CODE,
                                    MAIN.NETAMT,
                                    MAIN.DOCNO,
                                    MAIN.DOCDT,
                                    CASE
                                       WHEN UPPER(MAIN.GSTAPPL) = 'C'
                                       THEN
                                          'SALES CREDIT NOTE'
                                       WHEN UPPER(MAIN.GSTAPPL) = 'D'
                                       THEN
                                          'SALES DEBIT NOTE'
                                       ELSE
                                          CASE
                                             WHEN MAIN.JRNTYPE = 'D'
                                             THEN
                                                'OTHER SALES DEBIT NOTE'
                                             ELSE
                                                'OTHER SALES CREDIT NOTE'
                                          END
                                    END,
                                    REFSITE.GST_IDENTIFICATION_NO,
                                    REFSITE.GST_STATE_CODE,
                                    REFSITE.GST_REGISTRATION_DATE,
                                    MAIN.PCODE,
                                    INVM.SCHEME_DOCNO,
                                    INVM.INVDT,
                                    INVM.NETAMT,
                                    MAIN.DOCNO,
                                    MAIN.DOCDT,
                                    REASON.REASON,
                                    ITEM.HSN_CODE,
                                    ITEM.HSN_DESCRIPTION,
                                    ITEM.UOM,
                                    TAX.CGST_RATE,
                                    TAX.SGST_RATE,
                                    TAX.IGST_RATE,
                                    TAX.CESS_RATE,
                                    TAX.CGST_RATE + TAX.SGST_RATE + TAX.IGST_RATE
                           
UNION ALL

                             SELECT 'POS: GOODS RECEIVE'        ENTRY_SOURCE,
                                    OWNERSITE.NAME              ENTRY_SITE,
                                    date_trunc('day', MAIN.DOCDT)          ENTRY_DATE,
                                    MAIN.DOCNO                  ENTRY_NO,
                                    coalesce(
                                       (CASE
                                           WHEN MAIN.INVCODE IS NOT NULL
                                           THEN
                                              TRANSFER.SALTRADEGRP_CODE
                                           ELSE
                                              GRT.FINTRADEGRP_CODE
                                        END),
                                       6)
                                       ENTRY_TRADETYPECODE, -- NULL RECORDS WILL BE TRAPPED IN EMG
                                    (  coalesce(MAIN.RECEIVEAMT, 0)
                                     + coalesce(MAIN.DAMAGEAMT, 0)
                                     + coalesce(MAIN.SHORTEXCESSAMT, 0)
                                     + coalesce(MAIN.CHGAMT, 0))
                                       ENTRY_NETVALUE,
                                    CASE
                                       WHEN MAIN.INVCODE IS NOT NULL
                                       THEN
                                          TRANSFER.SCHEME_DOCNO
                                       ELSE
                                          coalesce(GRT.GSTDOCNO, GRT.DOCNO)
                                    END
                                       REF_DOC_NO,
                                    CASE
                                       WHEN MAIN.INVCODE IS NOT NULL THEN TRANSFER.INVDT
                                       ELSE date_trunc('day', GRT.DOCDT)
                                    END
                                       REF_DOC_DATE,
                                    'INWARD SUPPLY'             GST_APPLICABILITY,
                                    NULL                        ETIN,
                                    REFSITE.GST_IDENTIFICATION_NO CP_GSTIN_NO,
                                    REFSITE.GST_STATE_CODE      CP_GSTIN_STATE_CODE,
                                    REFSITE.GST_REGISTRATION_DATE
                                       CP_GSTIN_REGISTRATION_DATE,
                                    NULL                        CP_CODE,
                                    'Normal Registered'
                                       CP_GST_REGISTRATION_STATUS,
                                    OU.NAME                     CP_NAME,
                                    OU.PAN                      CP_PAN,
                                    OU.CONTACT_PERSON           CP_CONTACT_PERSON,
                                    OU.MOBILE                   CP_MOBILE,
                                    OU.EMAIL1                   CP_EMAIL,
                                    NULL                        CP_CLASS,
                                    NULL                        CP_AGENT_NAME,
                                    NULL                        CP_AGENT_CLASS,
                                    NULL                        ORIGINAL_INV_ENT_NO,
                                    NULL                        ORIGINAL_INV_ENT_DT,
                                    NULL                        ORIGINAL_INV_ENT_NETVALUE,
                                    NULL                        ORIGINAL_INV_REFNO,
                                    NULL                        ORIGINAL_INV_REFDT,
                                    NULL                        DNCN_REASON,
                                    ITEM.HSN_CODE               HSN_SAC_CODE,
                                    ITEM.HSN_DESCRIPTION        HSN_SAC_DESC,
                                    ITEM.UOM                    UOM,
                                    TAX.CGST_RATE               CGST_RATE,
                                    TAX.SGST_RATE               SGST_RATE,
                                    TAX.IGST_RATE               IGST_RATE,
                                    TAX.CESS_RATE               CESS_RATE,
                                    TAX.CGST_RATE + TAX.SGST_RATE + TAX.IGST_RATE
                                       TOTAL_TAXRATE,
                                    SUM(
                                         coalesce(DET.RECEIVEQTY, 0)
                                       + coalesce(DET.DAMAGEQTY, 0)
                                       + coalesce(DET.SHORTEXCESSQTY, 0))
                                       QUANTITY,
                                    SUM(TAX.TAXABLE_AMOUNT)    TAXABLE_AMOUNT,
                                    SUM(TAX.CGST_AMOUNT)       CGST_AMOUNT,
                                    SUM(TAX.SGST_AMOUNT)       SGST_AMOUNT,
                                    SUM(TAX.IGST_AMOUNT)       IGST_AMOUNT,
                                    SUM(TAX.CESS_AMOUNT)       CESS_AMOUNT,
                                    SUM(
                                         coalesce(DET.RECEIVEAMT, 0)
                                       + coalesce(DET.DAMAGEAMT, 0)
                                       + coalesce(DET.SHORTEXCESSAMT, 0)
                                       + coalesce(TAX.CGST_AMOUNT, 0)
                                       + coalesce(TAX.SGST_AMOUNT, 0)
                                       + coalesce(TAX.IGST_AMOUNT, 0)
                                       + coalesce(TAX.CESS_AMOUNT, 0))
                                       NET_AMOUNT,
                                    CASE
                                       WHEN TAX.TAXABLE_AMOUNT IS NOT NULL THEN 'IP'
                                       ELSE NULL
                                    END
                                       INPUT_ELIGIBILITY,
                                    SUM(TAX.CGST_AMOUNT)       INPUT_CGST_AMOUNT,
                                    SUM(TAX.SGST_AMOUNT)       INPUT_SGST_AMOUNT,
                                    SUM(TAX.IGST_AMOUNT)       INPUT_IGST_AMOUNT,
                                    SUM(TAX.CESS_AMOUNT)       INPUT_CESS_AMOUNT
                               FROM ginview.lv_site ownersite, ginview.lv_item item, psite_grc main
LEFT OUTER JOIN salinvmain transfer ON (MAIN.INVCODE = TRANSFER.INVCODE)
LEFT OUTER JOIN psite_grt grt ON (MAIN.PSITE_GRT_CODE = GRT.CODE)
, psite_grcitem det
LEFT OUTER JOIN (  SELECT PSITE_GRCITEM_CODE,
                                              CHARGEAPPAMT TAXABLE_AMOUNT,
                                              SUM(
                                                 CASE
                                                    WHEN GSTCOMPONENT = 'CGST' THEN FACTOR
                                                    ELSE 0
                                                 END)
                                                 CGST_RATE,
                                              SUM(
                                                 CASE
                                                    WHEN GSTCOMPONENT = 'CGST' THEN CHARGEAMT
                                                    ELSE 0
                                                 END)
                                                 CGST_AMOUNT,
                                              SUM(
                                                 CASE
                                                    WHEN GSTCOMPONENT = 'SGST' THEN FACTOR
                                                    ELSE 0
                                                 END)
                                                 SGST_RATE,
                                              SUM(
                                                 CASE
                                                    WHEN GSTCOMPONENT = 'SGST' THEN CHARGEAMT
                                                    ELSE 0
                                                 END)
                                                 SGST_AMOUNT,
                                              SUM(
                                                 CASE
                                                    WHEN GSTCOMPONENT = 'IGST' THEN FACTOR
                                                    ELSE 0
                                                 END)
                                                 IGST_RATE,
                                              SUM(
                                                 CASE
                                                    WHEN GSTCOMPONENT = 'IGST' THEN CHARGEAMT
                                                    ELSE 0
                                                 END)
                                                 IGST_AMOUNT,
                                              SUM(
                                                 CASE
                                                    WHEN GSTCOMPONENT = 'CESS' THEN FACTOR
                                                    ELSE 0
                                                 END)
                                                 CESS_Rate,
                                              SUM(
                                                 CASE
                                                    WHEN GSTCOMPONENT = 'CESS' THEN CHARGEAMT
                                                    ELSE 0
                                                 END)
                                                 CESS_AMOUNT
                                         FROM PSITE_GRCCHGITEM
                                        WHERE SOURCE = 'G'
                                     GROUP BY PSITE_GRCITEM_CODE, CHARGEAPPAMT) tax ON (DET.CODE = TAX.PSITE_GRCITEM_CODE)
, ginview.lv_site refsite
LEFT OUTER JOIN admou ou ON (REFSITE.ADMOU_CODE = OU.CODE)
WHERE MAIN.CODE = DET.PSITE_GRC_CODE    AND MAIN.ADMSITE_CODE = OWNERSITE.SITECODE AND MAIN.REPLN_ADMSITE_CODE = REFSITE.SITECODE AND DET.ICODE = ITEM.ITEM_CODE  AND date_trunc('day', MAIN.DOCDT) BETWEEN PDTFR AND PDTTO AND OWNERSITE.GST_IDENTIFICATION_NO = PGSTIN AND coalesce(TRANSFER.SALTRADEGRP_CODE,
                                             coalesce(GRT.FINTRADEGRP_CODE, 6)) <> 4  -- LOCAL TRANSFERS NEED NOT BE SHOWN IN GST RETURNS, SO NOT SENDING TO EMG
  AND OWNERSITE.SITE_TYPE <> 'MS-CO-OM-TS' -- THIS PARTICULAR QUERY IS FOR CONSIGNMENT STORES ONLY
 GROUP BY OWNERSITE.NAME,
                                    date_trunc('day', MAIN.DOCDT),
                                    MAIN.DOCNO,
                                    coalesce(
                                       (CASE
                                           WHEN MAIN.INVCODE IS NOT NULL
                                           THEN
                                              TRANSFER.SALTRADEGRP_CODE
                                           ELSE
                                              GRT.FINTRADEGRP_CODE
                                        END),
                                       6),          -- NULL RECORDS WILL BE TRAPPED IN EMG
                                    (  coalesce(MAIN.RECEIVEAMT, 0)
                                     + coalesce(MAIN.DAMAGEAMT, 0)
                                     + coalesce(MAIN.SHORTEXCESSAMT, 0)
                                     + coalesce(MAIN.CHGAMT, 0)),
                                    CASE
                                       WHEN MAIN.INVCODE IS NOT NULL
                                       THEN
                                          TRANSFER.SCHEME_DOCNO
                                       ELSE
                                          coalesce(GRT.GSTDOCNO, GRT.DOCNO)
                                    END,
                                    CASE
                                       WHEN MAIN.INVCODE IS NOT NULL THEN TRANSFER.INVDT
                                       ELSE date_trunc('day', GRT.DOCDT)
                                    END,
                                    REFSITE.GST_IDENTIFICATION_NO,
                                    REFSITE.GST_STATE_CODE,
                                    REFSITE.GST_REGISTRATION_DATE,
                                    OU.NAME,
                                    OU.PAN,
                                    OU.CONTACT_PERSON,
                                    OU.MOBILE,
                                    OU.EMAIL1,
                                    ITEM.HSN_CODE,
                                    ITEM.HSN_DESCRIPTION,
                                    ITEM.UOM,
                                    TAX.CGST_RATE,
                                    TAX.SGST_RATE,
                                    TAX.IGST_RATE,
                                    TAX.CESS_RATE,
                                    TAX.CGST_RATE + TAX.SGST_RATE + TAX.IGST_RATE,
                                    CASE
                                       WHEN TAX.TAXABLE_AMOUNT IS NOT NULL THEN 'IP'
                                       ELSE NULL
                                    END
                           
UNION ALL

                             SELECT 'POS: GOODS RECEIVE'        ENTRY_SOURCE,
                                    OWNERSITE.NAME              ENTRY_SITE,
                                    date_trunc('day', MAIN.DOCDT)          ENTRY_DATE,
                                    MAIN.DOCNO                  ENTRY_NO,
                                    INVOICE.SALTRADEGRP_CODE    ENTRY_TRADETYPECODE,
                                    INVOICE.NETAMT              ENTRY_NETVALUE,
                                    INVOICE.SCHEME_DOCNO        REF_DOC_NO,
                                    INVOICE.INVDT               REF_DOC_DATE,
                                    'INWARD SUPPLY'             GST_APPLICABILITY,
                                    NULL                        ETIN,
                                    REFSITE.GST_IDENTIFICATION_NO CP_GSTIN_NO,
                                    REFSITE.GST_STATE_CODE      CP_GSTIN_STATE_CODE,
                                    REFSITE.GST_REGISTRATION_DATE
                                       CP_GSTIN_REGISTRATION_DATE,
                                    NULL                        CP_CODE,
                                    'Normal Registered'
                                       CP_GST_REGISTRATION_STATUS,
                                    OU.NAME                     CP_NAME,
                                    OU.PAN                      CP_PAN,
                                    OU.CONTACT_PERSON           CP_CONTACT_PERSON,
                                    OU.MOBILE                   CP_MOBILE,
                                    OU.EMAIL1                   CP_EMAIL,
                                    NULL                        CP_CLASS,
                                    NULL                        CP_AGENT_NAME,
                                    NULL                        CP_AGENT_CLASS,
                                    NULL                        ORIGINAL_INV_ENT_NO,
                                    NULL                        ORIGINAL_INV_ENT_DT,
                                    NULL                        ORIGINAL_INV_ENT_NETVALUE,
                                    NULL                        ORIGINAL_INV_REFNO,
                                    NULL                        ORIGINAL_INV_REFDT,
                                    NULL                        DNCN_REASON,
                                    ITEM.HSN_CODE               HSN_SAC_CODE,
                                    ITEM.HSN_DESCRIPTION        HSN_SAC_DESC,
                                    ITEM.UOM                    UOM,
                                    TAX.CGST_RATE               CGST_RATE,
                                    TAX.SGST_RATE               SGST_RATE,
                                    TAX.IGST_RATE               IGST_RATE,
                                    TAX.CESS_RATE               CESS_RATE,
                                    TAX.CGST_RATE + TAX.SGST_RATE + TAX.IGST_RATE
                                       TOTAL_TAXRATE,
                                    SUM(INVOICEDET.INVQTY)     QUANTITY,
                                    SUM(TAX.TAXABLE_AMOUNT)    TAXABLE_AMOUNT,
                                    SUM(TAX.CGST_AMOUNT)       CGST_AMOUNT,
                                    SUM(TAX.SGST_AMOUNT)       SGST_AMOUNT,
                                    SUM(TAX.IGST_AMOUNT)       IGST_AMOUNT,
                                    SUM(TAX.CESS_AMOUNT)       CESS_AMOUNT,
                                    SUM(
                                         coalesce(INVOICEDET.INVAMT, 0)
                                       + coalesce(INVOICEDET.CHGAMT, 0)
                                       + coalesce(INVOICEDET.TAXAMT, 0))
                                       NET_AMOUNT,
                                    CASE
                                       WHEN TAX.TAXABLE_AMOUNT IS NOT NULL THEN 'IP'
                                       ELSE NULL
                                    END
                                       INPUT_ELIGIBILITY,
                                    SUM(TAX.CGST_AMOUNT)       INPUT_CGST_AMOUNT,
                                    SUM(TAX.SGST_AMOUNT)       INPUT_SGST_AMOUNT,
                                    SUM(TAX.IGST_AMOUNT)       INPUT_IGST_AMOUNT,
                                    SUM(TAX.CESS_AMOUNT)       INPUT_CESS_AMOUNT
                               FROM ginview.lv_site refsite, ginview.lv_site ownersite, admou ou, psite_grc main, ginview.lv_item item, salinvmain invoice, psite_grcitem det, salinvdet invoicedet
LEFT OUTER JOIN (  SELECT SALINVDET_CODE,
                                              APPAMT            TAXABLE_AMOUNT,
                                              SUM(coalesce(CHGAMT, 0)) TAX_CHARGE_AMOUNT,
                                              SUM(
                                                 CASE
                                                    WHEN GST_COMPONENT = 'CGST' THEN RATE
                                                    ELSE 0
                                                 END)
                                                 CGST_RATE,
                                              SUM(
                                                 CASE
                                                    WHEN GST_COMPONENT = 'CGST' THEN CHGAMT
                                                    ELSE 0
                                                 END)
                                                 CGST_AMOUNT,
                                              SUM(
                                                 CASE
                                                    WHEN GST_COMPONENT = 'SGST' THEN RATE
                                                    ELSE 0
                                                 END)
                                                 SGST_RATE,
                                              SUM(
                                                 CASE
                                                    WHEN GST_COMPONENT = 'SGST' THEN CHGAMT
                                                    ELSE 0
                                                 END)
                                                 SGST_AMOUNT,
                                              SUM(
                                                 CASE
                                                    WHEN GST_COMPONENT = 'IGST' THEN RATE
                                                    ELSE 0
                                                 END)
                                                 IGST_RATE,
                                              SUM(
                                                 CASE
                                                    WHEN GST_COMPONENT = 'IGST' THEN CHGAMT
                                                    ELSE 0
                                                 END)
                                                 IGST_AMOUNT,
                                              SUM(
                                                 CASE
                                                    WHEN GST_COMPONENT = 'CESS' THEN RATE
                                                    ELSE 0
                                                 END)
                                                 CESS_RATE,
                                              SUM(
                                                 CASE
                                                    WHEN GST_COMPONENT = 'CESS' THEN CHGAMT
                                                    ELSE 0
                                                 END)
                                                 CESS_AMOUNT
                                         FROM SALINVCHG_ITEM
                                        WHERE SOURCE = 'G'
                                     GROUP BY SALINVDET_CODE, APPAMT) tax ON (INVOICEDET.CODE = TAX.SALINVDET_CODE)
WHERE MAIN.CODE = DET.PSITE_GRC_CODE AND MAIN.INVCODE = INVOICE.INVCODE AND DET.SALINVDET_CODE = INVOICEDET.CODE  AND MAIN.ADMSITE_CODE = OWNERSITE.SITECODE AND MAIN.REPLN_ADMSITE_CODE = REFSITE.SITECODE AND DET.ICODE = ITEM.ITEM_CODE AND REFSITE.ADMOU_CODE = OU.CODE AND date_trunc('day', MAIN.DOCDT) BETWEEN PDTFR AND PDTTO AND OWNERSITE.GST_IDENTIFICATION_NO = PGSTIN AND OWNERSITE.SITE_TYPE = 'MS-CO-OM-TS' -- THIS PARTICULAR QUERY IS FOR OUTRIGHT STORES ONLY
 GROUP BY OWNERSITE.NAME,
                                    date_trunc('day', MAIN.DOCDT),
                                    MAIN.DOCNO,
                                    INVOICE.SALTRADEGRP_CODE,
                                    INVOICE.NETAMT,
                                    INVOICE.SCHEME_DOCNO,
                                    INVOICE.INVDT,
                                    REFSITE.GST_IDENTIFICATION_NO,
                                    REFSITE.GST_STATE_CODE,
                                    REFSITE.GST_REGISTRATION_DATE,
                                    OU.NAME,
                                    OU.PAN,
                                    OU.CONTACT_PERSON,
                                    OU.MOBILE,
                                    OU.EMAIL1,
                                    ITEM.HSN_CODE,
                                    ITEM.HSN_DESCRIPTION,
                                    ITEM.UOM,
                                    TAX.CGST_RATE,
                                    TAX.SGST_RATE,
                                    TAX.IGST_RATE,
                                    TAX.CESS_RATE,
                                    TAX.CGST_RATE + TAX.SGST_RATE + TAX.IGST_RATE,
                                    CASE
                                       WHEN TAX.TAXABLE_AMOUNT IS NOT NULL THEN 'IP'
                                       ELSE NULL
                                    END
                           
UNION ALL

                             SELECT 'POS: GOODS RETURN'         ENTRY_SOURCE,
                                    OWNERSITE.NAME              ENTRY_SITE,
                                    date_trunc('day', MAIN.DOCDT)          ENTRY_DATE,
                                    MAIN.GSTDOCNO               ENTRY_NO,
                                    MAIN.FINTRADEGRP_CODE       ENTRY_TRADETYPECODE,
                                    MAIN.NETAMT                 ENTRY_NETVALUE,
                                    MAIN.DOCNO                  REF_DOC_NO,
                                    NULL                        REF_DOC_DATE,
                                    CASE
                                       WHEN TAX.TAXABLE_AMOUNT IS NOT NULL
                                       THEN
                                          'OUTWARD SUPPLY'
                                       ELSE
                                          'OTHER OUTWARD SUPPLY'
                                    END
                                       GST_APPLICABILITY,
                                    NULL                        ETIN,
                                    REFSITE.GST_IDENTIFICATION_NO CP_GSTIN_NO,
                                    REFSITE.GST_STATE_CODE      CP_GSTIN_STATE_CODE,
                                    REFSITE.GST_REGISTRATION_DATE
                                       CP_GSTIN_REGISTRATION_DATE,
                                    NULL                        CP_CODE,
                                    'Normal Registered'
                                       CP_GST_REGISTRATION_STATUS,
                                    OU.NAME                     CP_NAME,
                                    OU.PAN                      CP_PAN,
                                    OU.CONTACT_PERSON           CP_CONTACT_PERSON,
                                    OU.MOBILE                   CP_MOBILE,
                                    OU.EMAIL1                   CP_EMAIL,
                                    NULL                        CP_CLASS,
                                    NULL                        CP_AGENT_NAME,
                                    NULL                        CP_AGENT_CLASS,
                                    NULL                        ORIGINAL_INV_ENT_NO,
                                    NULL                        ORIGINAL_INV_ENT_DT,
                                    NULL                        ORIGINAL_INV_ENT_NETVALUE,
                                    NULL                        ORIGINAL_INV_REFNO,
                                    NULL                        ORIGINAL_INV_REFDT,
                                    NULL                        DNCN_REASON,
                                    ITEM.HSN_CODE               HSN_SAC_CODE,
                                    ITEM.HSN_DESCRIPTION        HSN_SAC_DESC,
                                    ITEM.UOM                    UOM,
                                    TAX.CGST_RATE               CGST_RATE,
                                    TAX.SGST_RATE               SGST_RATE,
                                    TAX.IGST_RATE               IGST_RATE,
                                    TAX.CESS_RATE               CESS_RATE,
                                    TAX.CGST_RATE + TAX.SGST_RATE + TAX.IGST_RATE
                                       TOTAL_TAXRATE,
                                    SUM(DET.RTQTY)             QUANTITY,
                                    SUM(TAX.TAXABLE_AMOUNT)    TAXABLE_AMOUNT,
                                    SUM(TAX.CGST_AMOUNT)       CGST_AMOUNT,
                                    SUM(TAX.SGST_AMOUNT)       SGST_AMOUNT,
                                    SUM(TAX.IGST_AMOUNT)       IGST_AMOUNT,
                                    SUM(TAX.CESS_AMOUNT)       CESS_AMOUNT,
                                    SUM(DET.GRSAMT)            NET_AMOUNT,
                                    NULL                        INPUT_ELIGIBILITY,
                                    NULL                        INPUT_CGST_AMOUNT,
                                    NULL                        INPUT_SGST_AMOUNT,
                                    NULL                        INPUT_IGST_AMOUNT,
                                    NULL                        INPUT_CESS_AMOUNT
                               FROM ginview.lv_site ownersite, psite_grt main, ginview.lv_item item, psite_grtitem det
LEFT OUTER JOIN (  SELECT PSITE_GRTITEM_CODE,
                                              CHARGEAPPAMT TAXABLE_AMOUNT,
                                              SUM(
                                                 CASE
                                                    WHEN GSTCOMPONENT = 'CGST' THEN FACTOR
                                                    ELSE 0
                                                 END)
                                                 CGST_RATE,
                                              SUM(
                                                 CASE
                                                    WHEN GSTCOMPONENT = 'CGST' THEN CHARGEAMT
                                                    ELSE 0
                                                 END)
                                                 CGST_AMOUNT,
                                              SUM(
                                                 CASE
                                                    WHEN GSTCOMPONENT = 'SGST' THEN FACTOR
                                                    ELSE 0
                                                 END)
                                                 SGST_RATE,
                                              SUM(
                                                 CASE
                                                    WHEN GSTCOMPONENT = 'SGST' THEN CHARGEAMT
                                                    ELSE 0
                                                 END)
                                                 SGST_AMOUNT,
                                              SUM(
                                                 CASE
                                                    WHEN GSTCOMPONENT = 'IGST' THEN FACTOR
                                                    ELSE 0
                                                 END)
                                                 IGST_RATE,
                                              SUM(
                                                 CASE
                                                    WHEN GSTCOMPONENT = 'IGST' THEN CHARGEAMT
                                                    ELSE 0
                                                 END)
                                                 IGST_AMOUNT,
                                              SUM(
                                                 CASE
                                                    WHEN GSTCOMPONENT = 'CESS' THEN FACTOR
                                                    ELSE 0
                                                 END)
                                                 CESS_Rate,
                                              SUM(
                                                 CASE
                                                    WHEN GSTCOMPONENT = 'CESS' THEN CHARGEAMT
                                                    ELSE 0
                                                 END)
                                                 CESS_AMOUNT
                                         FROM PSITE_GRTCHGITEM
                                        WHERE SOURCE = 'G'
                                     GROUP BY PSITE_GRTITEM_CODE, CHARGEAPPAMT) tax ON (DET.CODE = TAX.PSITE_GRTITEM_CODE)
, ginview.lv_site refsite
LEFT OUTER JOIN admou ou ON (REFSITE.ADMOU_CODE = OU.CODE)
WHERE MAIN.CODE = DET.PSITE_GRT_CODE  AND MAIN.ADMSITE_CODE = OWNERSITE.SITECODE AND MAIN.REPLN_ADMSITE_CODE = REFSITE.SITECODE AND DET.ICODE = ITEM.ITEM_CODE  AND date_trunc('day', MAIN.DOCDT) BETWEEN PDTFR AND PDTTO AND OWNERSITE.GST_IDENTIFICATION_NO = PGSTIN AND (   (    OWNERSITE.SITE_TYPE <> 'MS-CO-OM-TS'
                                             AND coalesce(MAIN.FINTRADEGRP_CODE, 6) <> 4) -- LOCAL TRANSFERS NEED NOT BE SHOWN IN GST RETURNS, SO NOT SENDING TO EMG
                                         OR OWNERSITE.SITE_TYPE = 'MS-CO-OM-TS') GROUP BY OWNERSITE.NAME,
                                    date_trunc('day', MAIN.DOCDT),
                                    MAIN.GSTDOCNO,
                                    MAIN.FINTRADEGRP_CODE,
                                    MAIN.NETAMT,
                                    MAIN.DOCNO,
                                    CASE
                                       WHEN TAX.TAXABLE_AMOUNT IS NOT NULL
                                       THEN
                                          'OUTWARD SUPPLY'
                                       ELSE
                                          'OTHER OUTWARD SUPPLY'
                                    END,
                                    REFSITE.GST_IDENTIFICATION_NO,
                                    REFSITE.GST_STATE_CODE,
                                    REFSITE.GST_REGISTRATION_DATE,
                                    OU.NAME,
                                    OU.PAN,
                                    OU.CONTACT_PERSON,
                                    OU.MOBILE,
                                    OU.EMAIL1,
                                    ITEM.HSN_CODE,
                                    ITEM.HSN_DESCRIPTION,
                                    ITEM.UOM,
                                    TAX.CGST_RATE,
                                    TAX.SGST_RATE,
                                    TAX.IGST_RATE,
                                    TAX.CESS_RATE,
                                    TAX.CGST_RATE + TAX.SGST_RATE + TAX.IGST_RATE
                           
UNION ALL

                             -- start rev : 002
                             select     entry_source,entry_site,entry_date,entry_no,entry_tradetypecode,
                                        sum(net_amount) over (partition by entry_no,entry_date,entry_site) entry_netvalue,
                                        ref_doc_no,ref_doc_date::TIMESTAMP,gst_applicability,etin,cp_gstin_no,cp_gstin_state_code,
                                        cp_gstin_registration_date,cp_code::BIGINT,cp_gst_registration_status,cp_name,cp_pan,
                                        cp_contact_person,cp_mobile,cp_email,cp_class,cp_agent_name,cp_agent_class,
                                        original_inv_ent_no,original_inv_ent_dt,original_inv_ent_netvalue,original_inv_refno,
                                        original_inv_refdt::TIMESTAMP,dncn_reason,hsn_sac_code,hsn_sac_desc,uom,cgst_rate,sgst_rate,
                                        igst_rate,cess_rate,total_taxrate,quantity,taxable_amount,cgst_amount,sgst_amount,
                                        igst_amount,cess_amount,net_amount,input_eligibility,input_cgst_amount::NUMERIC,
                                        input_sgst_amount::NUMERIC,input_igst_amount::NUMERIC,input_cess_amount::NUMERIC
                             from (
                             -- end rev : 002
                             SELECT 'POS: POS BILL'              ENTRY_SOURCE,
                                    OWNERSITE.NAME               ENTRY_SITE,
                                    date_trunc('day', MAIN.BILLDATE)        ENTRY_DATE,
                                    CASE
                                       WHEN(    MAIN.CP_GSTIN_NO IS NOT NULL
                                                AND DET.QTY > 0) -- Returns shall be sent to B2CS, so consolidated shall be sent.
                                            OR (    MAIN.CP_GSTIN_NO IS NULL
                                                AND MAIN.NETPAYABLE >= 250000
                                                AND coalesce(MAIN.FINTRADEGRP_CODE, 1) = 2)
                                       THEN
                                          coalesce(MAIN.GSTDOCNO, MAIN.BILLNO)
                                          ELSE
                                          -- start rev : 002
                                          --'CONSOLIDATED'
                                          --'CON-'||ownersite.doc_identification_no||'-'||to_char(trunc((main.billdate)),'ddmmyyyy')
                                            case when coalesce(det.qty,0) >=0 then  
                                                'CI-'||ownersite.doc_identification_no||'-'||to_char(date_trunc('day', main.billdate),'ddmmyy')||'-'||coalesce(main.cp_gstin_state_code, substr('19ABCDE1234D12Z',1,2))
                                                else
                                                --start rev 003 segregation of B2B retrun
                                                case when(MAIN.CP_GSTIN_NO IS NOT NULL AND coalesce(DET.QTY,0) < 0) 
                                                    then coalesce(MAIN.GSTDOCNO, MAIN.BILLNO)  
                                                --end rev 003       
                                                   else
                                                'CR-'||ownersite.doc_identification_no||'-'||to_char(date_trunc('day', main.billdate),'ddmmyy')||'-'||coalesce(main.cp_gstin_state_code, substr('19ABCDE1234D12Z',1,2))  
                                                end
                                            end
                                         -- end rev : 002
                                    END   ENTRY_NO,
                                    coalesce(MAIN.FINTRADEGRP_CODE, 6) ENTRY_TRADETYPECODE, -- NULL RECORDS WILL BE TRAPPED IN EMG
                                    --start rev 003
                                    --SUM (MAIN.NETPAYABLE)        ENTRY_NETVALUE,
                                    SUM(
                                        CASE
                                            WHEN(MAIN.CP_GSTIN_NO IS NOT NULL AND DET.QTY < 0)
                                            THEN
                                                ABS(MAIN.NETPAYABLE)
                                            ELSE
                                                MAIN.NETPAYABLE   
                                        END) ENTRY_NETVALUE, 
                                    --end rev 003
                                    CASE
                                       WHEN(    MAIN.CP_GSTIN_NO IS NOT NULL
                                                AND DET.QTY > 0) -- Returns shall be sent to B2CS, so consolidated shall be sent. Seggregation in rev : 003
                                            OR (    MAIN.CP_GSTIN_NO IS NULL
                                                AND MAIN.NETPAYABLE >= 250000
                                                AND coalesce(MAIN.FINTRADEGRP_CODE, 1) = 2)                  
                                       THEN
                                          MAIN.BILLNO
                                       ELSE
                                          -- start rev : 002
                                          --'CONSOLIDATED'
                                          --'CON-'||ownersite.doc_identification_no||'-'||to_char(trunc((main.billdate)),'ddmmyyyy')
                                            case when coalesce(det.qty,0) >=0 then  
                                                'CI-'||ownersite.doc_identification_no||'-'||to_char(date_trunc('day', main.billdate),'ddmmyy')||'-'||coalesce(main.cp_gstin_state_code, substr('19ABCDE1234D12Z',1,2))
                                                else
                                                --start rev 003
                                                case when(MAIN.CP_GSTIN_NO IS NOT NULL AND coalesce(DET.QTY,0) < 0) 
                                                    then MAIN.BILLNO  
                                                --end rev 003       
                                                   else
                                                'CR-'||ownersite.doc_identification_no||'-'||to_char(date_trunc('day', main.billdate),'ddmmyy')||'-'||coalesce(main.cp_gstin_state_code, substr('19ABCDE1234D12Z',1,2))  
                                                end
                                            end
                                         -- end rev : 002
                                    END   REF_DOC_NO,
                                    NULL                         REF_DOC_DATE,
                                    CASE
                                       --start rev 003
                                       --WHEN DET.TAXREGIME = 'G' THEN 'OUTWARD SUPPLY'
                                       --ELSE 'OTHER OUTWARD SUPPLY'
                                       WHEN(DET.TAXREGIME = 'G' and MAIN.CP_GSTIN_NO IS NOT NULL AND DET.QTY < 0) then 'SALES CREDIT NOTE'
                                       ELSE 
                                            case when  DET.TAXREGIME = 'G' THEN 'OUTWARD SUPPLY'
                                       else
                                       'OTHER OUTWARD SUPPLY'
                                       end
                                       --end rev 003
                                    END
                                       GST_APPLICABILITY,
                                    NULL                         ETIN,
                                    CASE
                                       WHEN MAIN.CP_GSTIN_NO IS NOT NULL  --start rev 003 AND DET.QTY > 0 --end rev 003
                                       THEN
                                          MAIN.CP_GSTIN_NO
                                       ELSE
                                          NULL
                                    END  CP_GSTIN_NO,
                                    -- start rev : 002
                                    --MAIN.CP_GSTIN_STATE_CODE     CP_GSTIN_STATE_CODE,
                                    coalesce(MAIN.CP_GSTIN_STATE_CODE, SUBSTR(PGSTIN,1,2)) CP_GSTIN_STATE_CODE,
                                    -- end rev : 002
                                    CASE
                                       WHEN MAIN.CP_GSTIN_NO IS NOT NULL  --start rev 003 AND DET.QTY > 0 --end rev 003
                                       THEN
                                          CP.GST_REGISTRATION_DATE
                                       ELSE
                                          NULL
                                    END
                                       CP_GSTIN_REGISTRATION_DATE,
                                    NULL                         CP_CODE,
                                    CASE
                                       WHEN MAIN.CP_GSTIN_NO IS NOT NULL  --start rev 003 AND DET.QTY > 0 --end rev 003
                                       THEN
                                          'Normal Registered'
                                       ELSE
                                          NULL
                                    END
                                       CP_GST_REGISTRATION_STATUS,
                                    CASE
                                       WHEN MAIN.CP_GSTIN_NO IS NOT NULL  --start rev 003 AND DET.QTY > 0 --end rev 003
                                       THEN
                                          CP.FIRST_NAME || ' ' || CP.LAST_NAME
                                       ELSE
                                          NULL
                                    END
                                       CP_NAME,
                                    CASE
                                       WHEN MAIN.CP_GSTIN_NO IS NOT NULL  --start rev 003 AND DET.QTY > 0 --end rev 003
                                       THEN
                                          CP.PAN
                                       ELSE
                                          NULL
                                    END
                                       CP_PAN,
                                    NULL                         CP_CONTACT_PERSON,
                                    CASE
                                       WHEN MAIN.CP_GSTIN_NO IS NOT NULL  --start rev 003 AND DET.QTY > 0 --end rev 003
                                       THEN
                                          CP.MOBILE
                                       ELSE
                                          NULL
                                    END
                                       CP_MOBILE,
                                    CASE
                                       WHEN MAIN.CP_GSTIN_NO IS NOT NULL  --start rev 003 AND DET.QTY > 0 --end rev 003
                                       THEN
                                          CP.EMAIL
                                       ELSE
                                          NULL
                                    END
                                       CP_EMAIL,
                                    NULL                         CP_CLASS,
                                    NULL                         CP_AGENT_NAME,
                                    NULL                         CP_AGENT_CLASS,
                                    --start rev 003
                                    --NULL                         ORIGINAL_INV_ENT_NO,
                                    CASE
                                       WHEN(MAIN.CP_GSTIN_NO IS NOT NULL AND DET.QTY < 0)
                                       THEN
                                          DET.REF_BILLNO
                                       ELSE
                                          NULL
                                    END
                                       ORIGINAL_INV_ENT_NO,
                                    --NULL                         ORIGINAL_INV_ENT_DT,
                                    CASE
                                       WHEN(MAIN.CP_GSTIN_NO IS NOT NULL AND DET.QTY < 0)
                                       THEN
                                          DET.REF_BILLDATE
                                       ELSE
                                          NULL
                                    END
                                       ORIGINAL_INV_ENT_DT,
                                    --NULL                         ORIGINAL_INV_ENT_NETVALUE,
                                    CASE
                                       WHEN(MAIN.CP_GSTIN_NO IS NOT NULL AND DET.QTY < 0)
                                       THEN
                                          MAIN2.NETPAYABLE
                                       ELSE
                                          NULL
                                    END
                                       ORIGINAL_INV_ENT_NETVALUE,
                                    --end rev 003
                                    NULL                         ORIGINAL_INV_REFNO,
                                    NULL                         ORIGINAL_INV_REFDT,
                                    --start rev 003
                                    --NULL                         DNCN_REASON,
                                    CASE
                                       WHEN(MAIN.CP_GSTIN_NO IS NOT NULL AND DET.QTY < 0)
                                       THEN
                                          'Sales Return'
                                       ELSE
                                          NULL
                                    END
                                        DNCN_REASON,
                                    --end rev 003
                                    ITEM.HSN_CODE                HSN_SAC_CODE,
                                    ITEM.HSN_DESCRIPTION         HSN_SAC_DESC,
                                    ITEM.UOM                     UOM,
                                    CASE
                                       WHEN DET.TAXREGIME = 'G' THEN DET.CGSTRATE
                                       ELSE NULL
                                    END
                                       CGST_RATE,
                                    CASE
                                       WHEN DET.TAXREGIME = 'G' THEN DET.SGSTRATE
                                       ELSE NULL
                                    END
                                       SGST_RATE,
                                    CASE
                                       WHEN DET.TAXREGIME = 'G' THEN DET.IGSTRATE
                                       ELSE NULL
                                    END
                                       IGST_RATE,
                                    CASE
                                       WHEN DET.TAXREGIME = 'G'
                                       THEN
                                          CASE
                                             WHEN coalesce(DET.CESSRATE, 0) =
                                                     EMG_GSTADD_CESSRATE(
                                                        date_trunc('day', MAIN.BILLDATE),
                                                        MAIN.OWNER_GSTIN_STATE_CODE,
                                                        DET.ICODE)
                                             THEN
                                                0
                                             ELSE
                                                coalesce(DET.CESSRATE, 0)
                                          END
                                       ELSE
                                          NULL
                                    END
                                       CESS_RATE,
                                    CASE
                                       WHEN DET.TAXREGIME = 'G'
                                       THEN
                                            coalesce(DET.CGSTRATE, 0)
                                          + coalesce(DET.SGSTRATE, 0)
                                          + coalesce(DET.IGSTRATE, 0)
                                       ELSE
                                          NULL
                                    END
                                       TOTAL_TAXRATE,
                                    --start rev 003
                                    --SUM (DET.QTY)                QUANTITY,
                                    SUM(CASE
                                            WHEN(MAIN.CP_GSTIN_NO IS NOT NULL AND DET.QTY < 0)
                                                THEN
                                                    ABS(DET.QTY)
                                            ELSE
                                                DET.QTY
                                        END) QUANTITY,
                                    /*SUM (
                                       CASE
                                          WHEN DET.TAXREGIME = 'G'
                                          THEN
                                             NVL (DET.TAXABLEAMT, 0)
                                          ELSE
                                             NULL
                                       END)
                                       TAXABLE_AMOUNT,*/
                                    SUM(
                                       CASE
                                          WHEN DET.TAXREGIME = 'G'
                                          THEN
                                            CASE
                                                WHEN(MAIN.CP_GSTIN_NO IS NOT NULL AND DET.QTY < 0)
                                                    THEN
                                                        ABS(coalesce(DET.TAXABLEAMT, 0))
                                                    ELSE
                                                        coalesce(DET.TAXABLEAMT, 0)
                                            END
                                          ELSE
                                             NULL
                                       END)
                                       TAXABLE_AMOUNT,
                                    /*SUM (
                                       CASE
                                          WHEN DET.TAXREGIME = 'G'
                                          THEN
                                             NVL (DET.CGSTAMT, 0)
                                          ELSE
                                             NULL
                                       END)
                                       CGST_AMOUNT,*/
                                    SUM(
                                       CASE
                                          WHEN DET.TAXREGIME = 'G'
                                          THEN
                                             CASE
                                                WHEN(MAIN.CP_GSTIN_NO IS NOT NULL AND DET.QTY < 0)
                                                    THEN
                                                        ABS(coalesce(DET.CGSTAMT, 0))
                                                    ELSE
                                                        coalesce(DET.CGSTAMT, 0)
                                             END
                                          ELSE
                                             NULL
                                       END)
                                       CGST_AMOUNT,
                                    /*SUM (
                                       CASE
                                          WHEN DET.TAXREGIME = 'G'
                                          THEN
                                             NVL (DET.SGSTAMT, 0)
                                          ELSE
                                             NULL
                                       END)
                                       SGST_AMOUNT,*/
                                     SUM(
                                       CASE
                                          WHEN DET.TAXREGIME = 'G'
                                          THEN
                                             CASE
                                                WHEN(MAIN.CP_GSTIN_NO IS NOT NULL AND DET.QTY < 0)
                                                    THEN
                                                        ABS(coalesce(DET.SGSTAMT, 0))
                                                ELSE
                                                        coalesce(DET.SGSTAMT, 0)
                                              END
                                          ELSE
                                             NULL
                                       END)
                                       SGST_AMOUNT,  
                                    /*SUM (
                                       CASE
                                          WHEN DET.TAXREGIME = 'G'
                                          THEN
                                             NVL (DET.IGSTAMT, 0)
                                          ELSE
                                             NULL
                                       END)
                                       IGST_AMOUNT,*/
                                    SUM(
                                       CASE
                                          WHEN DET.TAXREGIME = 'G'
                                          THEN
                                             CASE
                                                 WHEN(MAIN.CP_GSTIN_NO IS NOT NULL AND DET.QTY < 0)
                                                     THEN
                                                          ABS(coalesce(DET.IGSTAMT, 0))
                                                 ELSE
                                                          coalesce(DET.IGSTAMT, 0)
                                             END 
                                          ELSE
                                             NULL
                                       END)
                                       IGST_AMOUNT,
                                    /*SUM (
                                       CASE
                                          WHEN DET.TAXREGIME = 'G'
                                          THEN
                                             CASE
                                                WHEN NVL (DET.CESSRATE, 0) =
                                                        EMG_GSTADD_CESSRATE (
                                                           TRUNC (MAIN.BILLDATE),
                                                           MAIN.OWNER_GSTIN_STATE_CODE,
                                                           DET.ICODE)
                                                THEN
                                                   0
                                                ELSE
                                                   NVL (DET.CESSAMT, 0)
                                             END
                                          ELSE
                                             NULL
                                       END)
                                       CESS_AMOUNT,*/
                                    SUM(
                                       CASE
                                          WHEN DET.TAXREGIME = 'G'
                                          THEN
                                             CASE
                                                WHEN coalesce(DET.CESSRATE, 0) =
                                                        EMG_GSTADD_CESSRATE(
                                                           date_trunc('day', MAIN.BILLDATE),
                                                           MAIN.OWNER_GSTIN_STATE_CODE,
                                                           DET.ICODE)
                                                THEN
                                                   0
                                                ELSE
                                                   CASE
                                                      WHEN(MAIN.CP_GSTIN_NO IS NOT NULL AND DET.QTY < 0)
                                                          THEN
                                                               ABS(coalesce(DET.CESSAMT, 0))
                                                      ELSE
                                                          coalesce(DET.CESSAMT, 0)
                                                    END        
                                             END
                                          ELSE
                                             NULL
                                       END)
                                       CESS_AMOUNT,
                                    --SUM (DET.NETAMT)             NET_AMOUNT,
                                    SUM(CASE
                                            WHEN(MAIN.CP_GSTIN_NO IS NOT NULL AND DET.QTY < 0)
                                                THEN
                                                    ABS(DET.NETAMT)
                                            ELSE
                                                DET.NETAMT
                                        END) NET_AMOUNT,
                                    --end rev 003
                                    NULL                         INPUT_ELIGIBILITY,
                                    NULL                         INPUT_CGST_AMOUNT,
                                    NULL                         INPUT_SGST_AMOUNT,
                                    NULL                         INPUT_IGST_AMOUNT,
                                    NULL                         INPUT_CESS_AMOUNT,
                                    OWNERSITE.DOC_IDENTIFICATION_NO DOC_IDENTIFICATION_NO   
                               FROM ginview.lv_site ownersite, ginview.lv_item item, psite_posbill main
LEFT OUTER JOIN ginview.lv_pos_customer cp ON (MAIN.PSITE_CUSTOMER_CODE = CP.CODE)
LEFT OUTER JOIN psite_posstlm stlm ON (MAIN.ADMSITE_CODE = STLM.ADMSITE_CODE AND date_trunc('day', MAIN.BILLDATE) = STLM.STLMFOR)
, psite_posbillitem det
LEFT OUTER JOIN psite_posbill main2 ON (DET.REF_PSITE_POSBILL_CODE = MAIN2.CODE)
WHERE MAIN.CODE = DET.PSITE_POSBILL_CODE AND MAIN.ADMSITE_CODE = OWNERSITE.SITECODE    AND DET.ICODE = ITEM.ITEM_CODE --start rev 003
  --end rev 003
  AND date_trunc('day', MAIN.BILLDATE) BETWEEN PDTFR AND PDTTO AND OWNERSITE.GST_IDENTIFICATION_NO = PGSTIN AND coalesce(UPPER(STLM.STATUS), 'O') = 'C' /* CASE HANDLING DETAILS FOR NEXT WHERE CLAUSE
                                    Problem Statement -
                                    --------------------
                                       Vedant Fashions Pvt. Ltd. (OU1) has another company Manyavar Creation Pvt. Ltd. (OU2)
                                       Vedant Fashions has Manyavar Creation Pvt. Ltd. as Franchise.
                                       Under Vedant, managed stores are created for Manyavar. For Vedant, Manyavar is track secondary.
                                       Manyavar does Excel Import (unmanaged owned store sale) of the Sale done at the Stores
                                           and considers this as primary sale.
                                       So right now, same sale transaction is posted in the database as Secondary (POS bill)
                                           for Vedant and Primary (Unmanaged owned store sale) for Manyavar.
                                       While uploading to EMG, same data is getting uploaded twice.
                                    Solution -
                                    -----------
                                       If the requested GSTIN exists in registered GSTIN in the system and the same is also available
                                           in the MS-CO-OM-TS type of sites, then the system won't sync POS bills for the same as
                                           unmanaged owned store (primary) sale data is already getting synced.
                                    END CASE HANDLING DETAILS*/
  AND (   OWNERSITE.SITE_TYPE <> 'MS-CO-OM-TS'
                                         OR (    OWNERSITE.SITE_TYPE = 'MS-CO-OM-TS'
                                             AND PGSTIN NOT IN (SELECT GSTIN_NO
                                                                  FROM ADMGSTIN))) GROUP BY OWNERSITE.NAME,
                                    OWNERSITE.DOC_IDENTIFICATION_NO,
                                    date_trunc('day', MAIN.BILLDATE),
                                    CASE
                                       WHEN(    MAIN.CP_GSTIN_NO IS NOT NULL
                                                AND DET.QTY > 0) -- Returns shall be sent to B2CS, so consolidated shall be sent.
                                            OR (    MAIN.CP_GSTIN_NO IS NULL
                                                AND MAIN.NETPAYABLE >= 250000
                                                AND coalesce(MAIN.FINTRADEGRP_CODE, 1) = 2)
                                       THEN
                                          coalesce(MAIN.GSTDOCNO, MAIN.BILLNO)
                                          ELSE
                                          -- start rev : 002
                                          --'CONSOLIDATED'
                                          --'CON-'||ownersite.doc_identification_no||'-'||to_char(trunc((main.billdate)),'ddmmyyyy')
                                            case when coalesce(det.qty,0) >=0 then  
                                                'CI-'||ownersite.doc_identification_no||'-'||to_char(date_trunc('day', main.billdate),'ddmmyy')||'-'||coalesce(main.cp_gstin_state_code, substr('19ABCDE1234D12Z',1,2))
                                                else
                                                --start rev 003 segregation of B2B retrun
                                                case when(MAIN.CP_GSTIN_NO IS NOT NULL AND coalesce(DET.QTY,0) < 0) 
                                                    then coalesce(MAIN.GSTDOCNO, MAIN.BILLNO)  
                                                --end rev 003       
                                                   else
                                                'CR-'||ownersite.doc_identification_no||'-'||to_char(date_trunc('day', main.billdate),'ddmmyy')||'-'||coalesce(main.cp_gstin_state_code, substr('19ABCDE1234D12Z',1,2))  
                                                end
                                            end
                                         -- end rev : 002
                                    END,
                                    coalesce(MAIN.FINTRADEGRP_CODE, 6), -- NULL RECORDS WILL BE TRAPPED IN EMG
                                    CASE
                                       WHEN(    MAIN.CP_GSTIN_NO IS NOT NULL
                                                AND DET.QTY > 0) -- Returns shall be sent to B2CS, so consolidated shall be sent.
                                            OR (    MAIN.CP_GSTIN_NO IS NULL
                                                AND MAIN.NETPAYABLE >= 250000
                                                AND coalesce(MAIN.FINTRADEGRP_CODE, 1) = 2)                  
                                       THEN
                                          MAIN.BILLNO
                                       ELSE
                                          -- start rev : 002
                                          --'CONSOLIDATED'
                                          --'CON-'||ownersite.doc_identification_no||'-'||to_char(trunc((main.billdate)),'ddmmyyyy')
                                            case when coalesce(det.qty,0) >=0 then  
                                                'CI-'||ownersite.doc_identification_no||'-'||to_char(date_trunc('day', main.billdate),'ddmmyy')||'-'||coalesce(main.cp_gstin_state_code, substr('19ABCDE1234D12Z',1,2))
                                                else
                                                --start rev 003
                                                case when(MAIN.CP_GSTIN_NO IS NOT NULL AND coalesce(DET.QTY,0) < 0) 
                                                    then MAIN.BILLNO  
                                                --end rev 003       
                                                   else
                                                'CR-'||ownersite.doc_identification_no||'-'||to_char(date_trunc('day', main.billdate),'ddmmyy')||'-'||coalesce(main.cp_gstin_state_code, substr('19ABCDE1234D12Z',1,2))  
                                                end
                                            end
                                         -- end rev : 002
                                    END,
                                    CASE
                                       --start rev 003
                                       --WHEN DET.TAXREGIME = 'G' THEN 'OUTWARD SUPPLY'
                                       --ELSE 'OTHER OUTWARD SUPPLY'
                                       WHEN(DET.TAXREGIME = 'G' and MAIN.CP_GSTIN_NO IS NOT NULL AND DET.QTY < 0) then 'SALES CREDIT NOTE'
                                       ELSE 
                                            case when  DET.TAXREGIME = 'G' THEN 'OUTWARD SUPPLY'
                                       else
                                       'OTHER OUTWARD SUPPLY'
                                       end
                                       --end rev 003
                                    END,
                                    CASE
                                       WHEN MAIN.CP_GSTIN_NO IS NOT NULL  --start rev 003 AND DET.QTY > 0 --end rev 003
                                       THEN
                                          MAIN.CP_GSTIN_NO
                                       ELSE
                                          NULL
                                    END,
                                    -- start rev : 002
                                    --MAIN.CP_GSTIN_STATE_CODE,
                                    coalesce(MAIN.CP_GSTIN_STATE_CODE, SUBSTR(PGSTIN,1,2)),
                                    -- end rev : 002
                                    CASE
                                       WHEN MAIN.CP_GSTIN_NO IS NOT NULL  --start rev 003 AND DET.QTY > 0 --end rev 003
                                       THEN
                                          CP.GST_REGISTRATION_DATE
                                       ELSE
                                          NULL
                                    END,
                                    CASE
                                       WHEN MAIN.CP_GSTIN_NO IS NOT NULL  --start rev 003 AND DET.QTY > 0 --end rev 003
                                       THEN
                                          'Normal Registered'
                                       ELSE
                                          NULL
                                    END,
                                    CASE
                                       WHEN MAIN.CP_GSTIN_NO IS NOT NULL  --start rev 003 AND DET.QTY > 0 --end rev 003
                                       THEN
                                          CP.FIRST_NAME || ' ' || CP.LAST_NAME
                                       ELSE
                                          NULL
                                    END,
                                    CASE
                                       WHEN MAIN.CP_GSTIN_NO IS NOT NULL  --start rev 003 AND DET.QTY > 0 --end rev 003
                                       THEN
                                          CP.PAN
                                       ELSE
                                          NULL
                                    END,
                                    CASE
                                       WHEN MAIN.CP_GSTIN_NO IS NOT NULL  --start rev 003 AND DET.QTY > 0 --end rev 003
                                       THEN
                                          CP.MOBILE
                                       ELSE
                                          NULL
                                    END,
                                    CASE
                                       WHEN MAIN.CP_GSTIN_NO IS NOT NULL  --start rev 003 AND DET.QTY > 0 --end rev 003
                                       THEN
                                          CP.EMAIL
                                       ELSE
                                          NULL
                                    END,
                                    --start rev 003
                                    CASE
                                       WHEN(MAIN.CP_GSTIN_NO IS NOT NULL AND DET.QTY < 0)
                                       THEN
                                          DET.REF_BILLNO
                                       ELSE
                                          NULL
                                    END,
                                    CASE
                                       WHEN(MAIN.CP_GSTIN_NO IS NOT NULL AND DET.QTY < 0)
                                       THEN
                                          DET.REF_BILLDATE
                                       ELSE
                                          NULL
                                    END,
                                    CASE
                                       WHEN(MAIN.CP_GSTIN_NO IS NOT NULL AND DET.QTY < 0)
                                       THEN
                                          MAIN2.NETPAYABLE
                                       ELSE
                                          NULL
                                    END,
                                    CASE
                                       WHEN(MAIN.CP_GSTIN_NO IS NOT NULL AND DET.QTY < 0)
                                       THEN
                                          'Sales Return'
                                       ELSE
                                          NULL
                                    END,
                                    --end rev 003
                                    ITEM.HSN_CODE,
                                    ITEM.HSN_DESCRIPTION,
                                    ITEM.UOM,
                                    CASE
                                       WHEN DET.TAXREGIME = 'G' THEN DET.CGSTRATE
                                       ELSE NULL
                                    END,
                                    CASE
                                       WHEN DET.TAXREGIME = 'G' THEN DET.SGSTRATE
                                       ELSE NULL
                                    END,
                                    CASE
                                       WHEN DET.TAXREGIME = 'G' THEN DET.IGSTRATE
                                       ELSE NULL
                                    END,
                                    CASE
                                       WHEN DET.TAXREGIME = 'G'
                                       THEN
                                          CASE
                                             WHEN coalesce(DET.CESSRATE, 0) =
                                                     EMG_GSTADD_CESSRATE(
                                                        date_trunc('day', MAIN.BILLDATE),
                                                        MAIN.OWNER_GSTIN_STATE_CODE,
                                                        DET.ICODE)
                                             THEN
                                                0
                                             ELSE
                                                coalesce(DET.CESSRATE, 0)
                                          END
                                       ELSE
                                          NULL
                                    END,
                                    CASE
                                       WHEN DET.TAXREGIME = 'G'
                                       THEN
                                            coalesce(DET.CGSTRATE, 0)
                                          + coalesce(DET.SGSTRATE, 0)
                                          + coalesce(DET.IGSTRATE, 0)
                                       ELSE
                                          NULL
                                    END
                                -- start rev : 002
                                ) z1
                                -- end rev : 002
                           
UNION ALL

                           SELECT 'SND: RETAIL SALE'           ENTRY_SOURCE,
                                    OWNERSITE.NAME               ENTRY_SITE,
                                    MAIN.CSDATE                  ENTRY_DATE,
                                    -- START REV : OMS CHANGES
                                    --MAIN.SCHEME_DOCNO            ENTRY_NO,
                                    coalesce(MAIN.GST_DOC_NO, MAIN.SCHEME_DOCNO) ENTRY_NO,
                                    -- END REV : OMS CHANGES
                                    coalesce(MAIN.FINTRADEGRP_CODE, 6) ENTRY_TRADETYPECODE, -- NULL RECORDS WILL BE TRAPPED IN EMG
                                    -- START REV : OMS CHANGES
                                    --SUM (MAIN.NETPAYABLE)        ENTRY_NETVALUE,
                                    -- start rev : manash suggested by BA dtd. 03-08-2022 time : 16:13
                                    --SUM (CASE WHEN MAIN.GSTAPPL = 'C' THEN MAIN.NETPAYABLE * -1 ELSE MAIN.NETPAYABLE END)        ENTRY_NETVALUE,
                                    CASE WHEN MAIN.GSTAPPL = 'C' THEN MAIN.NETPAYABLE * -1 ELSE MAIN.NETPAYABLE END        ENTRY_NETVALUE,
                                    -- end rev : manash suggested by BA dtd. 03-08-2022 time : 16:13
                                    -- END REV : OMS CHANGES
                                    MAIN.REFNO                   REF_DOC_NO,
                                    NULL                         REF_DOC_DATE,
                                    CASE
                                       WHEN MAIN.GSTAPPL = 'Y' THEN 'OUTWARD SUPPLY'
                                       -- START REV : OMS CHANGES
                                       WHEN MAIN.GSTAPPL = 'C' THEN 'SALES CREDIT NOTE'
                                        -- END REV : OMS CHANGES
                                       ELSE 'OTHER OUTWARD SUPPLY'
                                    END
                                       GST_APPLICABILITY,
                                    CASE
                                       WHEN MAIN.CHANNELTYPE = 'ETL'
                                       THEN
                                          MOPCTRLAC.GST_IDENTIFICATION_NO
                                       ELSE
                                          NULL
                                    END
                                       ETIN,
                                    -- START REV : OMS CHANGES
                                    /*
                                    --Issue id 106618
                                    --CP.GST_IDENTIFICATION_NO     CP_GSTIN_NO,
                                    --CP.GST_STATE_CODE            CP_GSTIN_STATE_CODE,
                                    NVL(MAIN.CP_GSTIN_NO, MAIN.BILL_GSTIN_NO)                 CP_GSTIN_NO,
                                    NVL(MAIN.CP_GSTIN_STATE_CODE, MAIN.BILL_GST_STATE_CODE)        CP_GSTIN_STATE_CODE,
                                    --Issue id 106618
                                    CP.GST_REGISTRATION_DATE
                                       CP_GSTIN_REGISTRATION_DATE,
                                    NULL                         CP_CODE,
                                    CASE
                                       WHEN CP.GST_IDENTIFICATION_NO IS NOT NULL
                                       THEN
                                          'Normal Registered'
                                       ELSE
                                          NULL
                                    END
                                       CP_GST_REGISTRATION_STATUS,
                                    CASE
                                       WHEN CP.GST_IDENTIFICATION_NO IS NOT NULL
                                       THEN
                                          CP.FIRST_NAME || ' ' || CP.LAST_NAME
                                       ELSE
                                          NULL
                                    END
                                       CP_NAME,
                                    CASE
                                       WHEN CP.GST_IDENTIFICATION_NO IS NOT NULL
                                       THEN
                                          CP.PAN
                                       ELSE
                                          NULL
                                    END
                                       CP_PAN,
                                    NULL                         CP_CONTACT_PERSON,
                                    CASE
                                       WHEN CP.GST_IDENTIFICATION_NO IS NOT NULL
                                       THEN
                                          CP.MOBILE
                                       ELSE
                                          NULL
                                    END
                                       CP_MOBILE,
                                    CASE
                                       WHEN CP.GST_IDENTIFICATION_NO IS NOT NULL
                                       THEN
                                          CP.EMAIL
                                       ELSE
                                          NULL
                                    END
                                       CP_EMAIL,
                                     */
                                    coalesce(MAIN.BILL_GSTIN_NO, MAIN.CP_GSTIN_NO)     CP_GSTIN_NO,
                                    -- start suggested by BD dtd. 03-08-2022 time : 15:35
                                    /*CASE
                                       WHEN MAIN.BILL_GSTIN_NO IS NOT NULL
                                       THEN MAIN.BILL_GST_STATE_CODE
                                       ELSE main.CP_GSTIN_STATE_CODE --NULL
                                    END     CP_GSTIN_STATE_CODE,
                                    */
                                    coalesce(MAIN.BILL_GST_STATE_CODE, MAIN.cp_gstin_state_code)
                                    CP_GSTIN_STATE_CODE,
                                    -- end suggested by BD dtd. 03-08-2022 time : 15:35                                   
                                    CASE
                                       WHEN MAIN.BILL_GSTIN_NO IS NOT NULL
                                       THEN MAIN.BILL_GST_DATE
                                       ELSE NULL
                                    END     CP_GSTIN_REGISTRATION_DATE, 
                                    NULL     CP_CODE,
                                    NULL     CP_GST_REGISTRATION_STATUS, 
                                    CASE
                                       WHEN MAIN.BILL_GSTIN_NO IS NOT NULL
                                       THEN MAIN.BILL_FNAME || ' ' || MAIN.BILL_LNAME
                                       ELSE NULL
                                    END     CP_NAME, 
                                    CASE
                                       WHEN MAIN.BILL_GSTIN_NO IS NOT NULL
                                       THEN MAIN.BILL_PANNO
                                       ELSE NULL
                                    END     CP_PAN, 
                                    NULL    CP_CONTACT_PERSON,
                                    CASE
                                       WHEN MAIN.BILL_GSTIN_NO IS NOT NULL
                                       THEN MAIN.BILL_MOBILE
                                       ELSE NULL
                                    END     CP_MOBILE, 
                                    CASE
                                       WHEN MAIN.BILL_GSTIN_NO IS NOT NULL
                                       THEN MAIN.BILL_EMAIL
                                       ELSE NULL
                                    END     CP_EMAIL,
                                    -- END REV : OMS CHANGES
                                    NULL                         CP_CLASS,
                                    NULL                         CP_AGENT_NAME,
                                    NULL                         CP_AGENT_CLASS,
                                    -- START REV : OMS CHANGES
                                    /*
                                    NULL                         ORIGINAL_INV_ENT_NO,
                                    NULL                         ORIGINAL_INV_ENT_DT,
                                    NULL                         ORIGINAL_INV_ENT_NETVALUE,
                                    NULL                         ORIGINAL_INV_REFNO,
                                    NULL                         ORIGINAL_INV_REFDT,
                                    NULL                         DNCN_REASON,
                                    */
                                    CASE WHEN MAIN.GSTAPPL = 'C' 
                                              AND MAIN.REF_SALCSMAIN_CODE IS NOT NULL 
                                         THEN coalesce(ORIGINAL_INV.GST_DOC_NO, ORIGINAL_INV.SCHEME_DOCNO)
                                         ELSE MAIN.INTG_PARENTINVOICENO END           ORIGINAL_INV_ENT_NO,
                                    CASE WHEN MAIN.GSTAPPL = 'C' 
                                              AND MAIN.REF_SALCSMAIN_CODE IS NOT NULL 
                                         THEN ORIGINAL_INV.CSDATE
                                         ELSE date_trunc('day', MAIN.INTG_PARENTINVOICEDATE) END  ORIGINAL_INV_ENT_DT,
                                    CASE WHEN MAIN.GSTAPPL = 'C' 
                                              AND MAIN.REF_SALCSMAIN_CODE IS NOT NULL 
                                         THEN ORIGINAL_INV.NETPAYABLE
                                         ELSE NULL END                                ORIGINAL_INV_ENT_NETVALUE,
                                    CASE WHEN MAIN.GSTAPPL = 'C' 
                                              AND MAIN.REF_SALCSMAIN_CODE IS NOT NULL 
                                         THEN ORIGINAL_INV.REFNO
                                         ELSE NULL END                                ORIGINAL_INV_REFNO,
                                    NULL                                              ORIGINAL_INV_REFDT,
                                    CASE WHEN MAIN.GSTAPPL = 'C' THEN 'Sales Return' ELSE NULL END   DNCN_REASON,
                                    -- END REV : OMS CHANGES
                                    ITEM.HSN_CODE                HSN_SAC_CODE,
                                    ITEM.HSN_DESCRIPTION         HSN_SAC_DESC,
                                    ITEM.UOM                     UOM,
                                    CASE
                                       WHEN DET.TAXREGIME = 'G' THEN DET.CGSTRATE
                                       ELSE NULL
                                    END
                                       CGST_RATE,
                                    CASE
                                       WHEN DET.TAXREGIME = 'G' THEN DET.SGSTRATE
                                       ELSE NULL
                                    END
                                       SGST_RATE,
                                    CASE
                                       WHEN DET.TAXREGIME = 'G' THEN DET.IGSTRATE
                                       ELSE NULL
                                    END
                                       IGST_RATE,
                                    CASE
                                       WHEN DET.TAXREGIME = 'G'
                                       THEN
                                          CASE
                                             WHEN coalesce(DET.CESSRATE, 0) =
                                                     EMG_GSTADD_CESSRATE(
                                                        date_trunc('day', MAIN.CSDATE),
                                                        MAIN.OWNER_GSTIN_STATE_CODE,
                                                        DET.ICODE)
                                             THEN
                                                0
                                             ELSE
                                                coalesce(DET.CESSRATE, 0)
                                          END
                                       ELSE
                                          NULL
                                    END
                                       CESS_RATE,
                                    CASE
                                       WHEN DET.TAXREGIME = 'G'
                                       THEN
                                            coalesce(DET.CGSTRATE, 0)
                                          + coalesce(DET.SGSTRATE, 0)
                                          + coalesce(DET.IGSTRATE, 0)
                                       ELSE
                                          NULL
                                    END
                                       TOTAL_TAXRATE,
                                    -- START REV : OMS CHANGES
                                    --SUM (DET.QTY)                QTY,
                                    SUM(CASE WHEN MAIN.GSTAPPL = 'C' THEN DET.QTY * -1 ELSE DET.QTY END)                QTY,
                                    -- END REV : OMS CHANGES
                                    SUM(
                                       CASE
                                          WHEN DET.TAXREGIME = 'G'
                                          THEN
                                             -- START REV : OMS CHANGES
                                             --NVL (DET.TAXABLEAMT, 0)
                                             CASE WHEN MAIN.GSTAPPL = 'C' THEN coalesce(DET.TAXABLEAMT, 0) * -1
                                                  ELSE coalesce(DET.TAXABLEAMT, 0) END
                                             -- END REV : OMS CHANGES
                                          ELSE
                                             NULL
                                       END)
                                       TAXABLE_AMOUNT,
                                    SUM(
                                       CASE
                                          WHEN DET.TAXREGIME = 'G'
                                          THEN
                                             -- START REV : OMS CHANGES
                                             -- NVL (DET.CGSTAMT, 0)
                                             CASE WHEN MAIN.GSTAPPL = 'C' THEN coalesce(DET.CGSTAMT, 0) * -1
                                                  ELSE coalesce(DET.CGSTAMT, 0) END
                                             -- END REV : OMS CHANGES
                                          ELSE
                                             NULL
                                       END)
                                       CGST_AMOUNT,
                                    SUM(
                                       CASE
                                          WHEN DET.TAXREGIME = 'G'
                                          THEN
                                             -- START REV : OMS CHANGES
                                             -- NVL (DET.SGSTAMT, 0)
                                             CASE WHEN MAIN.GSTAPPL = 'C' THEN coalesce(DET.SGSTAMT, 0) * -1
                                                  ELSE coalesce(DET.SGSTAMT, 0) END
                                             -- END REV : OMS CHANGES
                                          ELSE
                                             NULL
                                       END)
                                       SGST_AMOUNT,
                                    SUM(
                                       CASE
                                          WHEN DET.TAXREGIME = 'G'
                                          THEN
                                             -- START REV : OMS CHANGES
                                             -- NVL (DET.IGSTAMT, 0)
                                             CASE WHEN MAIN.GSTAPPL = 'C' THEN coalesce(DET.IGSTAMT, 0) * -1
                                                  ELSE coalesce(DET.IGSTAMT, 0) END
                                             -- END REV : OMS CHANGES
                                          ELSE
                                             NULL
                                       END)
                                       IGST_AMOUNT,
                                    SUM(
                                       CASE
                                          WHEN DET.TAXREGIME = 'G'
                                          THEN
                                             CASE
                                                WHEN coalesce(DET.CESSRATE, 0) =
                                                        EMG_GSTADD_CESSRATE(
                                                           date_trunc('day', MAIN.CSDATE),
                                                           MAIN.OWNER_GSTIN_STATE_CODE,
                                                           DET.ICODE)
                                                THEN
                                                   0
                                                ELSE
                                                   -- START REV : OMS CHANGES
                                                     -- NVL (DET.CESSAMT, 0)
                                                     CASE WHEN MAIN.GSTAPPL = 'C' THEN coalesce(DET.CESSAMT, 0) * -1
                                                          ELSE coalesce(DET.CESSAMT, 0) END
                                                     -- END REV : OMS CHANGES
                                             END
                                          ELSE
                                             NULL
                                       END)
                                       CESS_AMOUNT,
                                    -- START REV : OMS CHANGES
                                    --SUM (DET.NETAMT)             NET_AMOUNT,
                                    SUM(CASE WHEN MAIN.GSTAPPL = 'C' THEN DET.NETAMT * -1 ELSE DET.NETAMT END)           NET_AMOUNT,
                                    -- END REV : OMS CHANGES
                                    NULL                         INPUT_ELIGIBILITY,
                                    NULL                         INPUT_CGST_AMOUNT,
                                    NULL                         INPUT_SGST_AMOUNT,
                                    NULL                         INPUT_IGST_AMOUNT,
                                    NULL                         INPUT_CESS_AMOUNT
                               FROM ginview.lv_site ownersite, ginview.lv_item item, salcsdet det, salcsmain main
LEFT OUTER JOIN ginview.lv_pos_customer cp ON (MAIN.PSITE_CUSTOMER_CODE = CP.CODE)
LEFT OUTER JOIN ginview.lv_arap_sub_ledger mopctrlac ON (MAIN.PCODE = MOPCTRLAC.CODE)
LEFT OUTER JOIN salcsmain original_inv ON (MAIN.REF_SALCSMAIN_CODE = ORIGINAL_INV.CSCODE)
WHERE MAIN.CSCODE = DET.CSCODE AND MAIN.ADMSITE_CODE = OWNERSITE.SITECODE  AND DET.ICODE = ITEM.ITEM_CODE  -- START REV : OMS CHANGES
  -- END REV : OMS CHANGES
  AND date_trunc('day', MAIN.CSDATE) BETWEEN PDTFR AND PDTTO       --trunc added Mantis id : 0001003
  AND OWNERSITE.GST_IDENTIFICATION_NO = PGSTIN AND coalesce(UPPER(MAIN.RELEASE_STATUS), 'U') = 'P' --AND OWNERSITE.SITE_TYPE NOT LIKE 'MS%' -- Managed site data is already getting pushed from POS Bill table
                                    -- START REV : ZWING CHANGES
                                    /*
                                    AND (   (    OWNERSITE.SITE_TYPE LIKE 'MS%'
                                             AND MAIN.CHANNELTYPE = 'ETL')
                                         OR OWNERSITE.SITE_TYPE NOT LIKE 'MS%' -- Managed site data is already getting pushed from POS Bill table
                                                                              )
                                    */
  AND MAIN.PSITE_POSSTLM_CODE is null -- END REV : ZWING CHANGES
 GROUP BY OWNERSITE.NAME,
                                    MAIN.CSDATE,
                                    -- START REV : OMS CHANGES
                                    --MAIN.SCHEME_DOCNO,
                                    coalesce(MAIN.GST_DOC_NO, MAIN.SCHEME_DOCNO),
                                    -- END REV : OMS CHANGES
                                    coalesce(MAIN.FINTRADEGRP_CODE, 6), -- NULL RECORDS WILL BE TRAPPED IN EMG
                                    CASE WHEN MAIN.GSTAPPL = 'C' THEN MAIN.NETPAYABLE * -1 ELSE MAIN.NETPAYABLE END,
                                    MAIN.REFNO,                                    
                                    CASE
                                       WHEN MAIN.GSTAPPL = 'Y' THEN 'OUTWARD SUPPLY'
                                       -- START REV : OMS CHANGES
                                       WHEN MAIN.GSTAPPL = 'C' THEN 'SALES CREDIT NOTE'
                                        -- END REV : OMS CHANGES
                                       ELSE 'OTHER OUTWARD SUPPLY'
                                    END,
                                    CASE
                                       WHEN MAIN.CHANNELTYPE = 'ETL'
                                       THEN
                                          MOPCTRLAC.GST_IDENTIFICATION_NO
                                       ELSE
                                          NULL
                                    END,
                                    -- START REV : OMS CHANGES
                                    /*
                                    -- start rev ; 001
                                    --CP.GST_IDENTIFICATION_NO,
                                    --CP.GST_STATE_CODE,
                                    NVL(MAIN.CP_GSTIN_NO, MAIN.BILL_GSTIN_NO),
                                    NVL(MAIN.CP_GSTIN_STATE_CODE, MAIN.BILL_GST_STATE_CODE),
                                    -- end rev : 001
                                    CP.GST_REGISTRATION_DATE,
                                    CASE
                                       WHEN CP.GST_IDENTIFICATION_NO IS NOT NULL
                                       THEN
                                          'Normal Registered'
                                       ELSE
                                          NULL
                                    END,
                                    CASE
                                       WHEN CP.GST_IDENTIFICATION_NO IS NOT NULL
                                       THEN
                                          CP.FIRST_NAME || ' ' || CP.LAST_NAME
                                       ELSE
                                          NULL
                                    END,
                                    CASE
                                       WHEN CP.GST_IDENTIFICATION_NO IS NOT NULL
                                       THEN
                                          CP.PAN
                                       ELSE
                                          NULL
                                    END,
                                    CASE
                                       WHEN CP.GST_IDENTIFICATION_NO IS NOT NULL
                                       THEN
                                          CP.MOBILE
                                       ELSE
                                          NULL
                                    END,
                                    CASE
                                       WHEN CP.GST_IDENTIFICATION_NO IS NOT NULL
                                       THEN
                                          CP.EMAIL
                                       ELSE
                                          NULL
                                    END,
                                    */
                                    coalesce(MAIN.BILL_GSTIN_NO, MAIN.CP_GSTIN_NO),
                                    -- start suggested by BD dtd. 03-08-2022 time : 15:35
                                    /*
                                    CASE WHEN MAIN.BILL_GSTIN_NO IS NOT NULL THEN 
                                            MAIN.BILL_GST_STATE_CODE
                                       ELSE 
                                            NULL
                                    END, 
                                    */
                                    coalesce(MAIN.BILL_GST_STATE_CODE, MAIN.CP_GSTIN_STATE_CODE),
                                    -- end suggested by BD dtd. 03-08-2022 time : 15:35
                                    CASE
                                       WHEN MAIN.BILL_GSTIN_NO IS NOT NULL
                                       THEN MAIN.BILL_GST_DATE
                                       ELSE NULL
                                    END,
                                    CASE
                                       WHEN MAIN.BILL_GSTIN_NO IS NOT NULL
                                       THEN MAIN.BILL_FNAME || ' ' || MAIN.BILL_LNAME
                                       ELSE NULL
                                    END , 
                                    CASE
                                       WHEN MAIN.BILL_GSTIN_NO IS NOT NULL
                                       THEN MAIN.BILL_PANNO
                                       ELSE NULL
                                    END , 
                                    CASE
                                       WHEN MAIN.BILL_GSTIN_NO IS NOT NULL
                                       THEN MAIN.BILL_MOBILE
                                       ELSE NULL
                                    END, 
                                    CASE
                                       WHEN MAIN.BILL_GSTIN_NO IS NOT NULL
                                       THEN MAIN.BILL_EMAIL
                                       ELSE NULL
                                    END,
                                    CASE WHEN MAIN.GSTAPPL = 'C' 
                                              AND MAIN.REF_SALCSMAIN_CODE IS NOT NULL 
                                         THEN coalesce(ORIGINAL_INV.GST_DOC_NO, ORIGINAL_INV.SCHEME_DOCNO)
                                         ELSE MAIN.INTG_PARENTINVOICENO END,
                                    CASE WHEN MAIN.GSTAPPL = 'C' 
                                              AND MAIN.REF_SALCSMAIN_CODE IS NOT NULL 
                                         THEN ORIGINAL_INV.CSDATE
                                         ELSE date_trunc('day', MAIN.INTG_PARENTINVOICEDATE) END,
                                    CASE WHEN MAIN.GSTAPPL = 'C' 
                                              AND MAIN.REF_SALCSMAIN_CODE IS NOT NULL 
                                         THEN ORIGINAL_INV.NETPAYABLE
                                         ELSE NULL END,
                                    CASE WHEN MAIN.GSTAPPL = 'C' 
                                              AND MAIN.REF_SALCSMAIN_CODE IS NOT NULL 
                                         THEN ORIGINAL_INV.REFNO
                                         ELSE NULL END,
                                    CASE WHEN MAIN.GSTAPPL = 'C' THEN 'Sales Return' ELSE NULL END,
                                    -- END REV : OMS CHANGES
                                    ITEM.HSN_CODE,
                                    ITEM.HSN_DESCRIPTION,
                                    ITEM.UOM,
                                    CASE
                                       WHEN DET.TAXREGIME = 'G' THEN DET.CGSTRATE
                                       ELSE NULL
                                    END,
                                    CASE
                                       WHEN DET.TAXREGIME = 'G' THEN DET.SGSTRATE
                                       ELSE NULL
                                    END,
                                    CASE
                                       WHEN DET.TAXREGIME = 'G' THEN DET.IGSTRATE
                                       ELSE NULL
                                    END,
                                    CASE
                                       WHEN DET.TAXREGIME = 'G'
                                       THEN
                                          CASE
                                             WHEN coalesce(DET.CESSRATE, 0) =
                                                     EMG_GSTADD_CESSRATE(
                                                        date_trunc('day', MAIN.CSDATE),
                                                        MAIN.OWNER_GSTIN_STATE_CODE,
                                                        DET.ICODE)
                                             THEN
                                                0
                                             ELSE
                                                coalesce(DET.CESSRATE, 0)
                                          END
                                       ELSE
                                          NULL
                                    END,
                                    CASE
                                       WHEN DET.TAXREGIME = 'G'
                                       THEN
                                            coalesce(DET.CGSTRATE, 0)
                                          + coalesce(DET.SGSTRATE, 0)
                                          + coalesce(DET.IGSTRATE, 0)
                                       ELSE
                                          NULL
                                    END     
                           
UNION ALL

                             SELECT 'PROCUREMENT: PURCHASE INVOICE' ENTRY_SOURCE,
                                    OWNERSITE.NAME                ENTRY_SITE,
                                    MAIN.INVDT                    ENTRY_DATE,
                                    MAIN.SCHEME_DOCNO             ENTRY_NO,
                                    MAIN.FINTRADEGRP_CODE         ENTRY_TRADETYPECODE,
                                    MAIN.NETAMT                   ENTRY_NETVALUE,
                                    MAIN.DOCNO                    REF_DOC_NO,
                                    MAIN.DOCDT                    REF_DOC_DATE,
                                    CASE
                                       WHEN MAIN.GSTAPPL = 'Y' THEN 'REVERSE INVOICE'
                                       ELSE 'INWARD SUPPLY'
                                    END
                                       GST_APPLICABILITY,
                                    NULL                          ETIN,
                                    CP.GST_IDENTIFICATION_NO      CP_GSTIN_NO,
                                    CP.GST_STATE_CODE             CP_GSTIN_STATE_CODE,
                                    CP.GST_REGISTRATION_DATE
                                       CP_GSTIN_REGISTRATION_DATE,
                                    MAIN.PCODE                    CP_CODE,
                                    NULL
                                       CP_GST_REGISTRATION_STATUS,
                                    NULL                          CP_NAME,
                                    NULL                          CP_PAN,
                                    NULL                          CP_CONTACT_PERSON,
                                    NULL                          CP_MOBILE,
                                    NULL                          CP_EMAIL,
                                    NULL                          CP_CLASS,
                                    NULL                          CP_AGENT_NAME,
                                    NULL                          CP_AGENT_CLASS,
                                    NULL                          ORIGINAL_INV_ENT_NO,
                                    NULL                          ORIGINAL_INV_ENT_DT,
                                    NULL
                                       ORIGINAL_INV_ENT_NETVALUE,
                                    NULL                          ORIGINAL_INV_REFNO,
                                    NULL                          ORIGINAL_INV_REFDT,
                                    NULL                          DNCN_REASON,
                                    ITEM.HSN_CODE                 HSN_SAC_CODE,
                                    ITEM.HSN_DESCRIPTION          HSN_SAC_DESC,
                                    ITEM.UOM                      UOM,
                                    TAX.CGST_RATE                 CGST_RATE,
                                    TAX.SGST_RATE                 SGST_RATE,
                                    TAX.IGST_RATE                 IGST_RATE,
                                    TAX.CESS_RATE                 CESS_RATE,
                                    TAX.CGST_RATE + TAX.SGST_RATE + TAX.IGST_RATE
                                       TOTAL_TAXRATE,
                                    SUM(DET.QTY)                 QUANTITY,
                                    SUM(TAX.TAXABLE_AMOUNT)      TAXABLE_AMOUNT,
                                    SUM(TAX.CGST_AMOUNT)         CGST_AMOUNT,
                                    SUM(TAX.SGST_AMOUNT)         SGST_AMOUNT,
                                    SUM(TAX.IGST_AMOUNT)         IGST_AMOUNT,
                                    SUM(TAX.CESS_AMOUNT)         CESS_AMOUNT,
                                    SUM(
                                         coalesce(DET.NETAMT, 0)
                                       + coalesce(TAX.TAX_CHARGE_AMOUNT, 0)
                                       + coalesce(OTX.OTHER_CHARGE_AMOUNT, 0))
                                       NET_AMOUNT,
                                    CASE
                                       WHEN TAX.TAXABLE_AMOUNT IS NOT NULL
                                       THEN
                                          DET.GST_ITC_APPL
                                       ELSE
                                          NULL
                                    END
                                       INPUT_ELIGIBILITY,
                                    SUM(
                                       CASE
                                          WHEN TAX.TAXABLE_AMOUNT IS NOT NULL
                                          THEN
                                             CASE
                                                WHEN DET.GST_ITC_APPL <> 'NO'
                                                THEN
                                                   TAX.CGST_AMOUNT
                                                ELSE
                                                   0
                                             END
                                          ELSE
                                             NULL
                                       END)
                                       INPUT_CGST_AMOUNT,
                                    SUM(
                                       CASE
                                          WHEN TAX.TAXABLE_AMOUNT IS NOT NULL
                                          THEN
                                             CASE
                                                WHEN DET.GST_ITC_APPL <> 'NO'
                                                THEN
                                                   TAX.SGST_AMOUNT
                                                ELSE
                                                   0
                                             END
                                          ELSE
                                             NULL
                                       END)
                                       INPUT_SGST_AMOUNT,
                                    SUM(
                                       CASE
                                          WHEN TAX.TAXABLE_AMOUNT IS NOT NULL
                                          THEN
                                             CASE
                                                WHEN DET.GST_ITC_APPL <> 'NO'
                                                THEN
                                                   TAX.IGST_AMOUNT
                                                ELSE
                                                   0
                                             END
                                          ELSE
                                             NULL
                                       END)
                                       INPUT_IGST_AMOUNT,
                                    SUM(
                                       CASE
                                          WHEN TAX.TAXABLE_AMOUNT IS NOT NULL
                                          THEN
                                             CASE
                                                WHEN DET.GST_ITC_APPL <> 'NO'
                                                THEN
                                                   TAX.CESS_AMOUNT
                                                ELSE
                                                   0
                                             END
                                          ELSE
                                             NULL
                                       END)
                                       INPUT_CESS_AMOUNT
                               FROM ginview.lv_site ownersite, purinvmain main, ginview.lv_item item, ginview.lv_customer_supplier cp, purinvdet det
LEFT OUTER JOIN (  SELECT PURINVDET_CODE,
                                              SUM(coalesce(CHGAMT, 0)) OTHER_CHARGE_AMOUNT
                                         FROM PURINVCHG_ITEM
                                        WHERE SOURCE <> 'G'
                                     GROUP BY PURINVDET_CODE) otx ON (DET.CODE = OTX.PURINVDET_CODE)
LEFT OUTER JOIN (  SELECT PURINVDET_CODE,
                                              APPAMT            TAXABLE_AMOUNT,
                                              SUM(coalesce(CHGAMT, 0)) TAX_CHARGE_AMOUNT,
                                              SUM(
                                                 CASE
                                                    WHEN     GST_COMPONENT = 'CGST'
                                                         AND ISREVERSE = 'N'
                                                    THEN
                                                       RATE
                                                    ELSE
                                                       0
                                                 END)
                                                 CGST_RATE,
                                              SUM(
                                                 CASE
                                                    WHEN     GST_COMPONENT = 'CGST'
                                                         AND ISREVERSE = 'N'
                                                    THEN
                                                       CHGAMT
                                                    ELSE
                                                       0
                                                 END)
                                                 CGST_AMOUNT,
                                              SUM(
                                                 CASE
                                                    WHEN     GST_COMPONENT = 'SGST'
                                                         AND ISREVERSE = 'N'
                                                    THEN
                                                       RATE
                                                    ELSE
                                                       0
                                                 END)
                                                 SGST_RATE,
                                              SUM(
                                                 CASE
                                                    WHEN     GST_COMPONENT = 'SGST'
                                                         AND ISREVERSE = 'N'
                                                    THEN
                                                       CHGAMT
                                                    ELSE
                                                       0
                                                 END)
                                                 SGST_AMOUNT,
                                              SUM(
                                                 CASE
                                                    WHEN     GST_COMPONENT = 'IGST'
                                                         AND ISREVERSE = 'N'
                                                    THEN
                                                       RATE
                                                    ELSE
                                                       0
                                                 END)
                                                 IGST_RATE,
                                              SUM(
                                                 CASE
                                                    WHEN     GST_COMPONENT = 'IGST'
                                                         AND ISREVERSE = 'N'
                                                    THEN
                                                       CHGAMT
                                                    ELSE
                                                       0
                                                 END)
                                                 IGST_AMOUNT,
                                              SUM(
                                                 CASE
                                                    WHEN     GST_COMPONENT = 'CESS'
                                                         AND ISREVERSE = 'N'
                                                    THEN
                                                       RATE
                                                    ELSE
                                                       0
                                                 END)
                                                 CESS_Rate,
                                              SUM(
                                                 CASE
                                                    WHEN     GST_COMPONENT = 'CESS'
                                                         AND ISREVERSE = 'N'
                                                    THEN
                                                       CHGAMT
                                                    ELSE
                                                       0
                                                 END)
                                                 CESS_AMOUNT
                                         FROM PURINVCHG_ITEM
                                        WHERE SOURCE = 'G'
                                     GROUP BY PURINVDET_CODE, APPAMT) tax ON (DET.CODE = TAX.PURINVDET_CODE)
WHERE MAIN.INVCODE = DET.INVCODE   AND MAIN.ADMSITE_CODE = OWNERSITE.SITECODE AND MAIN.PCODE = CP.UK AND DET.ICODE = ITEM.ITEM_CODE AND MAIN.INVDT BETWEEN PDTFR AND PDTTO AND OWNERSITE.GST_IDENTIFICATION_NO = PGSTIN AND coalesce(UPPER(MAIN.RELEASE_STATUS), 'U') = 'P' GROUP BY OWNERSITE.NAME,
                                    MAIN.INVDT,
                                    MAIN.SCHEME_DOCNO,
                                    MAIN.FINTRADEGRP_CODE,
                                    MAIN.NETAMT,
                                    MAIN.DOCNO,
                                    MAIN.DOCDT,
                                    CASE
                                       WHEN MAIN.GSTAPPL = 'Y' THEN 'REVERSE INVOICE'
                                       ELSE 'INWARD SUPPLY'
                                    END,
                                    CP.GST_IDENTIFICATION_NO,
                                    CP.GST_STATE_CODE,
                                    CP.GST_REGISTRATION_DATE,
                                    MAIN.PCODE,
                                    ITEM.HSN_CODE,
                                    ITEM.HSN_DESCRIPTION,
                                    ITEM.UOM,
                                    TAX.CGST_RATE,
                                    TAX.SGST_RATE,
                                    TAX.IGST_RATE,
                                    TAX.CESS_RATE,
                                    TAX.CGST_RATE + TAX.SGST_RATE + TAX.IGST_RATE,
                                    CASE
                                       WHEN TAX.TAXABLE_AMOUNT IS NOT NULL
                                       THEN
                                          DET.GST_ITC_APPL
                                       ELSE
                                          NULL
                                    END
                           
UNION ALL

                             SELECT 'PROCUREMENT: SERVICE INVOICE' ENTRY_SOURCE,
                                    OWNERSITE.NAME               ENTRY_SITE,
                                    MAIN.SRVDT                   ENTRY_DATE,
                                    MAIN.SCHEME_DOCNO            ENTRY_NO,
                                    MAIN.FINTRADEGRP_CODE        ENTRY_TRADETYPECODE,
                                    MAIN.NETAMT                  ENTRY_NETVALUE,
                                    MAIN.DOCNO                   REF_DOC_NO,
                                    MAIN.DOCDT                   REF_DOC_DATE,
                                    CASE
                                       WHEN MAIN.GSTAPPL = 'Y' THEN 'REVERSE INVOICE'
                                       ELSE 'INWARD SUPPLY'
                                    END
                                       GST_APPLICABILITY,
                                    NULL                         ETIN,
                                    CP.CP_GSTIN_NO               CP_GSTIN_NO,
                                    CP.CP_GSTIN_STATE_CODE       CP_GSTIN_STATE_CODE,
                                    CP.CP_GSTIN_DATE
                                       CP_GSTIN_REGISTRATION_DATE,
                                    MAIN.PCODE                   CP_CODE,
                                    NULL
                                       CP_GST_REGISTRATION_STATUS,
                                    NULL                         CP_NAME,
                                    NULL                         CP_PAN,
                                    NULL                         CP_CONTACT_PERSON,
                                    NULL                         CP_MOBILE,
                                    NULL                         CP_EMAIL,
                                    NULL                         CP_CLASS,
                                    NULL                         CP_AGENT_NAME,
                                    NULL                         CP_AGENT_CLASS,
                                    NULL                         ORIGINAL_INV_ENT_NO,
                                    NULL                         ORIGINAL_INV_ENT_DT,
                                    NULL
                                       ORIGINAL_INV_ENT_NETVALUE,
                                    NULL                         ORIGINAL_INV_REFNO,
                                    NULL                         ORIGINAL_INV_REFDT,
                                    NULL                         DNCN_REASON,
                                    --Start rev 04 (Devops id 21175)
                                    --HSNSAC.HSN_SAC_CODE          HSN_SAC_CODE,
                                    HSNSAC.GOVT_IDENTIFIER       HSN_SAC_CODE,
                                    --End rev 04 (Devops id 21175)
                                    HSNSAC.DESCRIPTION           HSN_SAC_DESC,
                                    NULL                         UOM,
                                    TAX.CGST_RATE                CGST_RATE,
                                    TAX.SGST_RATE                SGST_RATE,
                                    TAX.IGST_RATE                IGST_RATE,
                                    TAX.CESS_RATE                CESS_RATE,
                                    TAX.CGST_RATE + TAX.SGST_RATE + TAX.IGST_RATE
                                       TOTAL_TAXRATE,
                                    NULL                         QUANTITY,
                                    SUM(TAX.TAXABLE_AMOUNT)     TAXABLE_AMOUNT,
                                    SUM(TAX.CGST_AMOUNT)        CGST_AMOUNT,
                                    SUM(TAX.SGST_AMOUNT)        SGST_AMOUNT,
                                    SUM(TAX.IGST_AMOUNT)        IGST_AMOUNT,
                                    SUM(TAX.CESS_AMOUNT)        CESS_AMOUNT,
                                    SUM(
                                         DET.SRVAMT
                                       + coalesce(
                                              TAX.CGST_AMOUNT
                                            + TAX.SGST_AMOUNT
                                            + TAX.IGST_AMOUNT
                                            + TAX.CESS_AMOUNT,
                                            0)
                                       + coalesce(OTX.OTHER_CHARGE_AMOUNT, 0))
                                       NET_AMOUNT,
                                    CASE
                                       WHEN TAX.TAXABLE_AMOUNT IS NOT NULL
                                       THEN
                                          DET.GST_ITC_APPL
                                       ELSE
                                          NULL
                                    END
                                       INPUT_ELIGIBILITY,
                                    SUM(
                                       CASE
                                          WHEN TAX.TAXABLE_AMOUNT IS NOT NULL
                                          THEN
                                             CASE
                                                WHEN SERVICE.GST_ITC_APPL <> 'NO'
                                                THEN
                                                   TAX.CGST_AMOUNT
                                                ELSE
                                                   0
                                             END
                                          ELSE
                                             NULL
                                       END)
                                       INPUT_CGST_AMOUNT,
                                    SUM(
                                       CASE
                                          WHEN TAX.TAXABLE_AMOUNT IS NOT NULL
                                          THEN
                                             CASE
                                                WHEN SERVICE.GST_ITC_APPL <> 'NO'
                                                THEN
                                                   TAX.SGST_AMOUNT
                                                ELSE
                                                   0
                                             END
                                          ELSE
                                             NULL
                                       END)
                                       INPUT_SGST_AMOUNT,
                                    SUM(
                                       CASE
                                          WHEN TAX.TAXABLE_AMOUNT IS NOT NULL
                                          THEN
                                             CASE
                                                WHEN SERVICE.GST_ITC_APPL <> 'NO'
                                                THEN
                                                   TAX.IGST_AMOUNT
                                                ELSE
                                                   0
                                             END
                                          ELSE
                                             NULL
                                       END)
                                       INPUT_IGST_AMOUNT,
                                    SUM(
                                       CASE
                                          WHEN TAX.TAXABLE_AMOUNT IS NOT NULL
                                          THEN
                                             CASE
                                                WHEN SERVICE.GST_ITC_APPL <> 'NO'
                                                THEN
                                                   TAX.CESS_AMOUNT
                                                ELSE
                                                   0
                                             END
                                          ELSE
                                             NULL
                                       END)
                                       INPUT_CESS_AMOUNT
                               FROM purservice service, ginview.lv_site ownersite, pursrvmain main, invhsnsacmain hsnsac, finsl cp, pursrvdet det
LEFT OUTER JOIN (  SELECT PURSRVDET_CODE,
                                              APPAMT            TAXABLE_AMOUNT,
                                              SUM(coalesce(CHGAMT, 0)) TAX_CHARGE_AMOUNT,
                                              SUM(
                                                 CASE
                                                    WHEN     GST_COMPONENT = 'CGST'
                                                         AND ISREVERSE = 'N'
                                                    THEN
                                                       RATE
                                                    ELSE
                                                       0
                                                 END)
                                                 CGST_RATE,
                                              SUM(
                                                 CASE
                                                    WHEN     GST_COMPONENT = 'CGST'
                                                         AND ISREVERSE = 'N'
                                                    THEN
                                                       CHGAMT
                                                    ELSE
                                                       0
                                                 END)
                                                 CGST_AMOUNT,
                                              SUM(
                                                 CASE
                                                    WHEN     GST_COMPONENT = 'SGST'
                                                         AND ISREVERSE = 'N'
                                                    THEN
                                                       RATE
                                                    ELSE
                                                       0
                                                 END)
                                                 SGST_RATE,
                                              SUM(
                                                 CASE
                                                    WHEN     GST_COMPONENT = 'SGST'
                                                         AND ISREVERSE = 'N'
                                                    THEN
                                                       CHGAMT
                                                    ELSE
                                                       0
                                                 END)
                                                 SGST_AMOUNT,
                                              SUM(
                                                 CASE
                                                    WHEN     GST_COMPONENT = 'IGST'
                                                         AND ISREVERSE = 'N'
                                                    THEN
                                                       RATE
                                                    ELSE
                                                       0
                                                 END)
                                                 IGST_RATE,
                                              SUM(
                                                 CASE
                                                    WHEN     GST_COMPONENT = 'IGST'
                                                         AND ISREVERSE = 'N'
                                                    THEN
                                                       CHGAMT
                                                    ELSE
                                                       0
                                                 END)
                                                 IGST_AMOUNT,
                                              SUM(
                                                 CASE
                                                    WHEN     GST_COMPONENT = 'CESS'
                                                         AND ISREVERSE = 'N'
                                                    THEN
                                                       RATE
                                                    ELSE
                                                       0
                                                 END)
                                                 CESS_Rate,
                                              SUM(
                                                 CASE
                                                    WHEN     GST_COMPONENT = 'CESS'
                                                         AND ISREVERSE = 'N'
                                                    THEN
                                                       CHGAMT
                                                    ELSE
                                                       0
                                                 END)
                                                 CESS_AMOUNT
                                         FROM PURSRVCHG_ITEM
                                        WHERE SOURCE = 'G'
                                     GROUP BY PURSRVDET_CODE, APPAMT) tax ON (DET.CODE = TAX.PURSRVDET_CODE)
LEFT OUTER JOIN (  SELECT PURSRVDET_CODE,
                                              SUM(coalesce(CHGAMT, 0)) OTHER_CHARGE_AMOUNT
                                         FROM PURSRVCHG_ITEM
                                        WHERE SOURCE <> 'G'
                                     GROUP BY PURSRVDET_CODE) otx ON (DET.CODE = OTX.PURSRVDET_CODE)
WHERE MAIN.SRVCODE = DET.SRVCODE   AND MAIN.ADMSITE_CODE_OWNER = OWNERSITE.SITECODE AND MAIN.PCODE = CP.SLCODE AND DET.SERVICECODE = SERVICE.SERVICECODE AND SERVICE.INVHSNSACMAIN_CODE = HSNSAC.CODE AND MAIN.SRVDT BETWEEN PDTFR AND PDTTO AND OWNERSITE.GST_IDENTIFICATION_NO = PGSTIN AND coalesce(UPPER(MAIN.RELEASE_STATUS), 'U') = 'P' GROUP BY OWNERSITE.NAME,
                                    MAIN.SRVDT,
                                    MAIN.SCHEME_DOCNO,
                                    MAIN.FINTRADEGRP_CODE,
                                    MAIN.NETAMT,
                                    MAIN.DOCNO,
                                    MAIN.DOCDT,
                                    CASE
                                       WHEN MAIN.GSTAPPL = 'Y' THEN 'REVERSE INVOICE'
                                       ELSE 'INWARD SUPPLY'
                                    END,
                                    CP.CP_GSTIN_NO,
                                    CP.CP_GSTIN_STATE_CODE,
                                    CP.CP_GSTIN_DATE,
                                    MAIN.PCODE,
                                    --Start rev 04 (Devops id 21175)
                                    --HSNSAC.HSN_SAC_CODE,
                                    HSNSAC.GOVT_IDENTIFIER,
                                    --End rev 04 (Devops id 21175)
                                    HSNSAC.DESCRIPTION,
                                    TAX.CGST_RATE,
                                    TAX.SGST_RATE,
                                    TAX.IGST_RATE,
                                    TAX.CESS_RATE,
                                    TAX.CGST_RATE + TAX.SGST_RATE + TAX.IGST_RATE,
                                    CASE
                                       WHEN TAX.TAXABLE_AMOUNT IS NOT NULL
                                       THEN
                                          DET.GST_ITC_APPL
                                       ELSE
                                          NULL
                                    END
                           
UNION ALL

                             SELECT 'PROCUREMENT: PURCHASE RETURN' ENTRY_SOURCE,
                                    OWNERSITE.NAME               ENTRY_SITE,
                                    MAIN.RTDT                    ENTRY_DATE,
                                    MAIN.SCHEME_DOCNO            ENTRY_NO,
                                    MAIN.FINTRADEGRP_CODE        ENTRY_TRADETYPECODE,
                                    MAIN.NETAMT                  ENTRY_NETVALUE,
                                    MAIN.DOCNO                   REF_DOC_NO,
                                    MAIN.DOCDT                   REF_DOC_DATE,
                                    CASE
                                       WHEN MAIN.GSTAPPL = 'C' THEN 'REVERSE CREDIT NOTE'
                                       WHEN MAIN.GSTAPPL = 'Y' THEN 'OUTWARD SUPPLY'
                                       ELSE 'PURCHASE DEBIT NOTE'
                                    END
                                       GST_APPLICABILITY,
                                    NULL                         ETIN,
                                    CP.GST_IDENTIFICATION_NO     CP_GSTIN_NO,
                                    CP.GST_STATE_CODE            CP_GSTIN_STATE_CODE,
                                    CP.GST_REGISTRATION_DATE
                                       CP_GSTIN_REGISTRATION_DATE,
                                    MAIN.PCODE                   CP_CODE,
                                    NULL
                                       CP_GST_REGISTRATION_STATUS,
                                    NULL                         CP_NAME,
                                    NULL                         CP_PAN,
                                    NULL                         CP_CONTACT_PERSON,
                                    NULL                         CP_MOBILE,
                                    NULL                         CP_EMAIL,
                                    NULL                         CP_CLASS,
                                    NULL                         CP_AGENT_NAME,
                                    NULL                         CP_AGENT_CLASS,
                                    CASE
                                       WHEN MAIN.GSTAPPL <> 'Y' THEN INVM.SCHEME_DOCNO
                                       ELSE NULL
                                    END
                                       ORIGINAL_INV_ENT_NO,
                                    CASE
                                       WHEN MAIN.GSTAPPL <> 'Y' THEN INVM.INVDT
                                       ELSE NULL
                                    END
                                       ORIGINAL_INV_ENT_DT,
                                    CASE
                                       WHEN MAIN.GSTAPPL <> 'Y' THEN INVM.NETAMT
                                       ELSE NULL
                                    END
                                       ORIGINAL_INV_ENT_NETVALUE,
                                    CASE
                                       WHEN MAIN.GSTAPPL <> 'Y' THEN INVM.DOCNO
                                       ELSE NULL
                                    END
                                       ORIGINAL_INV_REFNO,
                                    CASE
                                       WHEN MAIN.GSTAPPL <> 'Y' THEN INVM.DOCDT
                                       ELSE NULL
                                    END
                                       ORIGINAL_INV_REFDT,
                                    CASE
                                       WHEN MAIN.GSTAPPL <> 'Y' THEN 'Sales Return'
                                       ELSE NULL
                                    END
                                       DNCN_REASON,
                                    ITEM.HSN_CODE                HSN_SAC_CODE,
                                    ITEM.HSN_DESCRIPTION         HSN_SAC_DESC,
                                    ITEM.UOM                     UOM,
                                    TAX.CGST_RATE                CGST_RATE,
                                    TAX.SGST_RATE                SGST_RATE,
                                    TAX.IGST_RATE                IGST_RATE,
                                    TAX.CESS_RATE                CESS_RATE,
                                    TAX.CGST_RATE + TAX.SGST_RATE + TAX.IGST_RATE
                                       TOTAL_TAXRATE,
                                    SUM(DET.QTY)                QUANTITY,
                                    SUM(TAX.TAXABLE_AMOUNT)     TAXABLE_AMOUNT,
                                    SUM(TAX.CGST_AMOUNT)        CGST_AMOUNT,
                                    SUM(TAX.SGST_AMOUNT)        SGST_AMOUNT,
                                    SUM(TAX.IGST_AMOUNT)        IGST_AMOUNT,
                                    SUM(TAX.CESS_AMOUNT)        CESS_AMOUNT,
                                    SUM(
                                         coalesce(DET.NETAMT, 0)
                                       + coalesce(TAX.TAX_CHARGE_AMOUNT, 0)
                                       + coalesce(OTX.OTHER_CHARGE_AMOUNT, 0))
                                       NET_AMOUNT,
                                    CASE
                                       WHEN     MAIN.GSTAPPL <> 'Y'
                                            AND TAX.TAXABLE_AMOUNT IS NOT NULL
                                       THEN
                                          DET.GST_ITC_APPL
                                       ELSE
                                          NULL
                                    END
                                       INPUT_ELIGIBILITY,
                                    SUM(
                                       CASE
                                          WHEN     MAIN.GSTAPPL <> 'Y'
                                               AND TAX.TAXABLE_AMOUNT IS NOT NULL
                                          THEN
                                             CASE
                                                WHEN DET.GST_ITC_APPL <> 'NO'
                                                THEN
                                                   TAX.CGST_AMOUNT
                                                ELSE
                                                   0
                                             END
                                          ELSE
                                             NULL
                                       END)
                                       INPUT_CGST_AMOUNT,
                                    SUM(
                                       CASE
                                          WHEN     MAIN.GSTAPPL <> 'Y'
                                               AND TAX.TAXABLE_AMOUNT IS NOT NULL
                                          THEN
                                             CASE
                                                WHEN DET.GST_ITC_APPL <> 'NO'
                                                THEN
                                                   TAX.SGST_AMOUNT
                                                ELSE
                                                   0
                                             END
                                          ELSE
                                             NULL
                                       END)
                                       INPUT_SGST_AMOUNT,
                                    SUM(
                                       CASE
                                          WHEN     MAIN.GSTAPPL <> 'Y'
                                               AND TAX.TAXABLE_AMOUNT IS NOT NULL
                                          THEN
                                             CASE
                                                WHEN DET.GST_ITC_APPL <> 'NO'
                                                THEN
                                                   TAX.IGST_AMOUNT
                                                ELSE
                                                   0
                                             END
                                          ELSE
                                             NULL
                                       END)
                                       INPUT_IGST_AMOUNT,
                                    SUM(
                                       CASE
                                          WHEN     MAIN.GSTAPPL <> 'Y'
                                               AND TAX.TAXABLE_AMOUNT IS NOT NULL
                                          THEN
                                             CASE
                                                WHEN DET.GST_ITC_APPL <> 'NO'
                                                THEN
                                                   TAX.CESS_AMOUNT
                                                ELSE
                                                   0
                                             END
                                          ELSE
                                             NULL
                                       END)
                                       INPUT_CESS_AMOUNT
                               FROM (  SELECT PURRTDET_CODE,
                                              APPAMT            TAXABLE_AMOUNT,
                                              SUM(coalesce(CHGAMT, 0)) TAX_CHARGE_AMOUNT,
                                              SUM(
                                                 CASE
                                                    WHEN     GST_COMPONENT = 'CGST'
                                                         AND ISREVERSE = 'N'
                                                    THEN
                                                       RATE
                                                    ELSE
                                                       0
                                                 END)
                                                 CGST_RATE,
                                              SUM(
                                                 CASE
                                                    WHEN     GST_COMPONENT = 'CGST'
                                                         AND ISREVERSE = 'N'
                                                    THEN
                                                       CHGAMT
                                                    ELSE
                                                       0
                                                 END)
                                                 CGST_AMOUNT,
                                              SUM(
                                                 CASE
                                                    WHEN     GST_COMPONENT = 'SGST'
                                                         AND ISREVERSE = 'N'
                                                    THEN
                                                       RATE
                                                    ELSE
                                                       0
                                                 END)
                                                 SGST_RATE,
                                              SUM(
                                                 CASE
                                                    WHEN     GST_COMPONENT = 'SGST'
                                                         AND ISREVERSE = 'N'
                                                    THEN
                                                       CHGAMT
                                                    ELSE
                                                       0
                                                 END)
                                                 SGST_AMOUNT,
                                              SUM(
                                                 CASE
                                                    WHEN     GST_COMPONENT = 'IGST'
                                                         AND ISREVERSE = 'N'
                                                    THEN
                                                       RATE
                                                    ELSE
                                                       0
                                                 END)
                                                 IGST_RATE,
                                              SUM(
                                                 CASE
                                                    WHEN     GST_COMPONENT = 'IGST'
                                                         AND ISREVERSE = 'N'
                                                    THEN
                                                       CHGAMT
                                                    ELSE
                                                       0
                                                 END)
                                                 IGST_AMOUNT,
                                              SUM(
                                                 CASE
                                                    WHEN     GST_COMPONENT = 'CESS'
                                                         AND ISREVERSE = 'N'
                                                    THEN
                                                       RATE
                                                    ELSE
                                                       0
                                                 END)
                                                 CESS_Rate,
                                              SUM(
                                                 CASE
                                                    WHEN     GST_COMPONENT = 'CESS'
                                                         AND ISREVERSE = 'N'
                                                    THEN
                                                       CHGAMT
                                                    ELSE
                                                       0
                                                 END)
                                                 CESS_AMOUNT
                                         FROM PURRTCHG_ITEM
                                        WHERE SOURCE = 'G'
                                     GROUP BY PURRTDET_CODE, APPAMT) tax, ginview.lv_site ownersite, (  SELECT PURRTDET_CODE,
                                              SUM(coalesce(CHGAMT, 0)) OTHER_CHARGE_AMOUNT
                                         FROM PURRTCHG_ITEM
                                        WHERE SOURCE <> 'G'
                                     GROUP BY PURRTDET_CODE) otx, purrtmain main, ginview.lv_item item, purrtdet det, ginview.lv_customer_supplier cp, invgrtdet grtd
LEFT OUTER JOIN purinvdet invd ON (GRTD.INVGRCDET_CODE = INVD.INVGRCDET_CODE)
LEFT OUTER JOIN purinvmain invm ON (INVD.INVCODE = INVM.INVCODE)
WHERE MAIN.RTCODE = DET.RTCODE AND DET.INVGRTDET_CODE = GRTD.CODE     AND MAIN.ADMSITE_CODE = OWNERSITE.SITECODE AND MAIN.PCODE = CP.UK AND DET.ICODE = ITEM.ITEM_CODE AND MAIN.RTDT BETWEEN PDTFR AND PDTTO AND OWNERSITE.GST_IDENTIFICATION_NO = PGSTIN AND coalesce(UPPER(MAIN.RELEASE_STATUS), 'U') = 'P' GROUP BY OWNERSITE.NAME,
                                    MAIN.RTDT,
                                    MAIN.SCHEME_DOCNO,
                                    MAIN.FINTRADEGRP_CODE,
                                    MAIN.NETAMT,
                                    MAIN.DOCNO,
                                    MAIN.DOCDT,
                                    CASE
                                       WHEN MAIN.GSTAPPL = 'C' THEN 'REVERSE CREDIT NOTE'
                                       WHEN MAIN.GSTAPPL = 'Y' THEN 'OUTWARD SUPPLY'
                                       ELSE 'PURCHASE DEBIT NOTE'
                                    END,
                                    CP.GST_IDENTIFICATION_NO,
                                    CP.GST_STATE_CODE,
                                    CP.GST_REGISTRATION_DATE,
                                    MAIN.PCODE,
                                    CASE
                                       WHEN MAIN.GSTAPPL <> 'Y' THEN INVM.SCHEME_DOCNO
                                       ELSE NULL
                                    END,
                                    CASE
                                       WHEN MAIN.GSTAPPL <> 'Y' THEN INVM.INVDT
                                       ELSE NULL
                                    END,
                                    CASE
                                       WHEN MAIN.GSTAPPL <> 'Y' THEN INVM.NETAMT
                                       ELSE NULL
                                    END,
                                    CASE
                                       WHEN MAIN.GSTAPPL <> 'Y' THEN INVM.DOCNO
                                       ELSE NULL
                                    END,
                                    CASE
                                       WHEN MAIN.GSTAPPL <> 'Y' THEN INVM.DOCDT
                                       ELSE NULL
                                    END,
                                    CASE
                                       WHEN MAIN.GSTAPPL <> 'Y' THEN 'Sales Return'
                                       ELSE NULL
                                    END,
                                    ITEM.HSN_CODE,
                                    ITEM.HSN_DESCRIPTION,
                                    ITEM.UOM,
                                    TAX.CGST_RATE,
                                    TAX.SGST_RATE,
                                    TAX.IGST_RATE,
                                    TAX.CESS_RATE,
                                    TAX.CGST_RATE + TAX.SGST_RATE + TAX.IGST_RATE,
                                    CASE
                                       WHEN     MAIN.GSTAPPL <> 'Y'
                                            AND TAX.TAXABLE_AMOUNT IS NOT NULL
                                       THEN
                                          DET.GST_ITC_APPL
                                       ELSE
                                          NULL
                                    END
                           
UNION ALL

                             SELECT CASE
                                       WHEN MAIN.JRNTYPE = 'D' THEN 'PROCUREMENT: PURCHASE DEBIT NOTE'
                                       ELSE 'PROCUREMENT: PURCHASE CREDIT NOTE'
                                    END
                                       ENTRY_SOURCE,
                                    OWNERSITE.NAME         ENTRY_SITE,
                                    MAIN.JRNDT             ENTRY_DATE,
                                    MAIN.SCHEME_DOCNO      ENTRY_NO,
                                    MAIN.FINTRADEGRP_CODE  ENTRY_TRADETYPECODE,
                                    MAIN.NETAMT            ENTRY_NETVALUE,
                                    MAIN.DOCNO             REF_DOC_NO,
                                    MAIN.DOCDT             REF_DOC_DATE,
                                    CASE
                                       WHEN UPPER(MAIN.GSTAPPL) = 'C'
                                       THEN
                                          'REVERSE CREDIT NOTE'
                                       WHEN UPPER(MAIN.GSTAPPL) = 'D'
                                       THEN
                                          'REVERSE DEBIT NOTE'
                                       WHEN UPPER(MAIN.GSTAPPL) = 'N'
                                       THEN
                                          CASE
                                             WHEN MAIN.JRNTYPE = 'D'
                                             THEN
                                                'PURCHASE DEBIT NOTE'
                                             ELSE
                                                'PURCHASE CREDIT NOTE'
                                          END
                                    END
                                       GST_APPLICABILITY,
                                    NULL                   ETIN,
                                    CP.GST_IDENTIFICATION_NO CP_GSTIN_NO,
                                    CP.GST_STATE_CODE      CP_GSTIN_STATE_CODE,
                                    CP.GST_REGISTRATION_DATE CP_GSTIN_REGISTRATION_DATE,
                                    MAIN.PCODE             CP_CODE,
                                    NULL                   CP_GST_REGISTRATION_STATUS,
                                    NULL                   CP_NAME,
                                    NULL                   CP_PAN,
                                    NULL                   CP_CONTACT_PERSON,
                                    NULL                   CP_MOBILE,
                                    NULL                   CP_EMAIL,
                                    NULL                   CP_CLASS,
                                    NULL                   CP_AGENT_NAME,
                                    NULL                   CP_AGENT_CLASS,
                                    INVM.SCHEME_DOCNO      ORIGINAL_INV_ENT_NO,
                                    INVM.INVDT             ORIGINAL_INV_ENT_DT,
                                    INVM.NETAMT            ORIGINAL_INV_ENT_NETVALUE,
                                    INVM.DOCNO             ORIGINAL_INV_REFNO,
                                    INVM.DOCDT             ORIGINAL_INV_REFDT,
                                    REASON.REASON          DNCN_REASON,
                                    ITEM.HSN_CODE          HSN_SAC_CODE,
                                    ITEM.HSN_DESCRIPTION   HSN_SAC_DESC,
                                    ITEM.UOM               UOM,
                                    TAX.CGST_RATE          CGST_RATE,
                                    TAX.SGST_RATE          SGST_RATE,
                                    TAX.IGST_RATE          IGST_RATE,
                                    TAX.CESS_RATE          CESS_RATE,
                                    TAX.CGST_RATE + TAX.SGST_RATE + TAX.IGST_RATE
                                       TOTAL_TAXRATE,
                                    NULL                   QUANTITY,
                                    SUM(TAX.TAXABLE_AMOUNT) TAXABLE_AMOUNT,
                                    SUM(TAX.CGST_AMOUNT)  CGST_AMOUNT,
                                    SUM(TAX.SGST_AMOUNT)  SGST_AMOUNT,
                                    SUM(TAX.IGST_AMOUNT)  IGST_AMOUNT,
                                    SUM(TAX.CESS_AMOUNT)  CESS_AMOUNT,
                                    SUM(
                                         coalesce(DET.AMOUNT, 0)
                                       + coalesce(DET.CHGAMT, 0)
                                       + coalesce(DET.TAXAMT, 0))
                                       NET_AMOUNT,
                                    CASE
                                       WHEN TAX.TAXABLE_AMOUNT IS NOT NULL
                                       THEN
                                          DET.GST_ITC_APPL
                                       ELSE
                                          NULL
                                    END
                                       INPUT_ELIGIBILITY,
                                    SUM(
                                       CASE
                                          WHEN TAX.TAXABLE_AMOUNT IS NOT NULL
                                          THEN
                                             CASE
                                                WHEN DET.GST_ITC_APPL <> 'NO'
                                                THEN
                                                   TAX.CGST_AMOUNT
                                                ELSE
                                                   0
                                             END
                                          ELSE
                                             NULL
                                       END)
                                       INPUT_CGST_AMOUNT,
                                    SUM(
                                       CASE
                                          WHEN TAX.TAXABLE_AMOUNT IS NOT NULL
                                          THEN
                                             CASE
                                                WHEN DET.GST_ITC_APPL <> 'NO'
                                                THEN
                                                   TAX.SGST_AMOUNT
                                                ELSE
                                                   0
                                             END
                                          ELSE
                                             NULL
                                       END)
                                       INPUT_SGST_AMOUNT,
                                    SUM(
                                       CASE
                                          WHEN TAX.TAXABLE_AMOUNT IS NOT NULL
                                          THEN
                                             CASE
                                                WHEN DET.GST_ITC_APPL <> 'NO'
                                                THEN
                                                   TAX.IGST_AMOUNT
                                                ELSE
                                                   0
                                             END
                                          ELSE
                                             NULL
                                       END)
                                       INPUT_IGST_AMOUNT,
                                    SUM(
                                       CASE
                                          WHEN TAX.TAXABLE_AMOUNT IS NOT NULL
                                          THEN
                                             CASE
                                                WHEN DET.GST_ITC_APPL <> 'NO'
                                                THEN
                                                   TAX.CESS_AMOUNT
                                                ELSE
                                                   0
                                             END
                                          ELSE
                                             NULL
                                       END)
                                       INPUT_CESS_AMOUNT
                               FROM admgstjrnreason reason, ginview.lv_site ownersite, purinvjrnmain main, ginview.lv_item item, purinvmain invm, ginview.lv_customer_supplier cp, purinvjrndet det
LEFT OUTER JOIN (  SELECT PURINVJRNDET_CODE,
                                              APPAMT TAXABLE_AMOUNT,
                                              SUM(
                                                 CASE
                                                    WHEN     GST_COMPONENT = 'CGST'
                                                         AND ISREVERSE = 'N'
                                                    THEN
                                                       RATE
                                                    ELSE
                                                       0
                                                 END)
                                                 CGST_RATE,
                                              SUM(
                                                 CASE
                                                    WHEN     GST_COMPONENT = 'CGST'
                                                         AND ISREVERSE = 'N'
                                                    THEN
                                                       CHGAMT
                                                    ELSE
                                                       0
                                                 END)
                                                 CGST_AMOUNT,
                                              SUM(
                                                 CASE
                                                    WHEN     GST_COMPONENT = 'SGST'
                                                         AND ISREVERSE = 'N'
                                                    THEN
                                                       RATE
                                                    ELSE
                                                       0
                                                 END)
                                                 SGST_RATE,
                                              SUM(
                                                 CASE
                                                    WHEN     GST_COMPONENT = 'SGST'
                                                         AND ISREVERSE = 'N'
                                                    THEN
                                                       CHGAMT
                                                    ELSE
                                                       0
                                                 END)
                                                 SGST_AMOUNT,
                                              SUM(
                                                 CASE
                                                    WHEN     GST_COMPONENT = 'IGST'
                                                         AND ISREVERSE = 'N'
                                                    THEN
                                                       RATE
                                                    ELSE
                                                       0
                                                 END)
                                                 IGST_RATE,
                                              SUM(
                                                 CASE
                                                    WHEN     GST_COMPONENT = 'IGST'
                                                         AND ISREVERSE = 'N'
                                                    THEN
                                                       CHGAMT
                                                    ELSE
                                                       0
                                                 END)
                                                 IGST_AMOUNT,
                                              SUM(
                                                 CASE
                                                    WHEN     GST_COMPONENT = 'CESS'
                                                         AND ISREVERSE = 'N'
                                                    THEN
                                                       RATE
                                                    ELSE
                                                       0
                                                 END)
                                                 CESS_Rate,
                                              SUM(
                                                 CASE
                                                    WHEN     GST_COMPONENT = 'CESS'
                                                         AND ISREVERSE = 'N'
                                                    THEN
                                                       CHGAMT
                                                    ELSE
                                                       0
                                                 END)
                                                 CESS_AMOUNT
                                         FROM PURINVJRNCHG_ITEM
                                        WHERE SOURCE = 'G'
                                     GROUP BY PURINVJRNDET_CODE, APPAMT) tax ON (DET.CODE = TAX.PURINVJRNDET_CODE)
WHERE MAIN.JRNCODE = DET.JRNCODE AND MAIN.PURINVMAIN_CODE = INVM.INVCODE  AND MAIN.ADMSITE_CODE_OWNER = OWNERSITE.SITECODE AND MAIN.PCODE = CP.UK AND DET.ICODE = ITEM.ITEM_CODE AND MAIN.ADMGSTJRNREASON_CODE = REASON.CODE AND MAIN.JRNDT BETWEEN PDTFR AND PDTTO AND OWNERSITE.GST_IDENTIFICATION_NO = PGSTIN AND coalesce(UPPER(MAIN.RELEASE_STATUS), 'U') = 'P' GROUP BY CASE
                                       WHEN MAIN.JRNTYPE = 'D' THEN 'PROCUREMENT: PURCHASE DEBIT NOTE'
                                       ELSE 'PROCUREMENT: PURCHASE CREDIT NOTE'
                                    END,
                                    OWNERSITE.NAME,
                                    MAIN.JRNDT,
                                    MAIN.SCHEME_DOCNO,
                                    MAIN.FINTRADEGRP_CODE,
                                    MAIN.NETAMT,
                                    MAIN.DOCNO,
                                    MAIN.DOCDT,
                                    CASE
                                       WHEN UPPER(MAIN.GSTAPPL) = 'C'
                                       THEN
                                          'REVERSE CREDIT NOTE'
                                       WHEN UPPER(MAIN.GSTAPPL) = 'D'
                                       THEN
                                          'REVERSE DEBIT NOTE'
                                       WHEN UPPER(MAIN.GSTAPPL) = 'N'
                                       THEN
                                          CASE
                                             WHEN MAIN.JRNTYPE = 'D'
                                             THEN
                                                'PURCHASE DEBIT NOTE'
                                             ELSE
                                                'PURCHASE CREDIT NOTE'
                                          END
                                    END,
                                    CP.GST_IDENTIFICATION_NO,
                                    CP.GST_STATE_CODE,
                                    CP.GST_REGISTRATION_DATE,
                                    MAIN.PCODE,
                                    INVM.SCHEME_DOCNO,
                                    INVM.INVDT,
                                    INVM.NETAMT,
                                    INVM.DOCNO,
                                    INVM.DOCDT,
                                    REASON.REASON,
                                    ITEM.HSN_CODE,
                                    ITEM.HSN_DESCRIPTION,
                                    ITEM.UOM,
                                    TAX.CGST_RATE,
                                    TAX.SGST_RATE,
                                    TAX.IGST_RATE,
                                    TAX.CESS_RATE,
                                    TAX.CGST_RATE + TAX.SGST_RATE + TAX.IGST_RATE,
                                    CASE
                                       WHEN TAX.TAXABLE_AMOUNT IS NOT NULL
                                       THEN
                                          DET.GST_ITC_APPL
                                       ELSE
                                          NULL
                                    END
                   
UNION ALL

                      SELECT 'PROCUREMENT: SERVICE DEBIT NOTE' ENTRY_SOURCE,
                             OWNERSITE.NAME                              ENTRY_SITE,
                             MAIN.JRNDT                                  ENTRY_DATE,
                             MAIN.SCHEME_DOCNO                           ENTRY_NO,
                             MAIN.FINTRADEGRP_CODE                       ENTRY_TRADETYPECODE,
                             MAIN.NETAMT                                 ENTRY_NETVALUE,
                             MAIN.DOCNO                                  REF_DOC_NO,
                             MAIN.DOCDT                                  REF_DOC_DATE,
                             CASE
                                WHEN UPPER(MAIN.GSTAPPL) = 'C'
                                THEN
                                   'REVERSE CREDIT NOTE'
                                WHEN UPPER(MAIN.GSTAPPL) = 'D'
                                THEN
                                   'REVERSE DEBIT NOTE'
                                WHEN UPPER(MAIN.GSTAPPL) = 'N'
                                THEN
                                   CASE
                                      WHEN MAIN.JRNTYPE = 'D' THEN 'PURCHASE DEBIT NOTE'
                                      ELSE 'PURCHASE CREDIT NOTE'
                                   END
                             END
                                GST_APPLICABILITY,
                             NULL                                        ETIN,
                             CP.GST_IDENTIFICATION_NO                    CP_GSTIN_NO,
                             CP.GST_STATE_CODE                           CP_GSTIN_STATE_CODE,
                             CP.GST_REGISTRATION_DATE                    CP_GSTIN_REGISTRATION_DATE,
                             MAIN.PCODE                                  CP_CODE,
                             NULL                                        CP_GST_REGISTRATION_STATUS,
                             NULL                                        CP_NAME,
                             NULL                                        CP_PAN,
                             NULL                                        CP_CONTACT_PERSON,
                             NULL                                        CP_MOBILE,
                             NULL                                        CP_EMAIL,
                             NULL                                        CP_CLASS,
                             NULL                                        CP_AGENT_NAME,
                             NULL                                        CP_AGENT_CLASS,
                             INVM.SCHEME_DOCNO                           ORIGINAL_INV_ENT_NO,
                             INVM.SRVDT                                  ORIGINAL_INV_ENT_DT,
                             INVM.NETAMT                                 ORIGINAL_INV_ENT_NETVALUE,
                             INVM.DOCNO                                  ORIGINAL_INV_REFNO,
                             INVM.DOCDT                                  ORIGINAL_INV_REFDT,
                             REASON.REASON                               DNCN_REASON,
                             --Start rev 04 (Devops id 21175)
                             --HSNSAC.HSN_SAC_CODE                         HSN_SAC_CODE,
                             HSNSAC.GOVT_IDENTIFIER                      HSN_SAC_CODE,
                             --End rev 04 (Devops id 21175)
                             HSNSAC.DESCRIPTION                          HSN_SAC_DESC,
                             NULL                                        UOM,
                             TAX.CGST_RATE                               CGST_RATE,
                             TAX.SGST_RATE                               SGST_RATE,
                             TAX.IGST_RATE                               IGST_RATE,
                             TAX.CESS_RATE                               CESS_RATE,
                             TAX.CGST_RATE + TAX.SGST_RATE + TAX.IGST_RATE TOTAL_TAXRATE,
                             NULL                                        QUANTITY,
                             SUM(TAX.TAXABLE_AMOUNT)                    TAXABLE_AMOUNT,
                             SUM(TAX.CGST_AMOUNT)                       CGST_AMOUNT,
                             SUM(TAX.SGST_AMOUNT)                       SGST_AMOUNT,
                             SUM(TAX.IGST_AMOUNT)                       IGST_AMOUNT,
                             SUM(TAX.CESS_AMOUNT)                       CESS_AMOUNT,
                             SUM(
                                  DET.SRVAMT
                                + coalesce(
                                       TAX.CGST_AMOUNT
                                     + TAX.SGST_AMOUNT
                                     + TAX.IGST_AMOUNT
                                     + TAX.CESS_AMOUNT,
                                     0)
                                + coalesce(OTX.OTHER_CHARGE_AMOUNT, 0))
                                NET_AMOUNT,
                             CASE
                                WHEN TAX.TAXABLE_AMOUNT IS NOT NULL THEN DET.GST_ITC_APPL
                                ELSE NULL
                             END
                                INPUT_ELIGIBILITY,
                             SUM(
                                CASE
                                   WHEN TAX.TAXABLE_AMOUNT IS NOT NULL THEN
                                    CASE WHEN DET.GST_ITC_APPL <> 'NO' THEN TAX.CGST_AMOUNT ELSE 0 END
                                   ELSE NULL
                                END)
                                INPUT_CGST_AMOUNT,
                             SUM(
                                CASE
                                   WHEN TAX.TAXABLE_AMOUNT IS NOT NULL THEN
                                    CASE WHEN DET.GST_ITC_APPL <> 'NO' THEN TAX.SGST_AMOUNT ELSE 0 END
                                   ELSE NULL
                                END)
                                INPUT_SGST_AMOUNT,
                             SUM(
                                CASE
                                   WHEN TAX.TAXABLE_AMOUNT IS NOT NULL THEN
                                    CASE WHEN DET.GST_ITC_APPL <> 'NO' THEN TAX.IGST_AMOUNT ELSE 0 END
                                   ELSE NULL
                                END)
                                INPUT_IGST_AMOUNT,
                             SUM(
                                CASE
                                   WHEN TAX.TAXABLE_AMOUNT IS NOT NULL THEN
                                    CASE WHEN DET.GST_ITC_APPL <> 'NO' THEN TAX.CESS_AMOUNT ELSE 0 END
                                   ELSE NULL
                                END)
                                INPUT_CESS_AMOUNT
                        FROM purservice service, admgstjrnreason reason, ginview.lv_site ownersite, pursrvjrnmain main, pursrvmain invm, invhsnsacmain hsnsac, ginview.lv_customer_supplier cp, pursrvjrndet det
LEFT OUTER JOIN (  SELECT PURSRVJRNDET_CODE,
                                       APPAMT TAXABLE_AMOUNT,
                                       SUM(
                                          CASE
                                             WHEN GST_COMPONENT = 'CGST' AND ISREVERSE = 'N'
                                             THEN
                                                RATE
                                             ELSE
                                                0
                                          END)
                                          CGST_RATE,
                                       SUM(
                                          CASE
                                             WHEN GST_COMPONENT = 'CGST' AND ISREVERSE = 'N'
                                             THEN
                                                CHGAMT
                                             ELSE
                                                0
                                          END)
                                          CGST_AMOUNT,
                                       SUM(
                                          CASE
                                             WHEN GST_COMPONENT = 'SGST' AND ISREVERSE = 'N'
                                             THEN
                                                RATE
                                             ELSE
                                                0
                                          END)
                                          SGST_RATE,
                                       SUM(
                                          CASE
                                             WHEN GST_COMPONENT = 'SGST' AND ISREVERSE = 'N'
                                             THEN
                                                CHGAMT
                                             ELSE
                                                0
                                          END)
                                          SGST_AMOUNT,
                                       SUM(
                                          CASE
                                             WHEN GST_COMPONENT = 'IGST' AND ISREVERSE = 'N'
                                             THEN
                                                RATE
                                             ELSE
                                                0
                                          END)
                                          IGST_RATE,
                                       SUM(
                                          CASE
                                             WHEN GST_COMPONENT = 'IGST' AND ISREVERSE = 'N'
                                             THEN
                                                CHGAMT
                                             ELSE
                                                0
                                          END)
                                          IGST_AMOUNT,
                                       SUM(
                                          CASE
                                             WHEN GST_COMPONENT = 'CESS' AND ISREVERSE = 'N'
                                             THEN
                                                RATE
                                             ELSE
                                                0
                                          END)
                                          CESS_Rate,
                                       SUM(
                                          CASE
                                             WHEN GST_COMPONENT = 'CESS' AND ISREVERSE = 'N'
                                             THEN
                                                CHGAMT
                                             ELSE
                                                0
                                          END)
                                          CESS_AMOUNT
                                  FROM PURSRVJRNCHG_ITEM
                                 WHERE SOURCE = 'G'
                              GROUP BY PURSRVJRNDET_CODE, APPAMT) tax ON (DET.CODE = TAX.PURSRVJRNDET_CODE)
LEFT OUTER JOIN (  SELECT PURSRVJRNDET_CODE,
                                       SUM(coalesce(CHGAMT, 0)) OTHER_CHARGE_AMOUNT
                                  FROM PURSRVJRNCHG_ITEM
                                 WHERE SOURCE <> 'G'
                              GROUP BY PURSRVJRNDET_CODE) otx ON (DET.CODE = OTX.PURSRVJRNDET_CODE)
WHERE MAIN.JRNCODE = DET.JRNCODE AND MAIN.PURSRVMAIN_CODE = INVM.SRVCODE   AND MAIN.ADMSITE_CODE_OWNER = OWNERSITE.SITECODE AND MAIN.PCODE = CP.UK AND DET.SERVICECODE = SERVICE.SERVICECODE AND SERVICE.INVHSNSACMAIN_CODE = HSNSAC.CODE AND MAIN.ADMGSTJRNREASON_CODE = REASON.CODE AND MAIN.JRNDT BETWEEN PDTFR AND PDTTO AND OWNERSITE.GST_IDENTIFICATION_NO = PGSTIN AND coalesce(UPPER(MAIN.RELEASE_STATUS), 'U') = 'P' GROUP BY CASE WHEN 1=1 THEN 'PROCUREMENT: SERVICE DEBIT NOTE' END,
                             OWNERSITE.NAME,
                             MAIN.JRNDT,
                             MAIN.SCHEME_DOCNO,
                             MAIN.FINTRADEGRP_CODE,
                             MAIN.NETAMT,
                             MAIN.DOCNO,
                             MAIN.DOCDT,
                             CASE
                                WHEN UPPER(MAIN.GSTAPPL) = 'C'
                                THEN
                                   'REVERSE CREDIT NOTE'
                                WHEN UPPER(MAIN.GSTAPPL) = 'D'
                                THEN
                                   'REVERSE DEBIT NOTE'
                                WHEN UPPER(MAIN.GSTAPPL) = 'N'
                                THEN
                                   CASE
                                      WHEN MAIN.JRNTYPE = 'D' THEN 'PURCHASE DEBIT NOTE'
                                      ELSE 'PURCHASE CREDIT NOTE'
                                   END
                             END,
                             CP.GST_IDENTIFICATION_NO,
                             CP.GST_STATE_CODE,
                             CP.GST_REGISTRATION_DATE,
                             MAIN.PCODE,
                             INVM.SCHEME_DOCNO,
                             INVM.SRVDT,
                             INVM.NETAMT,
                             INVM.DOCNO,
                             INVM.DOCDT,
                             REASON.REASON,
                             --Start rev 04 (Devops id 21175)
                             --HSNSAC.HSN_SAC_CODE,
                             HSNSAC.GOVT_IDENTIFIER,
                             --End rev 04 (Devops id 21175)
                             HSNSAC.DESCRIPTION,
                             TAX.CGST_RATE,
                             TAX.SGST_RATE,
                             TAX.IGST_RATE,
                             TAX.CESS_RATE,
                             TAX.CGST_RATE + TAX.SGST_RATE + TAX.IGST_RATE,
                             CASE
                                WHEN TAX.TAXABLE_AMOUNT IS NOT NULL THEN DET.GST_ITC_APPL
                                ELSE NULL
                             END
                           
UNION ALL

                             SELECT 'SND: SERVICE INVOICE' ENTRY_SOURCE,
                                    OWNERSITE.NAME               ENTRY_SITE,
                                    MAIN.SRVDT                   ENTRY_DATE,
                                    MAIN.SCHEME_DOCNO            ENTRY_NO,
                                    MAIN.SALTRADEGRP_CODE        ENTRY_TRADETYPECODE,
                                    MAIN.NETAMT                  ENTRY_NETVALUE,
                                    MAIN.DOCNO                   REF_DOC_NO,
                                    MAIN.DOCDT                   REF_DOC_DATE,
                                    CASE
                                       WHEN MAIN.GSTAPPL = 'Y' THEN 'OUTWARD SUPPLY'
                                       ELSE 'OTHER OUTWARD SUPPLY'
                                    END
                                       GST_APPLICABILITY,
                                    NULL                         ETIN,
                                    REFSITE.GST_IDENTIFICATION_NO      CP_GSTIN_NO,
                                    REFSITE.GST_STATE_CODE             CP_GSTIN_STATE_CODE,
                                    REFSITE.GST_REGISTRATION_DATE      CP_GSTIN_REGISTRATION_DATE,
                                    MAIN.PCODE                   CP_CODE,
                                    NULL                         CP_GST_REGISTRATION_STATUS,
                                    NULL                         CP_NAME,
                                    NULL                         CP_PAN,
                                    NULL                         CP_CONTACT_PERSON,
                                    NULL                         CP_MOBILE,
                                    NULL                         CP_EMAIL,
                                    NULL                         CP_CLASS,
                                    NULL                         CP_AGENT_NAME,
                                    NULL                         CP_AGENT_CLASS,
                                    NULL                         ORIGINAL_INV_ENT_NO,
                                    NULL                         ORIGINAL_INV_ENT_DT,
                                    NULL                         ORIGINAL_INV_ENT_NETVALUE,
                                    NULL                         ORIGINAL_INV_REFNO,
                                    NULL                         ORIGINAL_INV_REFDT,
                                    NULL                         DNCN_REASON,
                                    --Start rev 04 (Devops id 21175)
                                    --HSNSAC.HSN_SAC_CODE          HSN_SAC_CODE,
                                    HSNSAC.GOVT_IDENTIFIER       HSN_SAC_CODE,
                                    --End rev 04 (Devops id 21175)
                                    HSNSAC.DESCRIPTION           HSN_SAC_DESC,
                                    NULL                         UOM,
                                    TAX.CGST_RATE                CGST_RATE,
                                    TAX.SGST_RATE                SGST_RATE,
                                    TAX.IGST_RATE                IGST_RATE,
                                    TAX.CESS_RATE                CESS_RATE,
                                    TAX.CGST_RATE + TAX.SGST_RATE + TAX.IGST_RATE
                                       TOTAL_TAXRATE,
                                    NULL                         QUANTITY,
                                    SUM(TAX.TAXABLE_AMOUNT)     TAXABLE_AMOUNT,
                                    SUM(TAX.CGST_AMOUNT)        CGST_AMOUNT,
                                    SUM(TAX.SGST_AMOUNT)        SGST_AMOUNT,
                                    SUM(TAX.IGST_AMOUNT)        IGST_AMOUNT,
                                    SUM(TAX.CESS_AMOUNT)        CESS_AMOUNT,
                                    SUM(
                                         DET.SRVAMT
                                       + coalesce(
                                              TAX.CGST_AMOUNT
                                            + TAX.SGST_AMOUNT
                                            + TAX.IGST_AMOUNT
                                            + TAX.CESS_AMOUNT,
                                            0)
                                       + coalesce(OTX.OTHER_CHARGE_AMOUNT, 0))
                                       NET_AMOUNT,
                                    NULL                        INPUT_ELIGIBILITY,
                                    NULL                        INPUT_CGST_AMOUNT,
                                    NULL                        INPUT_SGST_AMOUNT,
                                    NULL                        INPUT_IGST_AMOUNT,
                                    NULL                        INPUT_CESS_AMOUNT
                               FROM purservice service, ginview.lv_site refsite, ginview.lv_site ownersite, salsrvmain main, invhsnsacmain hsnsac, salsrvdet det
LEFT OUTER JOIN (  SELECT SALSRVDET_CODE,
                                              APPAMT            TAXABLE_AMOUNT,
                                              SUM(coalesce(CHGAMT, 0)) TAX_CHARGE_AMOUNT,
                                              SUM(
                                                 CASE
                                                    WHEN GST_COMPONENT = 'CGST' THEN RATE
                                                    ELSE 0
                                                 END)
                                                 CGST_RATE,
                                              SUM(
                                                 CASE
                                                    WHEN GST_COMPONENT = 'CGST' THEN CHGAMT
                                                    ELSE 0
                                                 END)
                                                 CGST_AMOUNT,
                                              SUM(
                                                 CASE
                                                    WHEN GST_COMPONENT = 'SGST' THEN RATE
                                                    ELSE 0
                                                 END)
                                                 SGST_RATE,
                                              SUM(
                                                 CASE
                                                    WHEN GST_COMPONENT = 'SGST' THEN CHGAMT
                                                    ELSE 0
                                                 END)
                                                 SGST_AMOUNT,
                                              SUM(
                                                 CASE
                                                    WHEN GST_COMPONENT = 'IGST' THEN RATE
                                                    ELSE 0
                                                 END)
                                                 IGST_RATE,
                                              SUM(
                                                 CASE
                                                    WHEN GST_COMPONENT = 'IGST' THEN CHGAMT
                                                    ELSE 0
                                                 END)
                                                 IGST_AMOUNT,
                                              SUM(
                                                 CASE
                                                    WHEN GST_COMPONENT = 'CESS' THEN RATE
                                                    ELSE 0
                                                 END)
                                                 CESS_RATE,
                                              SUM(
                                                 CASE
                                                    WHEN GST_COMPONENT = 'CESS' THEN CHGAMT
                                                    ELSE 0
                                                 END)
                                                 CESS_AMOUNT
                                         FROM SALSRVCHG_ITEM
                                        WHERE SOURCE = 'G'
                                     GROUP BY SALSRVDET_CODE, APPAMT) tax ON (DET.CODE = TAX.SALSRVDET_CODE)
LEFT OUTER JOIN (  SELECT SALSRVDET_CODE,
                                              SUM(coalesce(CHGAMT, 0)) OTHER_CHARGE_AMOUNT
                                         FROM SALSRVCHG_ITEM
                                        WHERE SOURCE <> 'G'
                                     GROUP BY SALSRVDET_CODE) otx ON (DET.CODE = OTX.SALSRVDET_CODE)
WHERE MAIN.SRVCODE = DET.SRVCODE   AND MAIN.ADMSITE_CODE_OWNER = OWNERSITE.SITECODE AND MAIN.ADMSITE_CODE = REFSITE.SITECODE AND DET.SERVICECODE = SERVICE.SERVICECODE AND SERVICE.INVHSNSACMAIN_CODE = HSNSAC.CODE AND MAIN.SRVDT BETWEEN PDTFR AND PDTTO AND OWNERSITE.GST_IDENTIFICATION_NO = PGSTIN AND coalesce(UPPER(MAIN.RELEASE_STATUS), 'U') = 'P' GROUP BY  OWNERSITE.NAME,
                                    MAIN.SRVDT,
                                    MAIN.SCHEME_DOCNO,
                                    MAIN.SALTRADEGRP_CODE,
                                    MAIN.NETAMT,
                                    MAIN.DOCNO,
                                    MAIN.DOCDT,
                                    CASE
                                       WHEN MAIN.GSTAPPL = 'Y' THEN 'OUTWARD SUPPLY'
                                       ELSE 'OTHER OUTWARD SUPPLY'
                                    END,
                                    REFSITE.GST_IDENTIFICATION_NO,
                                    REFSITE.GST_STATE_CODE,
                                    REFSITE.GST_REGISTRATION_DATE,
                                    MAIN.PCODE,
                                    --Start rev 04 (Devops id 21175)
                                    --HSNSAC.HSN_SAC_CODE,
                                    HSNSAC.GOVT_IDENTIFIER,
                                    --End rev 04 (Devops id 21175)
                                    HSNSAC.DESCRIPTION,
                                    TAX.CGST_RATE,
                                    TAX.SGST_RATE,
                                    TAX.IGST_RATE,
                                    TAX.CESS_RATE,
                                    TAX.CGST_RATE + TAX.SGST_RATE + TAX.IGST_RATE
                                -- start rev : 002
                                order by
                                        2,3,4
                                -- end rev : 002
                             ) data
LEFT OUTER JOIN ginview.lv_arap_sub_ledger cp ON (DATA.CP_CODE = CP.UK)
LEFT OUTER JOIN finsl sl ON (DATA.CP_CODE = SL.SLCODE)
LEFT OUTER JOIN fintradegrp tg ON (DATA.ENTRY_TRADETYPECODE = TG.CODE)
LEFT OUTER JOIN ginview.lv_arap_sub_ledger agent ON (SL.AGCODE = AGENT.UK)
		   --+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
      -- start rev : 002
 ) T1
    ) Z2
    order by 
            order_by_col;
    -- end rev : 002
   C8 CURSOR(
                PDTFR    timestamp(0),
                PDTTO    timestamp(0)
             )
   IS
      -- start rev : 002
      --(
      --+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
       --GSTR1_DOCISSUED
       --+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
       SELECT   QUERY_RESULT
       from     (
                   SELECT   'Nature  of Document,Sr. No. From,Sr. No. To,Total Number,Cancelled'  QUERY_RESULT,
                            '1'                                                                   order_by_col

                   
union all

                   -- end rev : 002
                   SELECT   REPLACE(REPLACE(QUERY_RESULT,',',' '),'|',',') QUERY_RESULT,
                            '2'                                            order_by_col
                   FROM     (
                             SELECT A.DOCUMENT_NATURE
                                  || '|'
                                  || A.START_SCHEMENO
                                  || '|'
                                  || A.END_SCHEMENO
                                  || '|'
                                  || A.DOCTOTAL_ASPERSERIES::text
                                  || '|'
                                  || A.CANCELLED::text
                                     QUERY_RESULT
                             FROM (SELECT TO_CALC_DATA.DOCUMENT_NATURE    DOCUMENT_NATURE,
                                          TO_CALC_DATA.START_SCHEME_DOCNO START_SCHEMENO,
                                          TO_CALC_DATA.END_SCHEME_DOCNO   END_SCHEMENO,
                                          CASE  -- to handle manual entries where doc seq is not getting derived
                                             WHEN    TO_CALC_DATA.END_SEQ_NO IS NULL
                                                  OR TO_CALC_DATA.START_SEQ_NO IS NULL
                                             THEN
                                                  coalesce(TO_CALC_DATA.DOCTOTAL, 0)
                                                + coalesce(TO_CALC_DATA.DELETEDCOUNT, 0)
                                             ELSE
                                                  coalesce(TO_CALC_DATA.END_SEQ_NO, 0)
                                                - coalesce(TO_CALC_DATA.START_SEQ_NO, 0)
                                                + 1
                                          END
                                             DOCTOTAL_ASPERSERIES,
                                          CASE  -- to handle manual entries where doc seq is not getting derived
                                             WHEN    TO_CALC_DATA.END_SEQ_NO IS NULL
                                                  OR TO_CALC_DATA.START_SEQ_NO IS NULL
                                             THEN
                                                TO_CALC_DATA.DELETEDCOUNT
                                             ELSE
                                                  ( (  (  coalesce(TO_CALC_DATA.END_SEQ_NO, 0)
                                                        - coalesce(TO_CALC_DATA.START_SEQ_NO, 0)
                                                        + 1)                -- expected data count
                                                     - (  coalesce(TO_CALC_DATA.DOCTOTAL, 0)
                                                        + TO_CALC_DATA.DELETEDCOUNT  -- found data count
                                                                                   ))) -- skipped data
                                                + TO_CALC_DATA.DELETEDCOUNT
                                          END
                                             CANCELLED
                                     FROM (  SELECT CASE
                                                       WHEN FINAL_DATA.SCHEMETYPE =
                                                               'OUTWARD SUPPLY'
                                                       THEN
                                                          'Invoices for outward supply'
                                                       WHEN FINAL_DATA.SCHEMETYPE =
                                                               'REVERSE INVOICE'
                                                       THEN
                                                          'Invoices for Inward supply from unregistered person'
                                                       WHEN FINAL_DATA.SCHEMETYPE IN ('DEBIT NOTE', 'REVERSE DEBIT NOTE')
                                                       THEN
                                                          'Debit note'
                                                       WHEN FINAL_DATA.SCHEMETYPE IN ('CREDIT NOTE',
                                                                'REVERSE CREDIT NOTE')
                                                       THEN
                                                          'Credit note'
                                                       WHEN FINAL_DATA.SCHEMETYPE = 'FREE SUPPLY'
                                                       THEN
                                                          'Delivery challan in cases other than by way of supply'
                                                    END
                                                       DOCUMENT_NATURE,
                                                    FINAL_DATA.SITECODE,
                                                    FINAL_DATA.DOCCODE,
                                                    MIN(FINAL_DATA.SCHEME_DOCNO)
                                                       START_SCHEME_DOCNO,
                                                    MIN((FINAL_DATA.SEQ)::numeric ) START_SEQ_NO,
                                                    MAX(FINAL_DATA.SCHEME_DOCNO)
                                                       END_SCHEME_DOCNO,
                                                    MAX((FINAL_DATA.SEQ)::numeric ) END_SEQ_NO,
                                                    SUM(FINAL_DATA.ISNONVOID)     DOCTOTAL,
                                                    SUM(FINAL_DATA.ISVOID)        DELETEDCOUNT
                                               FROM (SELECT CASE
                                                               WHEN DATA.GSTAPPL = 'Y'
                                                               THEN
                                                                  CASE
                                                                     WHEN DATA.ENTTYPE IN ('SIM', 'PRM', 'CSM', 'SSM')
                                                                     THEN
                                                                        'OUTWARD SUPPLY'
                                                                     WHEN DATA.ENTTYPE IN ('PSM', 'PIM')
                                                                     THEN
                                                                        'REVERSE INVOICE'
                                                                     WHEN DATA.ENTTYPE IN ('MIS')
                                                                     THEN
                                                                        'FREE SUPPLY'
                                                                  END
                                                               WHEN DATA.GSTAPPL = 'C'
                                                               THEN
                                                                  CASE
                                                                     WHEN DATA.ENTTYPE IN ('PRM', 'PDM')
                                                                     THEN
                                                                        'REVERSE CREDIT NOTE'
                                                                     WHEN DATA.ENTTYPE IN
                                                                     -- START: OMS CHANGES
                                                                             --('SRM', 'SCM')
                                                                             ('SRM', 'SCM', 'CSM')
                                                                     -- END: OMS CHANGES 
                                                                     THEN
                                                                        'CREDIT NOTE'
                                                                  END
                                                               WHEN DATA.GSTAPPL = 'D'
                                                               THEN
                                                                  CASE
                                                                     WHEN DATA.ENTTYPE IN ('PCM')
                                                                     THEN
                                                                        'REVERSE DEBIT NOTE'
                                                                     WHEN DATA.ENTTYPE IN ('SDM')
                                                                     THEN
                                                                        'DEBIT NOTE'
                                                                  END
                                                            END
                                                               SCHEMETYPE,
                                                            DATA.ENTDT,
                                                            DATA.SITECODE,
                                                            DATA.DOCCODE,
                                                            DATA.YCODE,
                                                            DATA.SCHEME_DOCNO,
                                                            db_fun_get_docno_seq(
                                                               DATA.DOCCODE,
                                                               DATA.YCODE,
                                                               DATA.ENTDT,
                                                               DATA.SCHEME_DOCNO,
                                                               DATA.SITECODE)
                                                               SEQ,
                                                            DATA.GSTAPPL,
                                                            DATA.ISNONVOID,
                                                            DATA.ISVOID
                                                       FROM (SELECT 'SIM'           ENTTYPE,
                                                                    MAIN.INVDT      ENTDT,
                                                                    MAIN.ADMSITE_CODE_OWNER
                                                                       SITECODE,
                                                                    MAIN.DOCCODE    DOCCODE,
                                                                    MAIN.YCODE      YCODE,
                                                                    MAIN.SCHEME_DOCNO SCHEME_DOCNO,
                                                                    MAIN.GSTAPPL    GSTAPPL,
                                                                    1               ISNONVOID,
                                                                    0               ISVOID
                                                               FROM SALINVMAIN    MAIN,
                                                                    ginview.LV_SITE SITE
                                                              WHERE     MAIN.ADMSITE_CODE_OWNER =
                                                                           SITE.UK
                                                                    AND GSTAPPL <> 'N'
                                                                    AND MAIN.INVDT BETWEEN PDTFR
                                                                                       AND PDTTO
                                                                    AND SITE.GST_IDENTIFICATION_NO =
                                                                           PGSTIN
                                                             
UNION ALL

                                                             SELECT 'SIM'           ENTTYPE,
                                                                    MAIN.INVDT      ENTDT,
                                                                    MAIN.ADMSITE_CODE_OWNER
                                                                       SITECODE,
                                                                    MAIN.DOCCODE    DOCCODE,
                                                                    MAIN.YCODE      YCODE,
                                                                    MAIN.SCHEME_DOCNO SCHEME_DOCNO,
                                                                    MAIN.GSTAPPL    GSTAPPL,
                                                                    0               ISNONVOID,
                                                                    1               ISVOID
                                                               FROM SALINVMAIN_DELETED MAIN,
                                                                    ginview.LV_SITE  SITE
                                                              WHERE     MAIN.ADMSITE_CODE_OWNER =
                                                                           SITE.UK
                                                                    AND GSTAPPL <> 'N'
                                                                    AND MAIN.INVDT BETWEEN PDTFR
                                                                                       AND PDTTO
                                                                    AND SITE.GST_IDENTIFICATION_NO =
                                                                           PGSTIN
                                                             
UNION ALL

                                                             SELECT 'SRM'           ENTTYPE,
                                                                    MAIN.RTDT       ENTDT,
                                                                    MAIN.ADMSITE_CODE_OWNER
                                                                       SITECODE,
                                                                    MAIN.DOCCODE    DOCCODE,
                                                                    MAIN.YCODE      YCODE,
                                                                    MAIN.SCHEME_DOCNO SCHEME_DOCNO,
                                                                    MAIN.GSTAPPL    GSTAPPL,
                                                                    1               ISNONVOID,
                                                                    0               ISVOID
                                                               FROM SALRTMAIN     MAIN,
                                                                    ginview.LV_SITE SITE
                                                              WHERE     MAIN.ADMSITE_CODE_OWNER =
                                                                           SITE.UK
                                                                    AND GSTAPPL <> 'N'
                                                                    AND MAIN.RTDT BETWEEN PDTFR
                                                                                      AND PDTTO
                                                                    AND SITE.GST_IDENTIFICATION_NO =
                                                                           PGSTIN
                                                             
UNION ALL

                                                             SELECT 'SRM'           ENTTYPE,
                                                                    MAIN.RTDT       ENTDT,
                                                                    MAIN.ADMSITE_CODE_OWNER
                                                                       SITECODE,
                                                                    MAIN.DOCCODE    DOCCODE,
                                                                    MAIN.YCODE      YCODE,
                                                                    MAIN.SCHEME_DOCNO SCHEME_DOCNO,
                                                                    MAIN.GSTAPPL    GSTAPPL,
                                                                    0               ISNONVOID,
                                                                    1               ISVOID
                                                               FROM SALRTMAIN_DELETED MAIN,
                                                                    ginview.LV_SITE SITE
                                                              WHERE     MAIN.ADMSITE_CODE_OWNER =
                                                                           SITE.UK
                                                                    AND GSTAPPL <> 'N'
                                                                    AND MAIN.RTDT BETWEEN PDTFR
                                                                                      AND PDTTO
                                                                    AND SITE.GST_IDENTIFICATION_NO =
                                                                           PGSTIN
                                                             
UNION ALL

                                                             SELECT CASE
                                                                       WHEN MAIN.JRNTYPE = 'C'
                                                                       THEN
                                                                          'SCM'
                                                                       ELSE
                                                                          'SDM'
                                                                    END
                                                                       ENTTYPE,
                                                                    MAIN.JRNDT      ENTDT,
                                                                    MAIN.ADMSITE_CODE_OWNER
                                                                       SITECODE,
                                                                    MAIN.DOCCODE    DOCCODE,
                                                                    MAIN.YCODE      YCODE,
                                                                    MAIN.SCHEME_DOCNO SCHEME_DOCNO,
                                                                    MAIN.GSTAPPL    GSTAPPL,
                                                                    1               ISNONVOID,
                                                                    0               ISVOID
                                                               FROM SALINVJRNMAIN MAIN,
                                                                    ginview.LV_SITE SITE
                                                              WHERE     MAIN.ADMSITE_CODE_OWNER =
                                                                           SITE.UK
                                                                    AND GSTAPPL <> 'N'
                                                                    AND MAIN.JRNDT BETWEEN PDTFR
                                                                                       AND PDTTO
                                                                    AND SITE.GST_IDENTIFICATION_NO =
                                                                           PGSTIN
                                                             
UNION ALL

                                                             SELECT CASE
                                                                       WHEN MAIN.JRNTYPE = 'C'
                                                                       THEN
                                                                          'SCM'
                                                                       ELSE
                                                                          'SDM'
                                                                    END
                                                                       ENTTYPE,
                                                                    MAIN.JRNDT      ENTDT,
                                                                    MAIN.ADMSITE_CODE_OWNER
                                                                       SITECODE,
                                                                    MAIN.DOCCODE    DOCCODE,
                                                                    MAIN.YCODE      YCODE,
                                                                    MAIN.SCHEME_DOCNO SCHEME_DOCNO,
                                                                    MAIN.GSTAPPL    GSTAPPL,
                                                                    0               ISNONVOID,
                                                                    1               ISVOID
                                                               FROM SALINVJRNMAIN_DELETED MAIN,
                                                                    ginview.LV_SITE     SITE
                                                              WHERE     MAIN.ADMSITE_CODE_OWNER =
                                                                           SITE.UK
                                                                    AND GSTAPPL <> 'N'
                                                                    AND MAIN.JRNDT BETWEEN PDTFR
                                                                                       AND PDTTO
                                                                    AND SITE.GST_IDENTIFICATION_NO =
                                                                           PGSTIN
                                                             
UNION ALL

                                                             SELECT 'SSM'           ENTTYPE,
                                                                    MAIN.SRVDT      ENTDT,
                                                                    MAIN.ADMSITE_CODE_OWNER
                                                                       SITECODE,
                                                                    MAIN.DOCCODE    DOCCODE,
                                                                    MAIN.YCODE      YCODE,
                                                                    MAIN.SCHEME_DOCNO SCHEME_DOCNO,
                                                                    MAIN.GSTAPPL    GSTAPPL,
                                                                    1               ISNONVOID,
                                                                    0               ISVOID
                                                               FROM SALSRVMAIN MAIN,
                                                                    ginview.LV_SITE SITE
                                                              WHERE     MAIN.ADMSITE_CODE_OWNER =
                                                                           SITE.UK
                                                                    AND GSTAPPL <> 'N'
                                                                    AND MAIN.SRVDT BETWEEN PDTFR
                                                                                       AND PDTTO
                                                                    AND SITE.GST_IDENTIFICATION_NO =
                                                                           PGSTIN
                                                             
UNION ALL

                                                             SELECT 'SSM'           ENTTYPE,
                                                                    MAIN.SRVDT      ENTDT,
                                                                    MAIN.ADMSITE_CODE_OWNER
                                                                       SITECODE,
                                                                    MAIN.DOCCODE    DOCCODE,
                                                                    MAIN.YCODE      YCODE,
                                                                    MAIN.SCHEME_DOCNO SCHEME_DOCNO,
                                                                    MAIN.GSTAPPL    GSTAPPL,
                                                                    0               ISNONVOID,
                                                                    1               ISVOID
                                                               FROM SALSRVMAIN_DELETED  MAIN,
                                                                    ginview.LV_SITE     SITE
                                                              WHERE     MAIN.ADMSITE_CODE_OWNER =
                                                                           SITE.UK
                                                                    AND GSTAPPL <> 'N'
                                                                    AND MAIN.SRVDT BETWEEN PDTFR
                                                                                       AND PDTTO
                                                                    AND SITE.GST_IDENTIFICATION_NO =
                                                                           PGSTIN
                                                             
UNION ALL

                                                             SELECT 'CSM'             ENTTYPE,
                                                                    date_trunc('day', MAIN.CSDATE) ENTDT,
                                                                    MAIN.ADMSITE_CODE_OWNER
                                                                       SITECODE,
                                                                    -- START REV: OMS CHANGES
                                                                    -- MAIN.DOCCODE      DOCCODE,
                                                                    -- when gst doc no is generated by ERP, then doccode is hardcoded
                                                                    CASE WHEN MAIN.GST_DOC_NO IS NOT NULL AND MAIN.GST_DOC_NO <> MAIN.SCHEME_DOCNO
                                                                    THEN 
                                                                         CASE WHEN MAIN.GSTAPPL = 'C' THEN 10000004 ELSE 10000005 END
                                                                    ELSE MAIN.DOCCODE END DOCCODE, 
                                                                    -- END REV:  OMS CHANGES
                                                                    MAIN.YCODE        YCODE,
                                                                    -- START REV: OMS CHANGES
                                                                    /*MAIN.SCHEME_DOCNO
                                                                       SCHEME_DOCNO,
                                                                     */
                                                                     coalesce(MAIN.GST_DOC_NO, MAIN.SCHEME_DOCNO)
                                                                       SCHEME_DOCNO,
                                                                    -- END REV: OMS CHANGES
                                                                    MAIN.GSTAPPL      GSTAPPL,
                                                                    1                 ISNONVOID,
                                                                    0                 ISVOID
                                                               FROM SALCSMAIN     MAIN,
                                                                    ginview.LV_SITE SITE
                                                                    
                                                                    , ADMSITE SITEMASTER
                                                              
                                                                WHERE     MAIN.ADMSITE_CODE =
                                                                           SITE.UK
                                                                    -- END REV: OMS Changes
                                                                    AND GSTAPPL <> 'N'
                                                                    -- START REV: OMS CHANGES
                                                                    AND MAIN.ADMSITE_CODE = SITEMASTER.CODE
                                                                    AND ( coalesce(SITEMASTER.INSTALLATION_TYPE, 'XX') <> 'ZPOS'
                                                                           OR (
                                                                                coalesce(SITEMASTER.INSTALLATION_TYPE, 'XX') = 'ZPOS'
                                                                                AND
                                                                                MAIN.CHANNELTYPE = 'ETL'
                                                                            )
                                                                        )
                                                                    --AND MAIN.DOCCODE <> 1
                                                                    AND ( MAIN.DOCCODE <> 1
                                                                            OR (
                                                                                MAIN.DOCCODE = 1
                                                                                AND MAIN.GST_DOC_NO IS NOT NULL
                                                                                AND MAIN.GST_DOC_NO <> MAIN.SCHEME_DOCNO
                                                                            )
                                                                        )
                                                                    AND MAIN.PSITE_POSSTLM_CODE IS NULL
                                                                    -- END REV: OMS CHANGES
                                                                    AND date_trunc('day', MAIN.CSDATE) BETWEEN PDTFR
                                                                                                AND PDTTO
                                                                    AND SITE.GST_IDENTIFICATION_NO =
                                                                           PGSTIN
                                                             
UNION ALL

                                                             SELECT 'CSM'             ENTTYPE,
                                                                    date_trunc('day', MAIN.CSDATE) ENTDT,
                                                                    MAIN.ADMSITE_CODE_OWNER
                                                                       SITECODE,
                                                                    -- START REV: OMS CHANGES
                                                                    -- MAIN.DOCCODE      DOCCODE,
                                                                    -- when gst doc no is generated by ERP, then doccode is hardcoded
                                                                    CASE WHEN MAIN.GST_DOC_NO IS NOT NULL AND MAIN.GST_DOC_NO <> MAIN.SCHEME_DOCNO
                                                                    THEN 
                                                                         CASE WHEN MAIN.GSTAPPL = 'C' THEN 10000004 ELSE 10000005 END
                                                                    ELSE MAIN.DOCCODE END DOCCODE, 
                                                                    -- END REV: OMS CHANGES
                                                                    MAIN.YCODE        YCODE,
                                                                    -- START REV: OMS CHANGES
                                                                    /*MAIN.SCHEME_DOCNO
                                                                       SCHEME_DOCNO,
                                                                     */
                                                                     coalesce(MAIN.GST_DOC_NO, MAIN.SCHEME_DOCNO)
                                                                       SCHEME_DOCNO,
                                                                    -- END REV: OMS CHANGES
                                                                    MAIN.GSTAPPL      GSTAPPL,
                                                                    0                 ISNONVOID,
                                                                    1                 ISVOID
                                                               FROM SALCSMAIN_DELETED MAIN,
                                                                    ginview.LV_SITE SITE
                                                                    
                                                                    , ADMSITE SITEMASTER
                                                              
                                                                WHERE     MAIN.ADMSITE_CODE =
                                                                           SITE.UK
                                                                    -- END REV: OMS Changes
                                                                    AND GSTAPPL <> 'N'
                                                                    -- START REV: OMS CHANGES
                                                                    AND MAIN.ADMSITE_CODE = SITEMASTER.CODE
                                                                    AND ( coalesce(SITEMASTER.INSTALLATION_TYPE, 'XX') <> 'ZPOS'
                                                                           OR (
                                                                                coalesce(SITEMASTER.INSTALLATION_TYPE, 'XX') = 'ZPOS'
                                                                                AND
                                                                                MAIN.CHANNELTYPE = 'ETL'
                                                                            )
                                                                        )
                                                                    --AND MAIN.DOCCODE <> 1
                                                                    AND ( MAIN.DOCCODE <> 1
                                                                            OR (
                                                                                MAIN.DOCCODE = 1
                                                                                AND MAIN.GST_DOC_NO IS NOT NULL
                                                                                AND MAIN.GST_DOC_NO <> MAIN.SCHEME_DOCNO
                                                                            )
                                                                        )
                                                                    AND MAIN.PSITE_POSSTLM_CODE IS NULL
                                                                    -- END REV: OMS CHANGES
                                                                    AND date_trunc('day', MAIN.CSDATE) BETWEEN PDTFR
                                                                                                AND PDTTO
                                                                    AND SITE.GST_IDENTIFICATION_NO =
                                                                           PGSTIN
                                                             
UNION ALL

                                                             SELECT 'MIS'           ENTTYPE,
                                                                    MAIN.MISCDT     ENTDT,
                                                                    MAIN.ADMSITE_CODE SITECODE,
                                                                    MAIN.DOCCODE    DOCCODE,
                                                                    MAIN.YCODE      YCODE,
                                                                    MAIN.SCHEME_DOCNO SCHEME_DOCNO,
                                                                    MAIN.GSTAPPL    GSTAPPL,
                                                                    1               ISNONVOID,
                                                                    0               ISVOID
                                                               FROM INVMISCMAIN   MAIN,
                                                                    ginview.LV_SITE SITE
                                                              WHERE     MAIN.ADMSITE_CODE = SITE.UK
                                                                    AND GSTAPPL <> 'N'
                                                                    AND MAIN.MISCDT BETWEEN PDTFR
                                                                                        AND PDTTO
                                                                    AND SITE.GST_IDENTIFICATION_NO =
                                                                           PGSTIN
                                                             
UNION ALL

                                                             SELECT 'MIS'           ENTTYPE,
                                                                    MAIN.MISCDT     ENTDT,
                                                                    MAIN.ADMSITE_CODE SITECODE,
                                                                    MAIN.DOCCODE    DOCCODE,
                                                                    MAIN.YCODE      YCODE,
                                                                    MAIN.SCHEME_DOCNO SCHEME_DOCNO,
                                                                    MAIN.GSTAPPL    GSTAPPL,
                                                                    0               ISNONVOID,
                                                                    1               ISVOID
                                                               FROM INVMISCMAIN_DELETED MAIN,
                                                                    ginview.LV_SITE   SITE
                                                              WHERE     MAIN.ADMSITE_CODE = SITE.UK
                                                                    AND GSTAPPL <> 'N'
                                                                    AND MAIN.MISCDT BETWEEN PDTFR
                                                                                        AND PDTTO
                                                                    AND SITE.GST_IDENTIFICATION_NO =
                                                                           PGSTIN
                                                             
UNION ALL

                                                             SELECT 'PIM'           ENTTYPE,
                                                                    MAIN.INVDT      ENTDT,
                                                                    MAIN.ADMSITE_CODE SITECODE,
                                                                    MAIN.DOCCODE    DOCCODE,
                                                                    MAIN.YCODE      YCODE,
                                                                    MAIN.SCHEME_DOCNO SCHEME_DOCNO,
                                                                    MAIN.GSTAPPL    GSTAPPL,
                                                                    1               ISNONVOID,
                                                                    0               ISVOID
                                                               FROM PURINVMAIN    MAIN,
                                                                    ginview.LV_SITE SITE
                                                              WHERE     MAIN.ADMSITE_CODE = SITE.UK
                                                                    AND GSTAPPL <> 'N'
                                                                    AND MAIN.INVDT BETWEEN PDTFR
                                                                                       AND PDTTO
                                                                    AND SITE.GST_IDENTIFICATION_NO =
                                                                           PGSTIN
                                                             
UNION ALL

                                                             SELECT 'PIM'           ENTTYPE,
                                                                    MAIN.INVDT      ENTDT,
                                                                    MAIN.ADMSITE_CODE SITECODE,
                                                                    MAIN.DOCCODE    DOCCODE,
                                                                    MAIN.YCODE      YCODE,
                                                                    MAIN.SCHEME_DOCNO SCHEME_DOCNO,
                                                                    MAIN.GSTAPPL    GSTAPPL,
                                                                    0               ISNONVOID,
                                                                    1               ISVOID
                                                               FROM PURINVMAIN_DELETED MAIN,
                                                                    ginview.LV_SITE  SITE
                                                              WHERE     MAIN.ADMSITE_CODE = SITE.UK
                                                                    AND GSTAPPL <> 'N'
                                                                    AND MAIN.INVDT BETWEEN PDTFR
                                                                                       AND PDTTO
                                                                    AND SITE.GST_IDENTIFICATION_NO =
                                                                           PGSTIN
                                                             
UNION ALL

                                                             SELECT 'PRM'           ENTTYPE,
                                                                    MAIN.RTDT       ENTDT,
                                                                    MAIN.ADMSITE_CODE SITECODE,
                                                                    MAIN.DOCCODE    DOCCODE,
                                                                    MAIN.YCODE      YCODE,
                                                                    MAIN.SCHEME_DOCNO SCHEME_DOCNO,
                                                                    MAIN.GSTAPPL    GSTAPPL,
                                                                    1               ISNONVOID,
                                                                    0               ISVOID
                                                               FROM PURRTMAIN     MAIN,
                                                                    ginview.LV_SITE SITE
                                                              WHERE     MAIN.ADMSITE_CODE = SITE.UK
                                                                    AND GSTAPPL <> 'N'
                                                                    AND MAIN.RTDT BETWEEN PDTFR
                                                                                      AND PDTTO
                                                                    AND SITE.GST_IDENTIFICATION_NO =
                                                                           PGSTIN
                                                             
UNION ALL

                                                             SELECT 'PRM'           ENTTYPE,
                                                                    MAIN.RTDT       ENTDT,
                                                                    MAIN.ADMSITE_CODE SITECODE,
                                                                    MAIN.DOCCODE    DOCCODE,
                                                                    MAIN.YCODE      YCODE,
                                                                    MAIN.SCHEME_DOCNO SCHEME_DOCNO,
                                                                    MAIN.GSTAPPL    GSTAPPL,
                                                                    0               ISNONVOID,
                                                                    1               ISVOID
                                                               FROM PURRTMAIN_DELETED MAIN,
                                                                    ginview.LV_SITE SITE
                                                              WHERE     MAIN.ADMSITE_CODE = SITE.UK
                                                                    AND GSTAPPL <> 'N'
                                                                    AND MAIN.RTDT BETWEEN PDTFR
                                                                                      AND PDTTO
                                                                    AND SITE.GST_IDENTIFICATION_NO =
                                                                           PGSTIN
                                                             
UNION ALL

                                                             SELECT CASE
                                                                       WHEN MAIN.JRNTYPE = 'C'
                                                                       THEN
                                                                          'PCM'
                                                                       ELSE
                                                                          'PDM'
                                                                    END
                                                                       ENTTYPE,
                                                                    MAIN.JRNDT      ENTDT,
                                                                    MAIN.ADMSITE_CODE_OWNER
                                                                       SITECODE,
                                                                    MAIN.DOCCODE    DOCCODE,
                                                                    MAIN.YCODE      YCODE,
                                                                    MAIN.SCHEME_DOCNO SCHEME_DOCNO,
                                                                    MAIN.GSTAPPL    GSTAPPL,
                                                                    1               ISNONVOID,
                                                                    0               ISVOID
                                                               FROM PURINVJRNMAIN MAIN,
                                                                    ginview.LV_SITE SITE
                                                              WHERE     MAIN.ADMSITE_CODE_OWNER =
                                                                           SITE.UK
                                                                    AND GSTAPPL <> 'N'
                                                                    AND MAIN.JRNDT BETWEEN PDTFR
                                                                                       AND PDTTO
                                                                    AND SITE.GST_IDENTIFICATION_NO =
                                                                           PGSTIN
                                                             
UNION ALL

                                                             SELECT CASE
                                                                       WHEN MAIN.JRNTYPE = 'C'
                                                                       THEN
                                                                          'PCM'
                                                                       ELSE
                                                                          'PDM'
                                                                    END
                                                                       ENTTYPE,
                                                                    MAIN.JRNDT      ENTDT,
                                                                    MAIN.ADMSITE_CODE_OWNER
                                                                       SITECODE,
                                                                    MAIN.DOCCODE    DOCCODE,
                                                                    MAIN.YCODE      YCODE,
                                                                    MAIN.SCHEME_DOCNO SCHEME_DOCNO,
                                                                    MAIN.GSTAPPL    GSTAPPL,
                                                                    0               ISNONVOID,
                                                                    1               ISVOID
                                                               FROM PURINVJRNMAIN_DELETED MAIN,
                                                                    ginview.LV_SITE     SITE
                                                              WHERE     MAIN.ADMSITE_CODE_OWNER =
                                                                           SITE.UK
                                                                    AND GSTAPPL <> 'N'
                                                                    AND MAIN.JRNDT BETWEEN PDTFR
                                                                                       AND PDTTO
                                                                    AND SITE.GST_IDENTIFICATION_NO =
                                                                           PGSTIN
                                                             
UNION ALL

                                                             SELECT 'PSM'           ENTTYPE,
                                                                    MAIN.SRVDT      ENTDT,
                                                                    MAIN.ADMSITE_CODE_OWNER
                                                                       SITECODE,
                                                                    MAIN.DOCCODE    DOCCODE,
                                                                    MAIN.YCODE      YCODE,
                                                                    MAIN.SCHEME_DOCNO SCHEME_DOCNO,
                                                                    MAIN.GSTAPPL    GSTAPPL,
                                                                    1               ISNONVOID,
                                                                    0               ISVOID
                                                               FROM PURSRVMAIN    MAIN,
                                                                    ginview.LV_SITE SITE
                                                              WHERE     MAIN.ADMSITE_CODE_OWNER =
                                                                           SITE.UK
                                                                    AND GSTAPPL <> 'N'
                                                                    AND MAIN.SRVDT BETWEEN PDTFR
                                                                                       AND PDTTO
                                                                    AND SITE.GST_IDENTIFICATION_NO =
                                                                           PGSTIN
                                                             
UNION ALL

                                                             SELECT 'PSM'           ENTTYPE,
                                                                    MAIN.SRVDT      ENTDT,
                                                                    MAIN.ADMSITE_CODE_OWNER
                                                                       SITECODE,
                                                                    MAIN.DOCCODE    DOCCODE,
                                                                    MAIN.YCODE      YCODE,
                                                                    MAIN.SCHEME_DOCNO SCHEME_DOCNO,
                                                                    MAIN.GSTAPPL    GSTAPPL,
                                                                    0               ISNONVOID,
                                                                    1               ISVOID
                                                               FROM PURSRVMAIN_DELETED MAIN,
                                                                    ginview.LV_SITE  SITE
                                                              WHERE     MAIN.ADMSITE_CODE_OWNER =
                                                                           SITE.UK
                                                                    AND GSTAPPL <> 'N'
                                                                    AND MAIN.SRVDT BETWEEN PDTFR
                                                                                       AND PDTTO
                                                                    AND SITE.GST_IDENTIFICATION_NO =
                                                                           PGSTIN) DATA) FINAL_DATA
                                           GROUP BY FINAL_DATA.SCHEMETYPE,
                                                    FINAL_DATA.SITECODE,
                                                    FINAL_DATA.DOCCODE) TO_CALC_DATA
                                   
UNION ALL

                                   SELECT 'Invoices for outward supply'   DOCUMENT_NATURE,
                                          A.START_SCHEME                  START_SCHEMENO,
                                          A.END_SCHEME                    END_SCHEMENO,
                                          A.COUNTASPERSERIES              DOCTOTAL_ASPERSERIES,
                                          (A.VOID_COUNT + A.SKIPPEDCOUNT) CANCELLED
                                     FROM (SELECT RESULT.ADMSITE_CODE,
                                                  RESULT.DOCCODE,
                                                  RESULT.START_SEQNO,
                                                  STARTSCHEME.GSTDOCNO START_SCHEME,
                                                  RESULT.END_SEQNO,
                                                  ENDSCHEME.GSTDOCNO   END_SCHEME,
                                                  RESULT.END_SEQNO - RESULT.START_SEQNO + 1
                                                     COUNTASPERSERIES,
                                                  RESULT.NONVOID_COUNT,
                                                  RESULT.VOID_COUNT,
                                                    (RESULT.END_SEQNO - RESULT.START_SEQNO + 1)
                                                  - (RESULT.NONVOID_COUNT + RESULT.VOID_COUNT)
                                                     SKIPPEDCOUNT
                                             FROM (  SELECT MAIN.ADMSITE_CODE,
                                                            1000000            DOCCODE,
                                                            MIN(MAIN.GSTDOCSEQ) START_SEQNO,
                                                            MAX(MAIN.GSTDOCSEQ) END_SEQNO,
                                                            SUM(MAIN.ISNONVOID) NONVOID_COUNT,
                                                            SUM(MAIN.ISVOID)  VOID_COUNT
                                                       FROM (SELECT MAIN.ADMSITE_CODE,
                                                                    MAIN.GSTDOCNO,
                                                                    MAIN.GSTDOCSEQ,
                                                                    1 ISNONVOID,
                                                                    0 ISVOID
                                                               FROM PSITE_POSBILL MAIN,
                                                                    ginview.LV_SITE SITE
                                                              WHERE     MAIN.GSTDOCSEQ IS NOT NULL
                                                                    --start rev 003
                                                                    AND SUBSTR(MAIN.GSTDOCNO,4,1) = 'P'
                                                                    --end rev 003
                                                                    AND date_trunc('day', MAIN.BILLDATE) BETWEEN PDTFR
                                                                                                  AND PDTTO
                                                                    AND MAIN.ADMSITE_CODE = SITE.UK
                                                                    AND SITE.GST_IDENTIFICATION_NO =
                                                                           PGSTIN
                                                             
UNION ALL

                                                             SELECT MAIN.ADMSITE_CODE,
                                                                    MAIN.GSTDOCNO,
                                                                    MAIN.GSTDOCSEQ,
                                                                    0 ISNONVOID,
                                                                    1 ISVOID
                                                               FROM PSITE_POSBILLVOID MAIN,
                                                                    ginview.LV_SITE SITE
                                                              WHERE     MAIN.GSTDOCSEQ IS NOT NULL
                                                                    --start rev 003
                                                                    and SUBSTR(MAIN.GSTDOCNO,4,1) = 'P'
                                                                    --end rev 003
                                                                    AND date_trunc('day', MAIN.VOIDBILLDATE) BETWEEN PDTFR
                                                                                                      AND PDTTO
                                                                    AND MAIN.ADMSITE_CODE = SITE.UK
                                                                    AND SITE.GST_IDENTIFICATION_NO =
                                                                           PGSTIN) MAIN
                                                   GROUP BY MAIN.ADMSITE_CODE) RESULT,
                                                  (SELECT MAIN.ADMSITE_CODE,
                                                          MAIN.GSTDOCNO,
                                                          MAIN.GSTDOCSEQ
                                                     FROM PSITE_POSBILL   MAIN,
                                                          ginview.LV_SITE SITE
                                                    WHERE     MAIN.GSTDOCSEQ IS NOT NULL
                                                          --start rev 003
                                                          AND SUBSTR(MAIN.GSTDOCNO,4,1) = 'P'
                                                          --end rev 003
                                                          AND date_trunc('day', MAIN.BILLDATE) BETWEEN PDTFR
                                                                                        AND PDTTO
                                                          AND MAIN.ADMSITE_CODE = SITE.UK
                                                          AND SITE.GST_IDENTIFICATION_NO = PGSTIN
                                                   
UNION ALL

                                                   SELECT MAIN.ADMSITE_CODE,
                                                          MAIN.GSTDOCNO,
                                                          MAIN.GSTDOCSEQ
                                                     FROM PSITE_POSBILLVOID MAIN,
                                                          ginview.LV_SITE   SITE
                                                    WHERE     MAIN.GSTDOCSEQ IS NOT NULL
                                                          --start rev 003
                                                          AND SUBSTR(MAIN.GSTDOCNO,4,1) = 'P'
                                                          --end rev 003
                                                          AND date_trunc('day', MAIN.VOIDBILLDATE) BETWEEN PDTFR
                                                                                            AND PDTTO
                                                          AND MAIN.ADMSITE_CODE = SITE.UK
                                                          AND SITE.GST_IDENTIFICATION_NO = PGSTIN)
                                                  STARTSCHEME,
                                                  (SELECT MAIN.ADMSITE_CODE,
                                                          MAIN.GSTDOCNO,
                                                          MAIN.GSTDOCSEQ
                                                     FROM PSITE_POSBILL   MAIN,
                                                          ginview.LV_SITE SITE
                                                    WHERE     MAIN.GSTDOCSEQ IS NOT NULL
                                                          --start rev 003
                                                          AND SUBSTR(MAIN.GSTDOCNO,4,1) = 'P'
                                                          --end rev 003
                                                          AND date_trunc('day', MAIN.BILLDATE) BETWEEN PDTFR
                                                                                        AND PDTTO
                                                          AND MAIN.ADMSITE_CODE = SITE.UK
                                                          AND SITE.GST_IDENTIFICATION_NO = PGSTIN
                                                   
UNION ALL

                                                   SELECT MAIN.ADMSITE_CODE,
                                                          MAIN.GSTDOCNO,
                                                          MAIN.GSTDOCSEQ
                                                     FROM PSITE_POSBILLVOID MAIN,
                                                          ginview.LV_SITE   SITE
                                                    WHERE     MAIN.GSTDOCSEQ IS NOT NULL
                                                          --start rev 003
                                                          AND SUBSTR(MAIN.GSTDOCNO,4,1) = 'P'
                                                          --end rev 003
                                                          AND date_trunc('day', MAIN.VOIDBILLDATE) BETWEEN PDTFR
                                                                                            AND PDTTO
                                                          AND MAIN.ADMSITE_CODE = SITE.UK
                                                          AND SITE.GST_IDENTIFICATION_NO = PGSTIN)
                                                  ENDSCHEME
                                            WHERE     RESULT.ADMSITE_CODE =
                                                         STARTSCHEME.ADMSITE_CODE
                                                  AND RESULT.START_SEQNO = STARTSCHEME.GSTDOCSEQ
                                                  AND RESULT.ADMSITE_CODE =
                                                         ENDSCHEME.ADMSITE_CODE
                                                  AND RESULT.END_SEQNO = ENDSCHEME.GSTDOCSEQ) A
                                   
UNION ALL

                                   --start rev 003
                                   SELECT 'Credit note'                   DOCUMENT_NATURE,
                                          A.START_SCHEME                  START_SCHEMENO,
                                          A.END_SCHEME                    END_SCHEMENO,
                                          A.COUNTASPERSERIES              DOCTOTAL_ASPERSERIES,
                                          (A.VOID_COUNT + A.SKIPPEDCOUNT) CANCELLED
                                     FROM (SELECT RESULT.ADMSITE_CODE,
                                                  RESULT.DOCCODE,
                                                  RESULT.START_SEQNO,
                                                  STARTSCHEME.GSTDOCNO START_SCHEME,
                                                  RESULT.END_SEQNO,
                                                  ENDSCHEME.GSTDOCNO   END_SCHEME,
                                                  RESULT.END_SEQNO - RESULT.START_SEQNO + 1
                                                     COUNTASPERSERIES,
                                                  RESULT.NONVOID_COUNT,
                                                  RESULT.VOID_COUNT,
                                                    (RESULT.END_SEQNO - RESULT.START_SEQNO + 1)
                                                  - (RESULT.NONVOID_COUNT + RESULT.VOID_COUNT)
                                                     SKIPPEDCOUNT
                                             FROM (  SELECT MAIN.ADMSITE_CODE,
                                                            1000000            DOCCODE,
                                                            MIN(MAIN.GSTDOCSEQ) START_SEQNO,
                                                            MAX(MAIN.GSTDOCSEQ) END_SEQNO,
                                                            SUM(MAIN.ISNONVOID) NONVOID_COUNT,
                                                            SUM(MAIN.ISVOID)  VOID_COUNT
                                                       FROM (SELECT MAIN.ADMSITE_CODE,
                                                                    MAIN.GSTDOCNO,
                                                                    MAIN.GSTDOCSEQ,
                                                                    1 ISNONVOID,
                                                                    0 ISVOID
                                                               FROM PSITE_POSBILL MAIN,
                                                                    ginview.LV_SITE SITE
                                                              WHERE     MAIN.GSTDOCSEQ IS NOT NULL
                                                                    AND SUBSTR(MAIN.GSTDOCNO,4,2) = 'CN'
                                                                    AND date_trunc('day', MAIN.BILLDATE) BETWEEN PDTFR
                                                                                                  AND PDTTO
                                                                    AND MAIN.ADMSITE_CODE = SITE.UK
                                                                    AND SITE.GST_IDENTIFICATION_NO =
                                                                           PGSTIN
                                                             
UNION ALL

                                                             SELECT MAIN.ADMSITE_CODE,
                                                                    MAIN.GSTDOCNO,
                                                                    MAIN.GSTDOCSEQ,
                                                                    0 ISNONVOID,
                                                                    1 ISVOID
                                                               FROM PSITE_POSBILLVOID MAIN,
                                                                    ginview.LV_SITE SITE
                                                              WHERE     MAIN.GSTDOCSEQ IS NOT NULL
                                                                    AND SUBSTR(MAIN.GSTDOCNO,4,2) = 'CN'
                                                                    AND date_trunc('day', MAIN.VOIDBILLDATE) BETWEEN PDTFR
                                                                                                      AND PDTTO
                                                                    AND MAIN.ADMSITE_CODE = SITE.UK
                                                                    AND SITE.GST_IDENTIFICATION_NO =
                                                                           PGSTIN) MAIN
                                                   GROUP BY MAIN.ADMSITE_CODE) RESULT,
                                                  (SELECT MAIN.ADMSITE_CODE,
                                                          MAIN.GSTDOCNO,
                                                          MAIN.GSTDOCSEQ
                                                     FROM PSITE_POSBILL   MAIN,
                                                          ginview.LV_SITE SITE
                                                    WHERE     MAIN.GSTDOCSEQ IS NOT NULL
                                                          AND SUBSTR(MAIN.GSTDOCNO,4,2) = 'CN'
                                                          AND date_trunc('day', MAIN.BILLDATE) BETWEEN PDTFR
                                                                                        AND PDTTO
                                                          AND MAIN.ADMSITE_CODE = SITE.UK
                                                          AND SITE.GST_IDENTIFICATION_NO = PGSTIN
                                                   
UNION ALL

                                                   SELECT MAIN.ADMSITE_CODE,
                                                          MAIN.GSTDOCNO,
                                                          MAIN.GSTDOCSEQ
                                                     FROM PSITE_POSBILLVOID MAIN,
                                                          ginview.LV_SITE   SITE
                                                    WHERE     MAIN.GSTDOCSEQ IS NOT NULL
                                                          AND SUBSTR(MAIN.GSTDOCNO,4,2) = 'CN'
                                                          AND date_trunc('day', MAIN.VOIDBILLDATE) BETWEEN PDTFR
                                                                                            AND PDTTO
                                                          AND MAIN.ADMSITE_CODE = SITE.UK
                                                          AND SITE.GST_IDENTIFICATION_NO = PGSTIN)
                                                  STARTSCHEME,
                                                  (SELECT MAIN.ADMSITE_CODE,
                                                          MAIN.GSTDOCNO,
                                                          MAIN.GSTDOCSEQ
                                                     FROM PSITE_POSBILL   MAIN,
                                                          ginview.LV_SITE SITE
                                                    WHERE     MAIN.GSTDOCSEQ IS NOT NULL
                                                          AND SUBSTR(MAIN.GSTDOCNO,4,2) = 'CN'
                                                          AND date_trunc('day', MAIN.BILLDATE) BETWEEN PDTFR
                                                                                        AND PDTTO
                                                          AND MAIN.ADMSITE_CODE = SITE.UK
                                                          AND SITE.GST_IDENTIFICATION_NO = PGSTIN
                                                   
UNION ALL

                                                   SELECT MAIN.ADMSITE_CODE,
                                                          MAIN.GSTDOCNO,
                                                          MAIN.GSTDOCSEQ
                                                     FROM PSITE_POSBILLVOID MAIN,
                                                          ginview.LV_SITE   SITE
                                                    WHERE     MAIN.GSTDOCSEQ IS NOT NULL
                                                          AND SUBSTR(MAIN.GSTDOCNO,4,2) = 'CN'
                                                          AND date_trunc('day', MAIN.VOIDBILLDATE) BETWEEN PDTFR
                                                                                            AND PDTTO
                                                          AND MAIN.ADMSITE_CODE = SITE.UK
                                                          AND SITE.GST_IDENTIFICATION_NO = PGSTIN)
                                                  ENDSCHEME
                                            WHERE     RESULT.ADMSITE_CODE =
                                                         STARTSCHEME.ADMSITE_CODE
                                                  AND RESULT.START_SEQNO = STARTSCHEME.GSTDOCSEQ
                                                  AND RESULT.ADMSITE_CODE =
                                                         ENDSCHEME.ADMSITE_CODE
                                                  AND RESULT.END_SEQNO = ENDSCHEME.GSTDOCSEQ) A
                                   
UNION ALL

                                   --end rev 003
                                   SELECT 'Invoices for outward supply' DOCUMENT_NATURE,
                                          A.START_SCHEMENO,
                                          A.END_SCHEMENO,
                                          A.DOCTOTAL_ASPERSERIES,
                                          A.SKIPPEDCOUNT                CANCELLED
                                     FROM (SELECT RESULT.SITECODE,
                                                  RESULT.DOCCODE,
                                                  RESULT.START_SEQNO,
                                                  STARTSCHEME.GSTDOCNO START_SCHEMENO,
                                                  RESULT.END_SEQNO,
                                                  ENDSCHEME.GSTDOCNO   END_SCHEMENO,
                                                  RESULT.DOCTOTAL      DOCTOTAL_ACTUAL,
                                                  RESULT.END_SEQNO - RESULT.START_SEQNO + 1
                                                     DOCTOTAL_ASPERSERIES,
                                                    ( (RESULT.END_SEQNO - RESULT.START_SEQNO) + 1)
                                                  - RESULT.DOCTOTAL
                                                     SKIPPEDCOUNT,
                                                  0                    DELETEDCOUNT
                                             FROM (  SELECT MAIN.ADMSITE_CODE  SITECODE,
                                                            1000001            DOCCODE,
                                                            MIN(MAIN.GSTDOCSEQ) START_SEQNO,
                                                            MAX(MAIN.GSTDOCSEQ) END_SEQNO,
                                                            COUNT(*)          DOCTOTAL
                                                       FROM (SELECT MAIN.ADMSITE_CODE,
                                                                    MAIN.GSTDOCNO,
                                                                    MAIN.GSTDOCSEQ
                                                               FROM PSITE_GRT     MAIN,
                                                                    ginview.LV_SITE SITE
                                                                    
                                                                    , ADMSITE SITEMASTER
                                                                    
                                                              WHERE     MAIN.GSTDOCSEQ IS NOT NULL
                                                                    AND date_trunc('day', MAIN.DOCDT) BETWEEN PDTFR
                                                                                               AND PDTTO
                                                                    AND MAIN.ADMSITE_CODE = SITE.UK
                                                                    AND SITE.GST_IDENTIFICATION_NO =
                                                                           PGSTIN
                                                                    -- START REV: OMS CHANGES
                                                                    AND MAIN.ADMSITE_CODE = SITEMASTER.CODE
                                                                    AND SITEMASTER.INSTALLATION_TYPE <> 'ZPOS'
                                                                    -- END REV: OMS CHANGES
                                                                    AND MAIN.FINTRADEGRP_CODE <> 4)
                                                            MAIN
                                                   GROUP BY MAIN.ADMSITE_CODE) RESULT,
                                                  (SELECT MAIN.ADMSITE_CODE,
                                                          MAIN.GSTDOCNO,
                                                          MAIN.GSTDOCSEQ
                                                     FROM PSITE_GRT MAIN, ginview.LV_SITE SITE
                                                    WHERE     MAIN.GSTDOCSEQ IS NOT NULL
                                                          AND date_trunc('day', MAIN.DOCDT) BETWEEN PDTFR
                                                                                     AND PDTTO
                                                          AND MAIN.ADMSITE_CODE = SITE.UK
                                                          AND SITE.GST_IDENTIFICATION_NO = PGSTIN
                                                          AND MAIN.FINTRADEGRP_CODE <> 4)
                                                  STARTSCHEME,
                                                  (SELECT MAIN.ADMSITE_CODE,
                                                          MAIN.GSTDOCNO,
                                                          MAIN.GSTDOCSEQ
                                                     FROM PSITE_GRT MAIN, ginview.LV_SITE SITE
                                                    WHERE     MAIN.GSTDOCSEQ IS NOT NULL
                                                          AND date_trunc('day', MAIN.DOCDT) BETWEEN PDTFR
                                                                                     AND PDTTO
                                                          AND MAIN.ADMSITE_CODE = SITE.UK
                                                          AND SITE.GST_IDENTIFICATION_NO = PGSTIN
                                                          AND MAIN.FINTRADEGRP_CODE <> 4)
                                                  ENDSCHEME
                                            WHERE     RESULT.SITECODE = STARTSCHEME.ADMSITE_CODE
                                                  AND RESULT.START_SEQNO = STARTSCHEME.GSTDOCSEQ
                                                  AND RESULT.SITECODE = ENDSCHEME.ADMSITE_CODE
                                                  AND RESULT.END_SEQNO = ENDSCHEME.GSTDOCSEQ) A
                                   -- start rev : 002
                                   --ORDER BY 1
                                   -- end rev : 002
                                  -- START REV : OMS Changes
                                  
UNION ALL

                                    SELECT CASE
                                                WHEN MAIN.GSTAPPL = 'Y' THEN 'Invoices for outward supply'
                                                ELSE 'Credit note'
                                             END
                                                DOCUMENT_NATURE,
                                             MIN(MAIN.GST_DOC_NO)            START_SCHEMENO,
                                             MAX(MAIN.GST_DOC_NO)            END_SCHEMENO,
                                             SUM(MAIN.ISNONVOID + MAIN.ISVOID) DOCTOTAL_ASPERSERIES,
                                             SUM(MAIN.ISVOID)                CANCELLED
                                        FROM (SELECT MAIN.ADMSITE_CODE,
                                                     MAIN.INTG_DOCSCHEME_CODE,
                                                     MAIN.GSTAPPL,
                                                     MAIN.GST_DOC_NO,
                                                     1 ISNONVOID,
                                                     0 ISVOID
                                                FROM SALCSMAIN MAIN, ginview.LV_SITE SITE, ADMSITE SITEMASTER
                                               WHERE     MAIN.ADMSITE_CODE = SITE.UK
                                                     AND MAIN.ADMSITE_CODE = SITEMASTER.CODE
                                                     AND SITEMASTER.INSTALLATION_TYPE = 'ZPOS'
                                                     AND MAIN.CHANNELTYPE = 'RTL'
                                                     AND date_trunc('day', MAIN.CSDATE) BETWEEN PDTFR AND PDTTO
                                                     AND SITE.GST_IDENTIFICATION_NO = PGSTIN
                                                     AND coalesce(MAIN.GSTAPPL, 'N') <> 'N'
                                                     AND MAIN.INTG_DOCSCHEME_CODE IS NOT NULL
                                              
UNION ALL

                                              SELECT MAIN.ADMSITE_CODE,
                                                     MAIN.INTG_DOCSCHEME_CODE,
                                                     MAIN.GSTAPPL,
                                                     MAIN.GST_DOC_NO,
                                                     0 ISNONVOID,
                                                     1 ISVOID
                                                FROM SALCSMAIN_DELETED MAIN
                                                     LEFT OUTER JOIN SALCSMAIN ORIGINAL
                                                        ON UPPER(MAIN.INTG_INVOICEID) =
                                                              UPPER(ORIGINAL.INTG_INVOICEID),
                                                     ginview.LV_SITE SITE,
                                                     ADMSITE         SITEMASTER
                                               WHERE     MAIN.ADMSITE_CODE = SITE.UK
                                                     AND MAIN.ADMSITE_CODE = SITEMASTER.CODE
                                                     AND SITEMASTER.INSTALLATION_TYPE = 'ZPOS'
                                                     AND MAIN.CHANNELTYPE = 'RTL'
                                                     AND date_trunc('day', MAIN.CSDATE) BETWEEN PDTFR AND PDTTO
                                                     AND SITE.GST_IDENTIFICATION_NO = PGSTIN
                                                     AND coalesce(MAIN.GSTAPPL, 'N') <> 'N'
                                                     AND ORIGINAL.CSCODE IS NULL  -- As Zwing voids the bill on modification and repushes the same
                                                     AND MAIN.INTG_DOCSCHEME_CODE IS NOT NULL
                                              
UNION ALL

                                              SELECT MAIN.ADMSITE_CODE,
                                                     MAIN.INTG_DOCSCHEME_CODE,
                                                     'Y' GSTAPPL,
                                                     MAIN.GSTDOCNO,
                                                     1 ISNONVOID,
                                                     0 ISVOID
                                                FROM PSITE_GRT MAIN, ginview.LV_SITE SITE, ADMSITE SITEMASTER
                                               WHERE     MAIN.ADMSITE_CODE = SITE.UK
                                                     AND MAIN.ADMSITE_CODE = SITEMASTER.CODE
                                                     AND SITEMASTER.INSTALLATION_TYPE = 'ZPOS'
                                                      AND date_trunc('day', MAIN.DOCDT) BETWEEN PDTFR AND PDTTO
                                                      AND SITE.GST_IDENTIFICATION_NO = PGSTIN
                                                     AND MAIN.FINTRADEGRP_CODE <> 4
                                                     AND MAIN.INTG_DOCSCHEME_CODE IS NOT NULL) MAIN
                                    GROUP BY MAIN.ADMSITE_CODE,
                                             MAIN.INTG_DOCSCHEME_CODE,
                                             CASE
                                                WHEN MAIN.GSTAPPL = 'Y' THEN 'Invoices for outward supply'
                                                ELSE 'Credit note'
                                             END
                                   -- END REV : OMS Changes
                                   ) A --+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                            -- start rev : 002
                            ) T1 
                ) Z2
                ORDER BY 
                        order_by_col;
                -- start rev : 002
   SRC_LOB         text;
   VDTFR           timestamp(0);
   VDTTO           timestamp(0);
   VMONTH          bigint;
   VYEAR           bigint;
   V_CNT           bigint := 0;
   V_CNT_GSTIN     bigint := 0;
   V_PRIMARY_SEC   char(1) := 'P';
BEGIN
   /*********************************************************************************************************
    PURPOSE:

    REVISIONS:
    Rev.       Date        Author                   Description
    ---------  ----------  ----------------------   ---------------------------------------------------
    Author     XX/XX/XXXX  XXXXXXXXXXXXXXXXXXXXXX   XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
    001        01/10/2021  MANASH                   1250 :  While upload data to EasemyGST from Ginesys, it's showing an error
    002        15/11/2021  MANASH                   1312 :  While uploading data to EMG, Net Entry amount is showing wrong data.
    ************************************************************************************************************/
   SELECT DTFR,
          DTTO,
          (TO_CHAR(MONSTDT, 'MM'))::numeric    MM,
          (TO_CHAR(MONSTDT, 'YYYY'))::numeric  YY
     INTO STRICT VDTFR,
          VDTTO,
          VMONTH,
          VYEAR
     FROM ADMMONTH
    WHERE MCODE = PMCODE;
   SELECT COUNT(1)
     INTO STRICT V_CNT_GSTIN
     FROM ADMGSTIN
    WHERE GSTIN_NO = PGSTIN;
   IF V_CNT_GSTIN > 0
   THEN
      V_PRIMARY_SEC := 'P';
   ELSE
      V_PRIMARY_SEC := 'S';
   END IF;
   IF PRETURN = 'GSTR' AND PTYPE = 'BOTH GSTR1 & GSTR2'
   THEN
      SRC_LOB := '';
      --DBMS_LOB.CREATETEMPORARY(SRC_LOB, TRUE); 
      FOR R100 IN C100(VDTFR, VDTTO)
      LOOP
         V_CNT := V_CNT + 1;
          SRC_LOB := SRC_LOB || R100.QUERY_RESULT || E'\n';
      END LOOP; 
      IF coalesce(V_CNT, 0) <= 0
      THEN
         PGETDATA := 0;
      ELSE
         PGETDATA := 1;
         INSERT INTO GSTUPLOAD_STAGING( GSTIN,
                                        YEAR,
                                        MONTH,
                                        RETURN,
                                        TYPE,
                                        FILETOUPLOAD,
                                        USERID,
                                        ADMMONTH_CODE,
                                        FILENAME)
                 VALUES (
                           PGSTIN,
                           VYEAR,
                           VMONTH,
                           PRETURN,
                           PTYPE,
                           RTRIM(SRC_LOB, E'\n'),
                           PUSERID,
                           PMCODE,
                              PGSTIN
                           || '-'
                           || TO_CHAR(VDTFR, 'MMYYYY')
                           || '-'
                           || PRETURN
                           || '-'
                           || 'ALL'
                           || '-'
                           || V_PRIMARY_SEC
                           || '.CSV');
        -- COMMIT;
      END IF;
   END IF;
   IF PRETURN = 'GSTR' AND PTYPE = 'ONLY GSTR1'
   THEN
      SRC_LOB := '';
      --DBMS_LOB.CREATETEMPORARY(SRC_LOB, TRUE);
      FOR R100 IN C100(VDTFR, VDTTO)
      LOOP
         V_CNT := V_CNT + 1;
          SRC_LOB := SRC_LOB || R100.QUERY_RESULT || E'\n';
      END LOOP;
      IF coalesce(V_CNT, 0) <= 0
      THEN
         PGETDATA := 0;
      ELSE
         PGETDATA := 1;
         INSERT INTO GSTUPLOAD_STAGING(GSTIN,
                                        YEAR,
                                        MONTH,
                                        RETURN,
                                        TYPE,
                                        FILETOUPLOAD,
                                        USERID,
                                        ADMMONTH_CODE,
                                        FILENAME)
                 VALUES (
                           PGSTIN,
                           VYEAR,
                           VMONTH,
                           PRETURN,
                           PTYPE,
                           RTRIM(SRC_LOB, E'\n'),
                           PUSERID,
                           PMCODE,
                              PGSTIN
                           || '-'
                           || TO_CHAR(VDTFR, 'MMYYYY')
                           || '-'
                           || PRETURN
                           || '-'
                           || 'GSTR1'
                           || '-'
                           || V_PRIMARY_SEC
                           || '.CSV');
         --COMMIT;
      END IF;
   END IF;
   IF PRETURN = 'GSTR' AND PTYPE = 'ONLY GSTR2'
   THEN
      SRC_LOB := '';
      --DBMS_LOB.CREATETEMPORARY(SRC_LOB, TRUE);
      FOR R100 IN C100(VDTFR, VDTTO)
      LOOP
         V_CNT := V_CNT + 1;
          SRC_LOB := SRC_LOB || R100.QUERY_RESULT || E'\n';
      END LOOP;
      IF coalesce(V_CNT, 0) <= 0
      THEN
         PGETDATA := 0;
      ELSE
         PGETDATA := 1;
         INSERT INTO GSTUPLOAD_STAGING(GSTIN,
                                        YEAR,
                                        MONTH,
                                        RETURN,
                                        TYPE,
                                        FILETOUPLOAD,
                                        USERID,
                                        ADMMONTH_CODE,
                                        FILENAME)
                 VALUES (
                           PGSTIN,
                           VYEAR,
                           VMONTH,
                           PRETURN,
                           PTYPE,
                           RTRIM(SRC_LOB, E'\n'),
                           PUSERID,
                           PMCODE,
                              PGSTIN
                           || '-'
                           || TO_CHAR(VDTFR, 'MMYYYY')
                           || '-'
                           || PRETURN
                           || '-'
                           || 'GSTR2'
                           || '-'
                           || V_PRIMARY_SEC
                           || '.CSV');
         --COMMIT;
      END IF;
   END IF;
   IF PRETURN = 'GSTR1' AND PTYPE = 'DOCISSUED'
   THEN
      SRC_LOB := '';
      --DBMS_LOB.CREATETEMPORARY(SRC_LOB, TRUE);
      FOR R8 IN C8(VDTFR, VDTTO)
      LOOP
         V_CNT := V_CNT + 1;
          SRC_LOB := SRC_LOB || R8.QUERY_RESULT || E'\n';
      END LOOP;
      IF coalesce(V_CNT, 0) <= 0
      THEN
         PGETDATA := 0;
      ELSE
         PGETDATA := 1;
         INSERT INTO GSTUPLOAD_STAGING(GSTIN,
                                        YEAR,
                                        MONTH,
                                        RETURN,
                                        TYPE,
                                        FILETOUPLOAD,
                                        USERID,
                                        ADMMONTH_CODE,
                                        FILENAME)
                 VALUES (
                           PGSTIN,
                           VYEAR,
                           VMONTH,
                           PRETURN,
                           PTYPE,
                           RTRIM(SRC_LOB, E'\n'),
                           PUSERID,
                           PMCODE,
                              PGSTIN
                           || '-'
                           || TO_CHAR(VDTFR, 'MMYYYY')
                           || '-'
                           || PRETURN
                           || '-'
                           || PTYPE
                           || '-'
                           || V_PRIMARY_SEC
                           || '.CSV');
         --COMMIT;
      END IF;
   END IF;
END;
"""
  arguments = <
    {
      name = pgstin
      type = text
      mode = IN
    }

    {
      name = pmcode
      type = bigint
      mode = IN
    }

    {
      name = preturn
      type = text
      mode = IN
    }

    {
      name = ptype
      type = text
      mode = IN
    }

    {
      name = puserid
      type = text
      mode = IN
    }

    {
      name = pgetdata
      type = double precision
      mode = INOUT
    }

  >
  language = plpgsql
}

