procedure "main"."db_pkg_stock_intra$pro_for_new()" {
  text = """

DECLARE

        V_AMOUNT          INVSTOCK.AMOUNT%TYPE;
        V_NONINVENTORY    INVITEM.NONINVENTORY%TYPE;
        V_STOCKCODE       INVSTOCK.STOCKCODE%TYPE;
        V_OUCODE          INVSTOCK.ADMOU_CODE%TYPE;

BEGIN
        PERFORM set_config('db_pkg_stock_intra.l_noninventory', (SELECT  NONINVENTORY
        FROM    INVITEM
        WHERE   ICODE = current_setting('db_pkg_stock_intra.l_new_icode')::CHARACTER VARYING(9)), false);

        IF  current_setting('db_pkg_stock_intra.l_noninventory')::char(1) = 'N'
        THEN

            IF  current_setting('db_pkg_stock_intra.l_stockcode') = '' THEN
                PERFORM set_config('db_pkg_stock_intra.l_stockcode', (nextval('erpstock')), false);
            END IF;

            SELECT  ADMOU_CODE
                INTO STRICT    V_OUCODE
                FROM    ADMSITE
            WHERE   CODE = current_setting('db_pkg_stock_intra.l_refsitecode')::bigint;

            V_AMOUNT := round((coalesce(current_setting('db_pkg_stock_intra.l_new_qty')::NUMERIC(20,3),0)*coalesce(current_setting('db_pkg_stock_intra.l_new_rate')::NUMERIC(20,3),0))::numeric,3);

            INSERT INTO INVSTOCK_INTRA(	ENTCODE, 
									   	ENTDT, 
									   	ENTTYPE, 
									   	LOCCODE, 
									   	YCODE, 
									   	ICODE, 
									   	QTY, 
									   	RATE, 
									   	AMOUNT,
                     					STOCKCODE, 
									   	DETAIL_CODE,
									   	SCHEME_DOCNO, 
									   	SUBENTTYPE, 
									   	PSITE_STOCKPOINT_CODE, 
									   	ADMSITE_CODE, 
									   	ADMOU_CODE, 
									   	TIME,
                     					-- START REV : 002
                     					INVBATCH_SERIAL_CODE
                     					-- END REV : 002
                     )
            VALUES (current_setting('db_pkg_stock_intra.l_entcode')::CHARACTER VARYING(50), 
					TO_DATE(NULLIF(current_setting('db_pkg_stock_intra.l_entdt'),''),'YYYY-MM-DD'), 
					current_setting('db_pkg_stock_intra.l_enttype')::CHARACTER VARYING(3), 
					current_setting('db_pkg_stock_intra.l_loccode')::BIGINT, 
					current_setting('db_pkg_stock_intra.l_ycode')::BIGINT, 
					current_setting('db_pkg_stock_intra.l_new_icode')::CHARACTER VARYING(9),
                    coalesce(current_setting('db_pkg_stock_intra.l_new_qty')::NUMERIC(20,3)), 
					coalesce(current_setting('db_pkg_stock_intra.l_new_rate')::NUMERIC(20,3)), 
					V_AMOUNT::BIGINT, 
					current_setting('db_pkg_stock_intra.l_stockcode')::BIGINT, 
					current_setting('db_pkg_stock_intra.l_detail_code')::CHARACTER VARYING(50), 
					current_setting('db_pkg_stock_intra.l_scheme_docno')::CHARACTER VARYING(25),
                    current_setting('db_pkg_stock_intra.l_subenttype')::CHARACTER VARYING(3), 
					current_setting('db_pkg_stock_intra.l_psite_stkpt_code')::CHARACTER VARYING(50), 
					current_setting('db_pkg_stock_intra.l_refsitecode')::BIGINT, 
					V_OUCODE, 
					clock_timestamp(),
                    NULLIF(current_setting('db_pkg_stock_intra.l_batch_serial_code'),'')::BIGINT
                     );
        END IF;
    END;

"""
  arguments = [
  ]
  language = plpgsql
}

