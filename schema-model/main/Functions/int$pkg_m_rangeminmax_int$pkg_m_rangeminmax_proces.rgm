function "main"."int$pkg_m_rangeminmax_int$pkg_m_rangeminmax_process_atx(bigint, bigint, timestamp without time zone, bigint)" {
  text = """

DECLARE

      errmsg       varchar(500);
      vsession     varchar(100);
      vdetailtbl   varchar(1000);
      vdetailrec   varchar(500);
      errcode      bigint;
        vmaxno              bigint;
        vcount              bigint;
BEGIN

   DECLARE C_ASSRT CURSOR FOR
         SELECT  '1' SEQ,
               -- ASSORT_CODE,
                BARCODE,
                LINENO,
                MAX_QTY,
                MIN_QTY,
                NEW_ASSORT_CODE  ASSORT_CODE,
                SITE_CODE
          FROM  int$stg_M_RANGEMINMAX A
          WHERE   USERID = P_USERID;
     --V_MAXSEQ_NO   NUMBER(10);
     --V_CNT         NUMBER(14) := 0;
  BEGIN
   FOR C2 IN C_ASSRT
    LOOP
               UPDATE   rep_assrt_range
               SET      min_qty             = C2.min_qty,
                        max_qty             = C2.max_qty
                WHERE   admsite_code          = C2.site_code
                AND     rep_assrt_code        = C2.assort_code;

        IF NOT FOUND THEN

             INSERT INTO rep_assrt_range(admsite_code, rep_assrt_code, min_qty, max_qty, repln_source, repln_admsite_code
                     )
                  VALUES (C2.site_code, C2.assort_code, C2.min_qty,C2.max_qty, 'TRN', 100001
                     );
        END IF;

    END LOOP;
  END;

      -- log to be added in history table
      SELECT nextval('int$error_log_code')
        INTO STRICT vsession
;

      vdetailtbl :=
            'create table ginarchive.M_RANGEMINMAX_'
         || vsession
         || ' as select distinct SITE_CODE,ASSORT_CODE,BARCODE from int$stg_M_RANGEMINMAX where userid ='
         || p_userid::text;

      EXECUTE vdetailtbl;
      vdetailrec := 'select count(1) from ginarchive.M_RANGEMINMAX_' || vsession::text;
      EXECUTE vdetailrec
                   INTO STRICT vcount;

      INSERT INTO int$history(code, importedby, importedon,
                   classname, summary,
                   history_detail_tablename, history_detail_row_count
                  )
           VALUES (nextval('int$history_code'), p_userid, clock_timestamp(),
                   'M_RANGEMINMAX', vcount::TEXT || ' Data updated successfully.',
                   'ginarchive.M_RANGEMINMAX_' || vsession, vcount
                  );

      RETURN('1');
   EXCEPTION
      WHEN OTHERS
      THEN
         errcode := SQLSTATE;
         errmsg := SQLERRM;

         -- error log for oracle internal error
         INSERT INTO int$error_log(code, lineno, classname,
                      userid, errortype, errordesc, createdon
                     )
              VALUES (nextval('int$error_log_code'), 0, 'M_RANGEMINMAX',
                      p_userid, errcode, errmsg, clock_timestamp()
                     );

         --COMMIT;
         RETURN('0');
   END;

"""
  returnType = character
  arguments = <
    {
      name = p_userid
      type = bigint
      mode = IN
    }

    {
      name = p_connect_site
      type = bigint
      mode = IN
    }

    {
      name = p_logging_date
      type = timestamp without time zone
      mode = IN
    }

    {
      name = p_connect_ou
      type = bigint
      mode = IN
    }

  >
  language = plpgsql
}

function "main"."int$pkg_m_rangeminmax_int$pkg_m_rangeminmax_process(bigint, bigint, timestamp without time zone, bigint)" {
  text = """

 
DECLARE
	 -- Change this to reflect the dblink connection string
    --v_conn_str  text := format('port=%s dbname=%s user=%s', current_setting('port'), current_database(), current_user);
    v_srvname       name;
    v_connname      text;
    v_connstr       text;
    v_conn_result   text;
    v_query         text;

    v_ret    text;
BEGIN
	 v_srvname := 'foreign_pgbase';
    v_connname := replace(uuid_generate_v4()::text,'-','');
    v_connstr  := v_srvname;
    
    --Open the connection  
    SELECT dblink_connect(v_connname,v_connstr) 
    INTO v_conn_result;
	
	v_query := 'SELECT * FROM int$pkg_m_rangeminmax_int$pkg_m_rangeminmax_process_atx ( ' || quote_nullable(p_userid::text) || '::bigint,' || quote_nullable(p_connect_site::text) || '::bigint,' || quote_nullable(p_logging_date::text) || '::timestamp without time zone,' || quote_nullable(p_connect_ou::text) || '::bigint )';
	SELECT * INTO v_ret FROM dblink(v_connname, v_query) AS p (ret text);

	
	SELECT dblink_disconnect(v_connname) 
    INTO v_conn_result;
	
	RETURN v_ret;
EXCEPTION 
   WHEN OTHERS THEN
        SELECT dblink_disconnect(v_connname) 
        INTO v_conn_result;

END;
"""
  returnType = text
  arguments = <
    {
      name = p_userid
      type = bigint
      mode = IN
    }

    {
      name = p_connect_site
      type = bigint
      mode = IN
    }

    {
      name = p_logging_date
      type = timestamp without time zone
      mode = IN
    }

    {
      name = p_connect_ou
      type = bigint
      mode = IN
    }

  >
  language = plpgsql
}

