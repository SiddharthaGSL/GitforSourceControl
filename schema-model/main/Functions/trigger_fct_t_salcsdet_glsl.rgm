function "main"."trigger_fct_t_salcsdet_glsl()" {
  text = """

DECLARE
  ora2pg_rowcount integer;
V_TYPE              varchar(100);
  V_DETAIL_CODE         INVSTOCK.DETAIL_CODE%TYPE;
  V_ENTCODE         INVSTOCK.ENTCODE%TYPE;
  V_ENTNO         INVSTOCK.ENTNO%TYPE;
  V_ENTDT         INVSTOCK.ENTDT%TYPE;
  V_ENTTYPE         INVSTOCK.ENTTYPE%TYPE;
  V_LOCCODE         INVSTOCK.LOCCODE%TYPE;
  V_YCODE         INVSTOCK.YCODE%TYPE;
  V_REFPCODE     INVSTOCK.REFPCODE%TYPE;
  V_REFLOCCODE     INVSTOCK.REFLOCCODE%TYPE;
  V_REFCMPCODE     INVSTOCK.REFCMPCODE%TYPE;
  V_REFGLCODE     INVSTOCK.REFGLCODE%TYPE;
  V_REFDEPTCODE     INVSTOCK.REFDEPTCODE%TYPE;
  V_REFPRCODE     INVSTOCK.REFPRCODE%TYPE;
  V_REFDOCNO     INVSTOCK.REFDOCNO%TYPE;
  V_REFPKGCODE     INVSTOCK.REFPKGCODE%TYPE;
  V_REFDCCODE     INVSTOCK.REFDCCODE%TYPE;
  V_OTHER_RATE   INVSTOCK.COSTRATE%TYPE;
  V_TEMP_LOC     INVSTOCK.REFLOCCODE%TYPE;
  V_SCHEME_DOCNO SALCSMAIN.SCHEME_DOCNO%TYPE;
  V_STATUS       char(1);

  V_SITETYPE        varchar(30) := NULL;
  v_sale_post_method    char(1) := NULL;
 -- V_NEW_POST_DAMOUNT     NUMBER(20,2) := NULL;
 -- V_NEW_POST_CAMOUNT     NUMBER(20,2) := NULL;
    V_OLD_POST_DAMOUNT     double precision := NULL;
    V_OLD_POST_CAMOUNT     double precision := NULL;

    V_OLD_DAMOUNT     double precision := NULL;
    V_OLD_CAMOUNT     double precision := NULL;
    V_ENTTYPE_POST        varchar(25)  := 'CSD';
    V_OLD_POSTCODE    bigint := NULL;
    v_SITECODE_OWNER  bigint := NULL;
    V_INVMAINOUCODE   bigint := NULL;

    V_REF_ADMSITE_CODE      bigint;
    V_rem                   varchar(200) := NULL;
    V_docno                 varchar(100) := NULL;
    V_DOCDT                 timestamp;
    V_ADMSITE_CODE SALCSMAIN.ADMSITE_CODE%TYPE;
    V_POSTCODE       bigint := NULL;

  V_DAMOUNT         double precision := NULL;
  V_CAMOUNT         double precision := NULL;

  V_DEBIT_CREDIT        char(1) := NULL;
  V_NEW_POST_AMOUNT     double precision := NULL;
  
    -- START REV : 003
  v_slcode                   bigint;
  v_sl_sale_post_method      CHAR(1);
  v_admgstin_code            bigint;
  -- END REV : 003

 /*******************************************************************************************************************
   No.                Date                  Author                   Description
   ---------        ----------          ----------------------   ------------------------------------------------------------------
   REV : 001        MOUSUMI             13-MAR-2018   (TFS : 37820) NON TRADING GL SL
   REV : 002        PRASANTA            22-OCT-2021   (MANTIS ID : 1299) Finance Report data was not getting proper for Onlne Sale (OMNI Channel Sale).
   REV : 003        ANINDYA             10-12-2021    (MNTS ID : 1020/TFS BUG ID : 31218) VAT is not getting posted for US-CO-CM site
 *********************************************************************************************************************/
BEGIN
  BEGIN

 SELECT CSNO                  ENTNO,
        -- START REV : 002
        -- CSDATE                ENTDT,
        date_trunc('day', CSDATE)         ENTDT,
        -- END REV : 002
        'SAL'                 ENTTYPE,
        YCODE                 YCODE,
        M.OUTLOCCODE            OUTLOCCODE,
        PCODE                 PCODE,
        NULL                  REFLOCCODE,
        NULL                  REFCMPCODE,
        NULL                  REFGLCODE,
        NULL                  REFDEPTCODE,
        NULL                  REFPRCODE,
        NULL                  REFDOCNO,
        NULL                  REFPKGCODE,
        SCHEME_DOCNO          SCHEME_DOCNO,
        NULL                  STATUS,
        ADMSITE_CODE,
        S.SITETYPE,
        S.ADMOU_CODE,
        -- START REV : 003
        S.SLCODE
        -- END REV : 003
 INTO STRICT   V_ENTNO,
        V_ENTDT,
        V_ENTTYPE,
        V_YCODE,
        V_LOCCODE,
        V_REFPCODE,
        V_REFLOCCODE,
        V_REFCMPCODE,
        V_REFGLCODE,
        V_REFDEPTCODE,
        V_REFPRCODE,
        V_REFDOCNO,
        V_REFPKGCODE,
        V_SCHEME_DOCNO,
        V_STATUS,
        v_SITECODE_OWNER,
        V_SITETYPE,
        V_INVMAINOUCODE,
		        V_SLCODE
 FROM salcsmain m
LEFT OUTER JOIN admsite s ON (M.ADMSITE_CODE = S.CODE)
WHERE CSCODE = coalesce(NEW.CSCODE,OLD.CSCODE);

 IF v_slcode IS NOT NULL
 THEN
       SELECT sale_post_method
       INTO   v_sl_sale_post_method
       FROM   FINSL
       WHERE  slcode = v_slcode;
 END IF;
 
 --START REV : 003
 SELECT admgstin_code
 into   v_admgstin_code
 FROM   ADMSITE
 WHERE  CODE = v_sitecode_owner;
 -- END REV : 003 

         -- START REV : 003  
         --IF v_sitetype IN ('MS-OO-CM', 'OS-OO-CM', 'MS-CO-CM')
         IF v_sitetype IN ('MS-OO-CM', 'OS-OO-CM') OR (v_sitetype IN ('US-CO-CM','MS-CO-CM') AND v_sl_sale_post_method = 'E')
         -- END REV : 003
         THEN
            v_sale_post_method := 'E';
         ELSE
            v_sale_post_method := 'I';

         END IF;

     IF  coalesce(OLD.netamt,0) < 0 THEN --NVL(:OLD.GRSAMT,0) < 0 THEN
       -- START REV : 003
       --IF v_sale_post_method = 'E' THEN
       IF v_sale_post_method = 'E' AND (v_admgstin_code IS NOT NULL OR OLD.TAXREGIME = 'V')
       THEN
       -- END REV : 003
        V_OLD_POST_DAMOUNT := ABS(coalesce(OLD.netamt,0)- coalesce(OLD.TAXAMT,0));
       ELSE
        V_OLD_POST_DAMOUNT := ABS(coalesce(OLD.netamt,0));
       END IF;
     ELSE
        -- START REV : 003 
        --IF v_sale_post_method = 'E' THEN
        IF v_sale_post_method = 'E' AND (v_admgstin_code IS NOT NULL OR OLD.TAXREGIME = 'V')
        THEN
        -- END REV : 003
            V_OLD_POST_CAMOUNT := coalesce(OLD.netamt,0) - coalesce(OLD.TAXAMT,0);
        ELSE
            V_OLD_POST_CAMOUNT := coalesce(OLD.netamt,0);
        END IF;
     END IF;

     IF coalesce(NEW.netamt,0) < 0 THEN
        V_DEBIT_CREDIT := 'D';

        -- START REV : 003
        --IF v_sale_post_method = 'E' THEN
        IF v_sale_post_method = 'E' AND (v_admgstin_code IS NOT NULL OR NEW.TAXREGIME = 'V')
        THEN
        -- END REV : 003
        V_NEW_POST_AMOUNT := ABS(coalesce(NEW.netamt,0) - coalesce(NEW.TAXAMT,0));

        ELSE
        V_NEW_POST_AMOUNT := ABS(coalesce(NEW.netamt,0) );
        END IF;

     ELSE
         V_DEBIT_CREDIT := 'C';

           -- START REV : 0003
          --IF v_sale_post_method = 'E' THEN
          IF v_sale_post_method = 'E'  AND (v_admgstin_code IS NOT NULL OR NEW.TAXREGIME = 'V')
          THEN
          -- END REV : 003
                V_NEW_POST_AMOUNT := coalesce(NEW.netamt,0) - coalesce(NEW.TAXAMT,0);
          ELSE
                V_NEW_POST_AMOUNT := coalesce(NEW.netamt,0);
          END IF;

     END IF;

            IF OLD.GLCODE IS NOT NULL THEN

                IF coalesce(V_OLD_POST_DAMOUNT,0) > 0  THEN

                    UPDATE FINPOST
                    SET    --camount = NVL(camount,0) - NVL(V_OLD_POST_CAMOUNT,0)
                           Damount = coalesce(Damount,0) - coalesce(V_OLD_POST_DAMOUNT,0)
                    WHERE  ENTCODE = OLD.CSCODE::varchar
                    AND    ENTTYPE = V_ENTTYPE_POST
                    AND    GLCODE = OLD.GLCODE
                    AND    coalesce(CAMOUNT,0) = 0
                    AND    ((OLD.SLCODE IS NULL AND SLCODE IS NULL) OR SLCODE = OLD.SLCODE)
                    RETURNING POSTCODE INTO V_OLD_POSTCODE;

                    BEGIN

                           UPDATE FINCOSTTAG
                            SET
                           -- Camount         = NVL(camount,0) - NVL(V_OLD_POST_CAMOUNT,0)
                            Damount         = coalesce(Damount,0) - coalesce(V_OLD_POST_DAMOUNT,0)
                            where  entcode  =  OLD.CSCODE::varchar
                            and   enttype     = V_ENTTYPE_POST
                            AND   postcode        = v_OLD_postcode
                            AND    coalesce(CAMOUNT,0) = 0
                            AND   OLD.GL_CC_APPL = 'Y'
                            and   glcode      = OLD.glcode
                            AND ((OLD.SLCODE IS NULL AND SLCODE IS NULL) OR SLCODE = OLD.SLCODE);

                    EXCEPTION WHEN no_data_found THEN
                       NULL;
                    END;

                END IF;

                IF coalesce(V_OLD_POST_CAMOUNT,0) > 0  THEN

                    UPDATE FINPOST
                    SET    --camount = NVL(camount,0) - NVL(V_OLD_POST_CAMOUNT,0)
                           Camount = coalesce(Camount,0) - coalesce(V_OLD_POST_CAMOUNT,0)
                    WHERE  ENTCODE = OLD.CSCODE::varchar
                    AND    ENTTYPE = V_ENTTYPE_POST
                    AND    GLCODE = OLD.GLCODE
                    AND  coalesce(DAMOUNT,0) = 0
                    AND    ((OLD.SLCODE IS NULL AND SLCODE IS NULL) OR SLCODE = OLD.SLCODE)
                    RETURNING POSTCODE INTO V_OLD_POSTCODE;

                    BEGIN

                           UPDATE FINCOSTTAG
                            SET
                           -- Camount         = NVL(camount,0) - NVL(V_OLD_POST_CAMOUNT,0)
                            Camount         = coalesce(Camount,0) - coalesce(V_OLD_POST_CAMOUNT,0)
                            where  entcode  =  OLD.CSCODE::varchar
                            and   enttype     = V_ENTTYPE_POST
                            AND   postcode        = v_OLD_postcode
                            AND   OLD.GL_CC_APPL = 'Y'
                            AND  coalesce(DAMOUNT,0) = 0
                            and   glcode      = OLD.glcode
                            AND ((OLD.SLCODE IS NULL AND SLCODE IS NULL) OR SLCODE = OLD.SLCODE);

                    EXCEPTION WHEN no_data_found THEN
                       NULL;
                    END;
                END IF;

            END IF;

            IF    NEW.GLCODE IS NOT NULL AND coalesce(V_NEW_POST_AMOUNT,0) <> 0 THEN
                  UPDATE finpost
                     SET entno          = V_ENTNO::varchar,
                         entdt          = V_ENTDT,
                         scheme_docno   = V_scheme_docno,
                         docno   = V_docno,
                         docDT   = V_DOCDT,
                         glcode  = NEW.glcode,
                         slcode  = NEW.slcode,
                         nartext = V_rem,
                         camount =CASE WHEN V_DEBIT_CREDIT='C' THEN coalesce(CAMOUNT,0) + coalesce(V_NEW_POST_AMOUNT,0) END
                        ,Damount =CASE WHEN V_DEBIT_CREDIT='D' THEN coalesce(DAMOUNT,0) + coalesce(V_NEW_POST_AMOUNT,0) END 
                  -- ,REF_ADMSITE_CODE   = V_REF_ADMSITE_CODE
                    ,admsite_code_owner = v_SITECODE_OWNER
                   ,ADMOU_CODE = V_INVMAINOUCODE
                   WHERE entcode = NEW.CSCODE::varchar
                     AND enttype = 'CSD'
                     AND  CASE WHEN V_DEBIT_CREDIT='C' THEN coalesce(DAMOUNT,0) WHEN V_DEBIT_CREDIT='D' THEN coalesce(CAMOUNT,0) END  = 0
                     AND glcode = NEW.glcode
                    AND      NEW.GLCODE  IS NOT NULL
                     AND ((NEW.slcode IS NULL AND slcode IS NULL) OR slcode = NEW.slcode);

                    GET DIAGNOSTICS ora2pg_rowcount = ROW_COUNT;
IF ora2pg_rowcount = 0
                    THEN

                            /*    IF  :NEW.GLCODE = 4453 THEN
                                     ERRAUDIT(112,112,112,:NEW.GLCODE||'*'|| V_DEBIT_CREDIT||'*'||V_NEW_POST_AMOUNT );
                                END IF;  */
                        INSERT INTO FINPOST(postcode, entcode, entno,
                                        entdt, enttype, docno, glcode, slcode,
                                        camount,
                                        DAMOUNT ,
                                        ycode
                                        ,nartext
                                        ,scheme_docno
                                      --  ,REF_ADMSITE_CODE
                                       ,admsite_code_owner
                                        ,ADMOU_CODE
                                        ,docDT
                                       )
                                VALUES (nextval('erp01'),
                                         NEW.CSCODE::varchar,
                                         V_ENTNO::varchar,
                                        V_ENTDT, V_ENTTYPE_POST, V_docno, NEW.glcode, NEW.slcode,
                                         CASE WHEN V_DEBIT_CREDIT='C' THEN coalesce(V_NEW_POST_AMOUNT, 0) END ,
                                        CASE WHEN V_DEBIT_CREDIT='D' THEN coalesce(V_NEW_POST_AMOUNT, 0) END ,
                                        V_ycode
                                        ,V_rem
                                        ,V_scheme_docno
                                       -- ,V_REF_ADMSITE_CODE
                                       ,v_SITECODE_OWNER
                                        ,V_INVMAINOUCODE
                                        ,V_docDT
                                       );
                    END IF;

                BEGIN
                IF V_DEBIT_CREDIT = 'D' THEN
                    SELECT  DISTINCT(POSTCODE),
                            SUM(DAMOUNT)
                    INTO STRICT
                            V_POSTCODE,
                            V_DAMOUNT
                    FROM
                            FINPOST
                    WHERE
                            ENTCODE = NEW.CSCODE::varchar
                    AND     ENTTYPE = 'CSD'
                    AND       GLCODE = NEW.GLCODE
                    AND      NEW.GLCODE  IS NOT NULL
                    AND      coalesce(CAMOUNT,0) = 0
                    AND     ((NEW.SLCODE IS NULL AND SLCODE IS NULL) OR SLCODE = NEW.SLCODE)
                    GROUP BY POSTCODE
                    HAVING
                         SUM(DAMOUNT)<> 0;
                END IF;

                IF V_DEBIT_CREDIT = 'C' THEN
                    SELECT  DISTINCT(POSTCODE),
                            SUM(CAMOUNT)
                    INTO STRICT
                            V_POSTCODE,
                            V_CAMOUNT
                    FROM
                            FINPOST
                    WHERE
                            ENTCODE = NEW.CSCODE::varchar
                    AND     ENTTYPE = 'CSD'
                    AND       GLCODE = NEW.GLCODE
                    AND      NEW.GLCODE  IS NOT NULL
                    AND     coalesce(DAMOUNT,0) = 0
                    AND     ((NEW.SLCODE IS NULL AND SLCODE IS NULL) OR SLCODE = NEW.SLCODE)
                    GROUP BY POSTCODE
                    HAVING
                         SUM(CAMOUNT)<> 0;
                END IF;

                        UPDATE FINCOSTTAG
                        SET    ENTCODE  = NEW.CSCODE::varchar,
                        entno           = V_ENTNO::varchar,
                        entdt           = V_ENTdt,
                        enttype         = V_ENTTYPE_POST,
                        glcode          = NEW.glcode,
                        ycode           = V_ycode,
                        costcode         = NULL,
                        slcode          = NEW.slcode, --:new.pcode,
                        camount         = CASE WHEN V_DEBIT_CREDIT='C' THEN coalesce(Camount,0) + coalesce(V_NEW_POST_AMOUNT, 0) END  ,
                        Damount         = CASE WHEN V_DEBIT_CREDIT='D' THEN coalesce(Damount,0) + coalesce(V_NEW_POST_AMOUNT, 0) END  ,
                        admsite_code    = v_SITECODE_OWNER,
                        postcode        = v_postcode,
                        ref_admsite_code    = v_SITECODE_OWNER
                        ,ADMOU_CODE = V_INVMAINOUCODE -- REV : 009
                        where  entcode  =  NEW.CSCODE::varchar
                        and enttype     = 'CSD'
                        AND  NEW.GL_CC_APPL = 'Y'
                        AND  CASE WHEN V_DEBIT_CREDIT='C' THEN coalesce(DAMOUNT,0) WHEN V_DEBIT_CREDIT='D' THEN coalesce(CAMOUNT,0) END  = 0
                        AND  POSTCODE   = V_POSTCODE
                        and glcode      = NEW.glcode
                        AND    ((NEW.SLCODE IS NULL AND SLCODE IS NULL) OR SLCODE = NEW.SLCODE);

                       GET DIAGNOSTICS ora2pg_rowcount = ROW_COUNT;
IF ora2pg_rowcount = 0 THEN

                            IF  V_POSTCODE IS NOT NULL AND NEW.GL_CC_APPL = 'Y'   THEN
                                INSERT INTO FINCOSTTAG(ENTCODE, ENTNO, ENTDT, ENTTYPE
                                       ,GLCODE, YCODE, COSTCODE, SLCODE, CAMOUNT, DAMOUNT,
                                       POSTCODE, ADMSITE_CODE, REF_ADMSITE_CODE
                                       ,ADMOU_CODE
                                       )
                                VALUES (NEW.CSCODE::varchar, V_ENTNO::varchar, V_ENTDT, V_ENTTYPE_POST
                                       ,NEW.GLCODE, V_YCODE, NULL, NEW.SLCODE, CASE WHEN V_DEBIT_CREDIT='C' THEN coalesce(V_NEW_POST_AMOUNT,0) END  ,
                                       CASE WHEN V_DEBIT_CREDIT='D' THEN coalesce(V_NEW_POST_AMOUNT,0) END ,
                                       V_POSTCODE, v_SITECODE_OWNER,v_SITECODE_OWNER
                                       ,V_INVMAINOUCODE
                                       );
                            END IF;
                       END IF;
            EXCEPTION WHEN no_data_found THEN
               NULL;
            END;
        END IF;

   DELETE FROM FINCOSTTAG
   WHERE  ENTCODE = OLD.CSCODE::varchar
   AND    ENTTYPE = 'CSD'
   AND    coalesce(DAMOUNT, 0) = 0
   AND    coalesce(CAMOUNT, 0) = 0;

   DELETE FROM FINPOST
   WHERE  ENTCODE = OLD.CSCODE::varchar
   AND    ENTTYPE = 'CSD'
   AND    coalesce(DAMOUNT, 0) = 0
   AND    coalesce(CAMOUNT, 0) = 0;

EXCEPTION
    WHEN OTHERS THEN
        CALL ERRAUDIT(USER,'T_SALCSDET_GLSL',SQLSTATE::varchar,SQLERRM);
        RAISE EXCEPTION '%', 'ERROR ENCOUNTERED' || SQLSTATE::varchar || '-' || SQLERRM  USING ERRCODE = '45001';
  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
"""
  returnType = trigger
  arguments = [
  ]
  language = plpgsql
}

