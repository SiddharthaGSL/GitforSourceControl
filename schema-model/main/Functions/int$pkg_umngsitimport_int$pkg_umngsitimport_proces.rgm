function "main"."int$pkg_umngsitimport_int$pkg_umngsitimport_process_atx(bigint, bigint, timestamp without time zone, bigint)" {
  text = """

DECLARE

      ora2pg_rowcount int;
errmsg       varchar(500);
      vsession     varchar(100);
      vdetailtbl   varchar(1000);
      vdetailrec   varchar(500);
      errcode      bigint;
      vmaxno       bigint;
      vcount       bigint;C1 RECORD;

BEGIN
      -- START REV : 011
      FOR C1 IN (SELECT a.code,
                    a.NAME                                       NAME,
                    NULL                                         psite_initial,
                    f.slcode,
                    1                                            cmpcode,
                    a.shrtname,
                    a.address,
                    CITY.CTNAME                                  ctname,
                    a.pin,
                    a.oph1,
                    a.oph2,
                    a.oph3,
                    a.rph1,
                    a.mobile,
                    a.fax,
                    a.email1,
                    a.email2,
                    a.website,
                    a.contact_person,
                    a.lstno,
                    a.lstdate,
                    a.cstno,
                    a.cstdate,
                    st.saltermcode                               termcode,
                    CASE WHEN UPPER(a.issecondary)='YES' THEN  'Y'  ELSE 'N' END  issecondary,
                    trp.slcode                                   trpcode,
                    'N'                                          lgt_appl,
                    'N'                                          permit_appl,
                    'N'                                          out_lgt_appl,
                    'N'                                          out_permit_appl,
                    'N'                                          gatein_appl,
                    'N'                                          ispos,
                    tx.code                                      psite_admcmptax_code,
                    CASE WHEN UPPER(a.ext)='YES' THEN  'Y'  ELSE 'N' END       ext,
                    'N'
                       psite_ispublished,
                    'N'
                       psite_stopsync,
                    -- START REV : 003
                    --1                                            admou_code,
                    -- START REV : 008
                   -- P_CONNECT_OU                                ADMOU_CODE,
                     OU.CODE                                ADMOU_CODE,
                    -- END REV : 008
                    -- END REV : 003
                    spl.pricelistcode
                       pricelist_code,
                    trd.code
                       saltradegrp_code,
                    frm.formcode                                 salformcode,
                    0
                       iscentrallymanaged,
                    0
                       issalespersonmanaged,
                    a.reportname,
                    'M'                                          PRICETYPE
                    -- START REV : 004
                   ,a.gst_identification_no
                   ,a.gst_registration_date
                   -- END REV : 004
                   -- START REV : 010
                   ,CASE WHEN UPPER(a.shipping_same_as_billing)='YES' THEN 'Y'  ELSE 'N' END  shipping_same_as_billing
                   ,a.shipping_company_name
                   ,a.shipping_cinno
                   ,a.shipping_address
                   ,a.shipping_ctname
                   ,a.shipping_pin
                   ,a.shipping_oph1
                   ,a.shipping_oph2
                   ,a.shipping_oph3
                   ,a.shipping_rph1
                   ,a.shipping_mobile
                   ,a.shipping_fax
                   ,a.shipping_email1
                   ,a.shipping_email2
                   ,a.shipping_website
                   ,a.shipping_contact_person
                   ,admg.code   shipping_gst_category
                   ,a.shipping_gstin
                   ,a.shipping_gstin_state_name
                   ,a.shipping_gst_reg_date,
                   -- END REV : 010
                   -- START REV : 012
                   a.udfstring01,
                   a.udfstring02,
                   a.udfstring03,
                   a.udfstring04,
                   a.udfstring05,
                   a.udfstring06,
                   a.udfstring07,
                   a.udfstring08,
                   a.udfstring09,
                   a.udfstring10,
                   a.udfstring11,
                   a.udfstring12,
                   a.udfstring13,
                   a.udfstring14,
                   a.udfstring15,
                   a.udfnum01,
                   a.udfnum02,
                   a.udfnum03,
                   a.udfnum04,
                   a.udfnum05,
                   a.udfdate01,
                   a.udfdate02,
                   a.udfdate03,
                   a.udfdate04,
                   a.udfdate05
                   -- END REV : 012
             FROM int$stg_umngsitimport a
				 LEFT OUTER JOIN finsl f
				 ON (UPPER(a.slid) = UPPER(f.slid))
				 LEFT OUTER JOIN saltermmain st
				 ON (UPPER(a.term_name) = UPPER(st.saltermname))
				 LEFT OUTER JOIN finsl trp 
				 ON (UPPER(a.trpid) = UPPER(trp.slid))
				 LEFT OUTER JOIN admcmptax tx
				 ON (UPPER(a.psite_admcmptax_name) = UPPER(tx.NAME))
				 LEFT OUTER JOIN salpricelistmain spl
				 ON (UPPER(a.pricelist_name) = UPPER(spl.pricelistname))
				 LEFT OUTER JOIN fintradegrp trd
				 ON (UPPER(a.saltradegrp_name) = UPPER(trd.NAME)) 
				 LEFT OUTER JOIN finform frm
				 ON (UPPER(a.salform_name) = UPPER(frm.formname)) 
				 LEFT OUTER JOIN admcity city
				 ON (UPPER(a.ctname) = UPPER(CITY.ctname))
				 LEFT OUTER JOIN admou ou
				 ON (UPPER(a.ou_name) = UPPER(OU.NAME))
				 LEFT OUTER JOIN admgstcategory admg
				 ON (UPPER(a.shipping_gst_category) = UPPER(admg.name))
WHERE -- END REV : 010
   a.userid = p_userid )
      LOOP
            UPDATE ADMSITE S
            SET  NAME = coalesce(c1.NAME, s.NAME)
                ,cmpcode = 1
                ,shrtname = coalesce(c1.shrtname, s.shrtname)
                ,address = coalesce(c1.address, s.address)
                ,ctname = coalesce(c1.ctname, s.ctname)
                ,pin = coalesce(c1.pin, s.pin)
                ,oph1 = coalesce(c1.oph1, s.oph1)
                ,oph2 = coalesce(c1.oph2, s.oph2)
                ,oph3 = coalesce(c1.oph3, s.oph3)
                ,rph1 = coalesce(c1.rph1, s.rph1)
                ,mobile = coalesce(c1.mobile, s.mobile)
                ,fax = coalesce(c1.fax, s.fax)
                ,email1 = coalesce(c1.email1, s.email1)
                ,email2 = coalesce(c1.email2, s.email2)
                ,website = coalesce(c1.website, s.website)
                ,contact_person = coalesce(c1.contact_person, s.contact_person)
                ,lstno = coalesce(c1.lstno, s.lstno)
                ,lstdate = coalesce(c1.lstdate, s.lstdate)
                ,cstno = coalesce(c1.cstno, s.cstno)
                ,cstdate = coalesce(c1.cstdate, s.cstdate)
                ,termcode = coalesce(c1.termcode, s.termcode)
                ,trpcode = coalesce(c1.trpcode, s.trpcode)
                ,lgt_appl = coalesce(c1.lgt_appl, s.lgt_appl)
                ,permit_appl = coalesce(c1.permit_appl, s.permit_appl)
                ,out_lgt_appl = coalesce(c1.out_lgt_appl, s.out_lgt_appl)
                ,out_permit_appl = coalesce(c1.out_permit_appl, s.out_permit_appl)
                ,gatein_appl = coalesce(c1.gatein_appl, s.gatein_appl)
                ,psite_admcmptax_code = coalesce(c1.psite_admcmptax_code, s.psite_admcmptax_code)
                ,ext = coalesce(c1.ext, s.ext)
                ,psite_ispublished = coalesce(c1.psite_ispublished, s.psite_ispublished)
                ,psite_stopsync = 'N'                --pricetype = c1.pricetype,
                -- START REV : 008
                --admou_code = NVL (c1.admou_code, s.admou_code),
                -- END REV : 008
                ,pricelist_code = coalesce(c1.pricelist_code, s.pricelist_code)
                ,saltradegrp_code = coalesce(c1.saltradegrp_code, s.saltradegrp_code)
                ,salformcode = coalesce(c1.salformcode, s.salformcode)
                ,iscentrallymanaged = coalesce(c1.iscentrallymanaged, s.iscentrallymanaged)
                ,issalespersonmanaged = coalesce(c1.issalespersonmanaged, s.issalespersonmanaged)
                ,reportname = coalesce(c1.reportname, s.reportname)
               ,cp_gstin_no = coalesce(c1.gst_identification_no,s.cp_gstin_no)
               ,cp_gstin_date = coalesce(c1.gst_registration_date,s.cp_gstin_date)
               ,cp_gstin_state_code = coalesce((substr(c1.gst_identification_no,1,2)),s.cp_gstin_state_code)
               -- END REV : 005
               -- START REV : 010
               ,isbillingshippingsame = case when c1.shipping_same_as_billing is not null then c1.shipping_same_as_billing else s.isbillingshippingsame end
               ,ship_legal_name = case when coalesce(c1.shipping_same_as_billing,s.isbillingshippingsame) = 'N' then coalesce(c1.shipping_company_name,s.ship_legal_name) else null end
               ,ship_cinno = case when coalesce(c1.shipping_same_as_billing,s.isbillingshippingsame) = 'N' then coalesce(c1.shipping_cinno,s.ship_cinno) else null end
               ,ship_address = case when coalesce(c1.shipping_same_as_billing,s.isbillingshippingsame) = 'N' then coalesce(c1.shipping_address,s.ship_address) else null end
               ,ship_ctname = case when coalesce(c1.shipping_same_as_billing,s.isbillingshippingsame) = 'N' then coalesce(c1.shipping_ctname,s.ship_ctname) else null end
               ,ship_pin = case when coalesce(c1.shipping_same_as_billing,s.isbillingshippingsame) = 'N' then coalesce(c1.shipping_pin,s.ship_pin) else null end
               ,ship_oph1 = case when coalesce(c1.shipping_same_as_billing,s.isbillingshippingsame) = 'N' then coalesce(c1.shipping_oph1,s.ship_oph1) else null end
               ,ship_oph2 = case when coalesce(c1.shipping_same_as_billing,s.isbillingshippingsame) = 'N' then coalesce(c1.shipping_oph2,s.ship_oph2) else null end
               ,ship_oph3 = case when coalesce(c1.shipping_same_as_billing,s.isbillingshippingsame) = 'N' then coalesce(c1.shipping_oph3,s.ship_oph3) else null end
               ,ship_rph1 = case when coalesce(c1.shipping_same_as_billing,s.isbillingshippingsame) = 'N' then coalesce(c1.shipping_rph1,s.ship_rph1) else null end
               ,ship_mobile = case when coalesce(c1.shipping_same_as_billing,s.isbillingshippingsame) = 'N' then coalesce(c1.shipping_mobile,s.ship_mobile) else null end
               ,ship_fax = case when coalesce(c1.shipping_same_as_billing,s.isbillingshippingsame) = 'N' then coalesce(c1.shipping_fax,s.ship_fax) else null end
               ,ship_email1 = case when coalesce(c1.shipping_same_as_billing,s.isbillingshippingsame) = 'N' then coalesce(c1.shipping_email1,s.ship_email1) else null end
               ,ship_email2 = case when coalesce(c1.shipping_same_as_billing,s.isbillingshippingsame) = 'N' then coalesce(c1.shipping_email2,s.ship_email2) else null end
               ,ship_website = case when coalesce(c1.shipping_same_as_billing,s.isbillingshippingsame) = 'N' then coalesce(c1.shipping_website,s.ship_website) else null end
               ,ship_contact_person = case when coalesce(c1.shipping_same_as_billing,s.isbillingshippingsame) = 'N' then coalesce(c1.shipping_contact_person,s.ship_contact_person) else null end
               ,ship_cp_category_code = case when coalesce(c1.shipping_same_as_billing,s.isbillingshippingsame)= 'N' then coalesce(c1.shipping_gst_category,s.ship_cp_category_code) else null end
               ,ship_cp_gstin_no = case when coalesce(c1.shipping_same_as_billing,s.isbillingshippingsame) = 'N' then coalesce(c1.shipping_gstin,s.ship_cp_gstin_no) else null end
               ,ship_cp_gstin_state_code = case when coalesce(c1.shipping_same_as_billing,s.isbillingshippingsame) = 'N' then coalesce(c1.shipping_gstin_state_name,s.ship_cp_gstin_state_code) else null end
               ,ship_cp_gstin_date = case when coalesce(c1.shipping_same_as_billing,s.isbillingshippingsame) = 'N' then coalesce(c1.shipping_gst_reg_date,s.ship_cp_gstin_date) else null end,
               -- START REV : 012
                udfstring01 = coalesce(c1.udfstring01,s.udfstring01),
                udfstring02 = coalesce(c1.udfstring02,s.udfstring02),
                udfstring03 = coalesce(c1.udfstring03,s.udfstring03),
                udfstring04 = coalesce(c1.udfstring04,s.udfstring04),
                udfstring05 = coalesce(c1.udfstring05,s.udfstring05),
                udfstring06 = coalesce(c1.udfstring06,s.udfstring06),
                udfstring07 = coalesce(c1.udfstring07,s.udfstring07),
                udfstring08 = coalesce(c1.udfstring08,s.udfstring08),
                udfstring09 = coalesce(c1.udfstring09,s.udfstring09),
                udfstring10 = coalesce(c1.udfstring10,s.udfstring10),
                udfstring11 = coalesce(c1.udfstring11,s.udfstring11),
                udfstring12 = coalesce(c1.udfstring12,s.udfstring12),
                udfstring13 = coalesce(c1.udfstring13,s.udfstring13),
                udfstring14 = coalesce(c1.udfstring14,s.udfstring14),
                udfstring15 = coalesce(c1.udfstring15,s.udfstring15),
                udfnum01 = coalesce(c1.udfnum01,s.udfnum01),
                udfnum02 = coalesce(c1.udfnum02,s.udfnum02),
                udfnum03 = coalesce(c1.udfnum03,s.udfnum03),
                udfnum04 = coalesce(c1.udfnum04,s.udfnum04),
                udfnum05 = coalesce(c1.udfnum05,s.udfnum05),
                udfdate01 = coalesce(c1.udfdate01,s.udfdate01),
                udfdate02 = coalesce(c1.udfdate02,s.udfdate02),
                udfdate03 = coalesce(c1.udfdate03,s.udfdate03),
                udfdate04 = coalesce(c1.udfdate04,s.udfdate04),
                udfdate05 = coalesce(c1.udfdate05,s.udfdate05)
              -- START REV : 012
        WHERE s.code = c1.code;

    GET DIAGNOSTICS ora2pg_rowcount = ROW_COUNT;
IF ora2pg_rowcount =  0
    THEN
         INSERT INTO ADMSITE(code
                 ,NAME
                 -- PSITE_INITIAL,
                 ,slcode
                 ,cmpcode
                 ,shrtname
                 ,address
                 ,ctname
                 ,pin
                 ,oph1
                 ,oph2
                 ,oph3
                 ,rph1
                 ,mobile
                 ,fax
                 ,email1
                 ,email2
                 ,website
                 ,contact_person
                 ,lstno
                 ,lstdate
                 ,cstno
                 ,cstdate
                 ,termcode
                 ,issecondary
                 ,trpcode
                 ,lgt_appl
                 ,permit_appl
                 ,out_lgt_appl
                 ,out_permit_appl
                 ,gatein_appl
                 ,ispos
                 ,psite_admcmptax_code
                 ,ext
                 ,psite_ispublished
                 ,psite_stopsync
                 ,admou_code
                 ,pricelist_code
                 ,saltradegrp_code
                 ,salformcode
                 ,iscentrallymanaged
                 ,issalespersonmanaged
                 ,reportname
                 ,pricetype
                 -- START REV : 004
                 ,cp_gstin_no
                 ,cp_gstin_date
                 ,cp_gstin_state_code
                 -- END REV : 004
                 -- START REV : 010
                 ,isbillingshippingsame
                 ,ship_legal_name
                 ,ship_cinno
                 ,ship_address
                 ,ship_ctname
                 ,ship_pin
                 ,ship_oph1
                 ,ship_oph2
                 ,ship_oph3
                 ,ship_rph1
                 ,ship_mobile
                 ,ship_fax
                 ,ship_email1
                 ,ship_email2
                 ,ship_website
                 ,ship_contact_person
                 ,ship_cp_category_code
                 ,ship_cp_gstin_no
                 ,ship_cp_gstin_state_code
                 ,ship_cp_gstin_date,
                -- END REV : 010
                -- START REV : 012
                  udfstring01,
                  udfstring02,
                  udfstring03,
                  udfstring04,
                  udfstring05,
                  udfstring06,
                  udfstring07,
                  udfstring08,
                  udfstring09,
                  udfstring10,
                  udfstring11,
                  udfstring12,
                  udfstring13,
                  udfstring14,
                  udfstring15,
                  udfnum01,
                  udfnum02,
                  udfnum03,
                  udfnum04,
                  udfnum05,
                  udfdate01,
                  udfdate02,
                  udfdate03,
                  udfdate04,
                  udfdate05
                 -- END REV : 012
                 )
         VALUES (nextval('admsite_code')
                 ,c1.NAME
                 ,c1.slcode
                 ,c1.cmpcode
                 ,c1.shrtname
                 ,c1.address
                 ,c1.ctname
                 ,c1.pin
                 ,c1.oph1
                 ,c1.oph2
                 ,c1.oph3
                 ,c1.rph1
                 ,c1.mobile
                 ,c1.fax
                 ,c1.email1
                 ,c1.email2
                 ,c1.website
                 ,c1.contact_person
                 ,c1.lstno
                 ,c1.lstdate
                 ,c1.cstno
                 ,c1.cstdate
                 ,c1.termcode
                 ,c1.issecondary
                 ,c1.trpcode
                 ,c1.lgt_appl
                 ,c1.permit_appl
                 ,c1.out_lgt_appl
                 ,c1.out_permit_appl
                 ,c1.gatein_appl
                 ,c1.ispos
                 ,c1.psite_admcmptax_code
                 -- START REV : 001
                 -- c1.ext,
                 ,coalesce(c1.ext,'N')
                 -- END REV : 001
                 ,c1.psite_ispublished
                 ,c1.psite_stopsync
                 ,c1.admou_code
                 ,c1.pricelist_code
                 ,c1.saltradegrp_code
                 ,c1.salformcode
                 ,c1.iscentrallymanaged
                 ,c1.issalespersonmanaged
                 ,c1.reportname
                 ,c1.pricetype
                 -- START REV : 005
                 ,c1.gst_identification_no
                 ,c1.gst_registration_date
                 ,(substr(c1.gst_identification_no,1,2))
                 -- END REV : 005
                 -- START REV : 010
                 ,c1.shipping_same_as_billing
                 ,c1.shipping_company_name
                 ,c1.shipping_cinno
                 ,c1.shipping_address
                 ,c1.shipping_ctname
                 ,c1.shipping_pin
                 ,c1.shipping_oph1
                 ,c1.shipping_oph2
                 ,c1.shipping_oph3
                 ,c1.shipping_rph1
                 ,c1.shipping_mobile
                 ,c1.shipping_fax
                 ,c1.shipping_email1
                 ,c1.shipping_email2
                 ,c1.shipping_website
                 ,c1.shipping_contact_person
                 ,c1.shipping_gst_category
                 ,c1.shipping_gstin
                 ,CASE WHEN c1.shipping_gstin IS NOT NULL THEN substr(c1.shipping_gstin,1,2)
                       WHEN c1.shipping_gstin IS NULL THEN (SELECT CODE FROM ADMGSTSTATE WHERE UPPER(NAME) = UPPER((SELECT STNAME FROM ADMCITY WHERE CTNAME = c1.shipping_ctname)))
                       ELSE NULL END
                 ,c1.shipping_gst_reg_date,
                -- END REV : 010
                -- START REV : 012
                 c1.udfstring01,
                 c1.udfstring02,
                 c1.udfstring03,
                 c1.udfstring04,
                 c1.udfstring05,
                 c1.udfstring06,
                 c1.udfstring07,
                 c1.udfstring08,
                 c1.udfstring09,
                 c1.udfstring10,
                 c1.udfstring11,
                 c1.udfstring12,
                 c1.udfstring13,
                 c1.udfstring14,
                 c1.udfstring15,
                 c1.udfnum01,
                 c1.udfnum02,
                 c1.udfnum03,
                 c1.udfnum04,
                 c1.udfnum05,
                 c1.udfdate01,
                 c1.udfdate02,
                 c1.udfdate03,
                 c1.udfdate04,
                 c1.udfdate05
                 -- END REV : 012
                 );
          END IF;
      END LOOP;
      -- END REV : 011
      -- START REV : 011
       -- END REV : 011
      -- log to be added in history table
      SELECT nextval('int$error_log_code') INTO STRICT vsession;

      vdetailtbl :=  -- START REV : 002
                    --'create table stimport_'
                    'create table ginarchive.stimport_'
                    -- END REV : 002
                    || vsession
                    || ' as select distinct name,slid from int$stg_UMNGSITIMPORT where userid ='
                    || p_userid::text;

      EXECUTE vdetailtbl;

      -- START REV : 002
      --vdetailrec := 'select count(1) from stimport_' || vsession::text;
      vdetailrec := 'select count(1) from ginarchive.stimport_' || vsession::text;
      -- END REV : 002
      EXECUTE vdetailrec INTO STRICT vcount;

      INSERT INTO int$history(code,
                               importedby,
                               importedon,
                               classname,
                               summary,
                               history_detail_tablename,
                               history_detail_row_count)
      VALUES (nextval('int$history_code'),
              p_userid,
              clock_timestamp(),
              'UMNGSITIMPORT',
              vcount::TEXT || ' Data updated successfully.',
              -- START REV : 002
              --'stimport_' || vsession,
              'ginarchive.stimport_' || vsession,
              -- END REV : 002
              vcount);

      --COMMIT;
      RETURN('1');
   EXCEPTION
      WHEN OTHERS
      THEN
         errcode := SQLSTATE;
         errmsg := SQLERRM;

         -- error log for oracle internal error
         INSERT INTO int$error_log(code,
                                    lineno,
                                    classname,
                                    userid,
                                    errortype,
                                    errordesc,
                                    createdon)
         VALUES (nextval('int$error_log_code'),
                 0,
                 'UMNGSITIMPORT',
                 p_userid,
                 errcode,
                 errmsg,
                 clock_timestamp());

         --COMMIT;
         RETURN('0');
   END;

   -- Clear Store Franchise Consignment Sale
"""
  returnType = character
  arguments = <
    {
      name = p_userid
      type = bigint
      mode = IN
    }

    {
      name = p_connect_site
      type = bigint
      mode = IN
    }

    {
      name = p_logging_date
      type = timestamp without time zone
      mode = IN
    }

    {
      name = p_connect_ou
      type = bigint
      mode = IN
    }

  >
  language = plpgsql
}

function "main"."int$pkg_umngsitimport_int$pkg_umngsitimport_process(bigint, bigint, timestamp without time zone, bigint)" {
  text = """

 
DECLARE
    -- Change this to reflect the dblink connection string
    --v_conn_str  text := format('port=%s dbname=%s user=%s', current_setting('port'), current_database(), current_user);
    v_srvname       name;
    v_connname      text;
    v_connstr       text;
    v_conn_result   text;
    v_query         text;

    v_ret    text;

BEGIN
    v_srvname := 'foreign_pgbase';
    v_connname := replace(uuid_generate_v4()::text,'-','');
    v_connstr  := v_srvname;
    
    --Open the connection  
    SELECT dblink_connect(v_connname,v_connstr) 
    INTO v_conn_result;										 
	v_query := 'SELECT * FROM int$pkg_umngsitimport_int$pkg_umngsitimport_process_atx ( ' || quote_nullable(p_userid::text) || '::bigint,' || quote_nullable(p_connect_site::text) || '::bigint,' || quote_nullable(p_logging_date::text) || '::timestamp without time zone,' || quote_nullable(p_connect_ou::text) || '::bigint )';
	SELECT * INTO v_ret FROM dblink(v_connname, v_query) AS p (ret text);

											 
	SELECT dblink_disconnect(v_connname) 
    INTO v_conn_result;
	
	RETURN v_ret;
EXCEPTION 
   WHEN OTHERS THEN
        SELECT dblink_disconnect(v_connname) 
        INTO v_conn_result;										 
											 

END;
"""
  returnType = text
  arguments = <
    {
      name = p_userid
      type = bigint
      mode = IN
    }

    {
      name = p_connect_site
      type = bigint
      mode = IN
    }

    {
      name = p_logging_date
      type = timestamp without time zone
      mode = IN
    }

    {
      name = p_connect_ou
      type = bigint
      mode = IN
    }

  >
  language = plpgsql
}

