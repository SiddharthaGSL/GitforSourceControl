function "main"."t_invitem_delete()" {
  text = """

DECLARE
  	CURSOR1      	integer;
    	ROWS_PROCESSED 	integer;
	V_COUNT		bigint;

	C1 CURSOR FOR
	SELECT  D.FOR_TAB   TABNAME,
		COM.COMMENTS TABCOMMENTS,
		SUBSTR(C.COLUMN_NAME,1,50) COLNAME
	FROM 	USER_CONS_COLUMNS C,
 		USER_TAB_COMMENTS COM,
	   	(
   		SELECT  A.TABLE_NAME   FOR_TAB
    			,B.TABLE_NAME   REF_TAB
	    		,SUBSTR(B.COLUMN_NAME,1,50) REF_COL
    			,A.R_CONSTRAINT_NAME  REF_CONS
    			,A.CONSTRAINT_NAME  FOR_CONS
	   	FROM  	USER_CONSTRAINTS A,
    			USER_CONS_COLUMNS B
	   	WHERE  	A.R_CONSTRAINT_NAME = B.CONSTRAINT_NAME
   		AND 	A.CONSTRAINT_TYPE = 'R'
	   	AND 	B.TABLE_NAME = 'INVITEM') D
	WHERE 	D.FOR_CONS = C.CONSTRAINT_NAME
	AND 	D.FOR_TAB = COM.TABLE_NAME
	AND 	D.FOR_TAB <> 'INVSTOCK';
BEGIN
  BEGIN
	FOR C1REC IN C1
	LOOP
	    	CURSOR1 := DBMS_SQL.OPEN_CURSOR;
  		Call DBMS_SQL.PARSE(CURSOR1, 'SELECT 1 FROM '||C1REC.TABNAME||' WHERE '||C1REC.COLNAME||' = :BINDICODE', DBMS_SQL.NATIVE);
	 	Call DBMS_SQL.BIND_VARIABLE(CURSOR1, ':BINDICODE', OLD.ICODE);
		Call DBMS_SQL.DEFINE_COLUMN(CURSOR1,1,V_COUNT);
		ROWS_PROCESSED := DBMS_SQL.EXECUTE(CURSOR1);
		LOOP
	    		IF 	DBMS_SQL.FETCH_ROWS(CURSOR1)>0 THEN
			   	CALL DBMS_SQL.COLUMN_VALUE(CURSOR1,1,V_COUNT);
				EXIT;
			ELSE
			  	EXIT;
			END IF;
		END LOOP;

    		IF 	DBMS_SQL.IS_OPEN(CURSOR1) THEN
      			CALL DBMS_SQL.CLOSE_CURSOR(CURSOR1);
	    	END IF;

		IF	V_COUNT > 0 THEN
			RAISE EXCEPTION '%', '#Entry exist in '||coalesce(C1REC.TABCOMMENTS,C1REC.TABNAME)||'#' USING ERRCODE = '45101';
		END IF;
	END LOOP;
  END;
RETURN OLD;
END
"""
  returnType = trigger
  arguments = [
  ]
  language = plpgsql
}

