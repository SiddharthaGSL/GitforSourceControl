function "main"."validate_composite2_quantities()" {
  text = """

declare
latest_values PRDJOBBOM;
BEGIN
SELECT * INTO latest_values FROM PRDJOBBOM WHERE code = NEW.code;
  IF (latest_values.TOLERANCE IS  NULL)
OR (latest_values.tolerance::numeric = 0::numeric
    AND COALESCE(latest_values.QTY, 0::numeric) >= (COALESCE(latest_values.ISSUED_QTY, 0::numeric) - COALESCE(latest_values.RETURN_QTY, 0::numeric) - COALESCE(latest_values.WASTAGE_QTY, 0::numeric)
        + COALESCE(latest_values.CANCEL_QTY, 0::numeric) + COALESCE(latest_values.ALTERNATE_CNL_QTY, 0::numeric)))
OR (latest_values.TOLERANCE <> 0
    AND ROUND(
        (COALESCE(latest_values.ASSEMBLY_QTY, 0::numeric) * COALESCE(latest_values.BOM_QTY, 0::numeric)) + 
		((COALESCE(latest_values.ASSEMBLY_QTY, 0::numeric) * COALESCE(latest_values.BOM_QTY, 0::numeric) * latest_values.tolerance::numeric) / 100::numeric), 3)
	>= (COALESCE(latest_values.ISSUED_QTY, 0::numeric) - COALESCE(latest_values.RETURN_QTY, 0::numeric) - COALESCE(latest_values.WASTAGE_QTY, 0::numeric)
        + COALESCE(latest_values.CANCEL_QTY, 0::numeric) + COALESCE(latest_values.ALTERNATE_CNL_QTY, 0::numeric)))  
	THEN
      	RETURN NEW;
	else 
		RAISE EXCEPTION 'exception occurred.';
  END IF;
  RETURN NEW;
END;
"""
  returnType = trigger
  arguments = [
  ]
  language = plpgsql
}

