function "main"."trigger_fct_t_salrtdet_glsl()" {
  text = """

DECLARE
    ora2pg_rowcount integer;
V_TYPE                varchar(100);
    V_DETAIL_CODE         INVSTOCK.DETAIL_CODE%TYPE;
    V_ENTCODE             INVSTOCK.ENTCODE%TYPE;
    V_ENTNO               INVSTOCK.ENTNO%TYPE;
    V_SCHEME_DOCNO        INVSTOCK.SCHEME_DOCNO%TYPE;
    V_ENTDT               INVSTOCK.ENTDT%TYPE;
    V_ENTTYPE             INVSTOCK.ENTTYPE%TYPE;
    V_SUBENTTYPE          INVSTOCK.SUBENTTYPE%TYPE;
    V_LOCCODE             INVSTOCK.LOCCODE%TYPE;
    V_YCODE               INVSTOCK.YCODE%TYPE;
    V_NEW_ICODE           INVSTOCK.ICODE%TYPE;
    V_OLD_ICODE           INVSTOCK.ICODE%TYPE;
    V_NEW_QTY             INVSTOCK.QTY%TYPE;
    V_OLD_QTY             INVSTOCK.QTY%TYPE;
    V_NEW_RATE            INVSTOCK.RATE%TYPE;
    V_OLD_RATE            INVSTOCK.RATE%TYPE;
    V_REFPCODE            INVSTOCK.REFPCODE%TYPE;
    V_REFSITECODE         INVSTOCK.ADMSITE_CODE%TYPE;
    V_ISSECONDARY         INVSTOCK.ISSECONDARY%TYPE;
    V_SALETYPE            SALINVMAIN.SALETYPE%TYPE;
    V_REFLOCCODE          INVSTOCK.REFLOCCODE%TYPE;
    V_REFCMPCODE          INVSTOCK.REFCMPCODE%TYPE;
    V_REFGLCODE           INVSTOCK.REFGLCODE%TYPE;
    V_REFDEPTCODE         INVSTOCK.REFDEPTCODE%TYPE;
    V_REFPRCODE           INVSTOCK.REFPRCODE%TYPE;
    V_REFDOCNO            INVSTOCK.REFDOCNO%TYPE;
    V_REFPKGCODE          INVSTOCK.REFPKGCODE%TYPE;
    V_REFDCCODE           INVSTOCK.REFDCCODE%TYPE;
    V_OTHER_RATE          INVSTOCK.COSTRATE%TYPE;
    V_ORDCODE             INVDCDET.ORDCODE%TYPE;
    V_SOICODE             INVDCDET.SOICODE%TYPE;
    -- START REV : 001
    V_ADMOUCODE           ADMOU.CODE%TYPE;
    V_INVMAINOUCODE       ADMOU.CODE%TYPE;
    -- END REV : 001
    -- START REV : 002
    V_SITECODE_OWNER      INVSTOCK.ADMSITE_CODE%TYPE;
    V_SITETYPE            ADMSITE.SITETYPE%TYPE;
    V_TS_SITECODE         ADMSITE.CODE%TYPE;
    -- END REV : 002
    -- START REV : 006
    -- END REV : 006
     V_POSTCODE       bigint := 0;
    V_DAMOUNT        FINPOST.DAMOUNT%TYPE;
    V_CAMOUNT        FINPOST.CAMOUNT%TYPE;
    V_OLD_POSTCODE       bigint := 0;
    V_OLD_DAMOUNT        FINPOST.DAMOUNT%TYPE;
    V_OLD_CAMOUNT        FINPOST.CAMOUNT%TYPE;
  --  V_ADMOU_CODE            NUMBER(12);
    V_REF_ADMSITE_CODE      bigint;
    V_rem                   varchar(200) := NULL;
    V_docno                 varchar(100) := NULL;
    V_DOCDT                 timestamp;
    V_admsite_code          bigint := NULL;
    V_ADMOU_CODE_OWNER      bigint := NULL;
    V_ENTTYPE_POST          varchar(25) := NULL;
    V_NEW_GRSAMT            double precision := NULL;
    V_OLD_GRSAMT            double precision := NULL;
    V_FROM_ADMSITE_CODE    INVSTOCK.ADMSITE_CODE%TYPE;--:= NVL(:NEW.ADMSITE_CODE,:OLD.ADMSITE_CODE);
    V_TO_ADMSITE_CODE      INVSTOCK.ADMSITE_CODE%TYPE;--:= NVL(:NEW.ADMSITE_CODE_OWNER,:OLD.ADMSITE_CODE_OWNER);
    V_FROM_SITETYPE        ADMSITE.SITETYPE%TYPE;
    V_TO_SITETYPE          ADMSITE.SITETYPE%TYPE;
BEGIN
  BEGIN
    /*******************************************************************************************************************
      REV NO      DATE           OWNER            DESCRIPTION
      ---------   -----------    -----------      ---------------------------------------------------------------------
      REV : 001   16/02/2018     MOUSUMI          (TFS ID : 37820) Non-trading flow - Purchase/Sale/Transfer
    *******************************************************************************************************************/
     -- STOCK AND COSTING REFLECTION
     BEGIN
     SELECT RTNO                                ENTNO,
            SCHEME_DOCNO                         SCHEME_DOCNO,
            RTDT                                ENTDT,
           -- DECODE(SALETYPE, 'O', 'SRT', 'STO')  ENTTYPE,
            --DECODE(SALETYPE, 'C', 'CT', NULL)    SUB_ENTTYPE,
            YCODE                                YCODE,
            PCODE                                REFPCODE,
            ADMSITE_CODE                         REFSITECODE,
            M.INLOCCODE                            REFLOCCODE,
            coalesce(M.ISSECONDARY,'N')                 REFISSECONDARY,
            SALETYPE                             REFSALETYPE,
            NULL                                 REFCMPCODE,
            NULL                                 REFGLCODE,
            NULL                                 REFDEPTCODE,
            NULL                                 REFPRCODE,
            DOCNO                                REFDOCNO,
            NULL                                 REFPKGCODE,
            S.ADMOU_CODE,
            ADMSITE_CODE_OWNER                   SITECODE_OWNER
            ,CASE WHEN SALETYPE='O' THEN  'SRD'  ELSE 'CRD' END   ENTTYPE
            ,S.SITETYPE
            ,S1.SITETYPE
     INTO STRICT
            V_ENTNO,
            V_SCHEME_DOCNO,
            V_ENTDT,
          --  V_ENTTYPE,
           -- V_SUBENTTYPE,
            V_YCODE,
            V_REFPCODE,
            V_REFSITECODE,
            V_REFLOCCODE,
            V_ISSECONDARY,
            V_SALETYPE,
            V_REFCMPCODE,
            V_REFGLCODE,
            V_REFDEPTCODE,
            V_REFPRCODE,
            V_REFDOCNO,
            V_REFPKGCODE,
            -- START REV : 001
            V_INVMAINOUCODE,
            -- END REV : 001
            -- START REV : 002
            V_SITECODE_OWNER
            -- END REV : 002
            ,V_ENTTYPE_POST
            ,V_TO_SITETYPE
            ,V_FROM_SITETYPE
     FROM salrtmain m
LEFT OUTER JOIN admsite s ON (M.ADMSITE_CODE_OWNER = S.CODE)
LEFT OUTER JOIN admsite s1 ON (M.ADMSITE_CODE = S1.CODE)
WHERE RTCODE = coalesce(NEW.RTCODE,OLD.RTCODE);
     EXCEPTION WHEN no_data_found THEN
        NULL;
     END;

   IF ( V_TO_SITETYPE = 'OS-OO-CM' AND V_FROM_SITETYPE IN ( 'US-CO-OM' ,'MS-CO-OM-TS','US-CO-OM-TS') AND V_SALETYPE = 'O' )    --S&D : Sales Return (Adhoc) ,Sales Return (Against Invoice)
            OR ( V_TO_SITETYPE = 'OS-OO-CM' AND V_FROM_SITETYPE IN ('MS-CO-CM','MS-OO-CM','OS-OO-CM') AND V_SALETYPE = 'C' )  --S&D : Transfer IN (Against Transfer OUT)
         OR ( V_TO_SITETYPE IN ( 'US-CO-CM', 'OS-OO-CM'  ) AND V_FROM_SITETYPE IN ( 'US-CO-CM') AND V_SALETYPE = 'C') --S&D : Transfer IN (Adhoc)
          THEN


              IF ( V_TO_SITETYPE = 'OS-OO-CM' AND V_FROM_SITETYPE IN ('MS-CO-CM','MS-OO-CM','OS-OO-CM') AND V_SALETYPE = 'C' )  THEN  --S&D : Transfer IN (Against Transfer OUT)
                 V_NEW_GRSAMT := round((coalesce(coalesce(NEW.RATE,0)*coalesce(NEW.SENDQTY,0),0))::numeric,2);

                V_OLD_GRSAMT := round((coalesce(coalesce(OLD.RATE,0)*coalesce(OLD.SENDQTY,0),0))::numeric,2);


              ELSE

                V_NEW_GRSAMT := round((coalesce(coalesce(NEW.RATE,0)*coalesce(NEW.QTY,0),0))::numeric,2);

                V_OLD_GRSAMT := round((coalesce(coalesce(OLD.RATE,0)*coalesce(OLD.QTY,0),0))::numeric,2);
              END IF;

            IF OLD.GLCODE IS NOT NULL THEN
                UPDATE FINPOST
                SET    Damount = coalesce(Damount,0) - coalesce(V_OLD_GRSAMT,0)
                WHERE  ENTCODE = OLD.RTCODE::varchar
                AND    ENTTYPE = V_ENTTYPE_POST
                AND    GLCODE = OLD.GLCODE
                AND    ((OLD.SLCODE IS NULL AND SLCODE IS NULL) OR SLCODE = OLD.SLCODE);

                BEGIN
                    SELECT  DISTINCT(POSTCODE),
                            SUM(DAMOUNT),
                            SUM(CAMOUNT)
                    INTO STRICT
                            V_OLD_POSTCODE,
                            V_OLD_DAMOUNT,
                            V_OLD_CAMOUNT
                    FROM
                            FINPOST
                    WHERE
                            ENTCODE = OLD.RTCODE::varchar
                    AND     ENTTYPE = V_ENTTYPE_POST
                    AND       GLCODE = OLD.GLCODE
                    AND      OLD.GLCODE  IS NOT NULL
                   -- AND      NVL(camount,0)  > 0
                    AND     ((OLD.SLCODE IS NULL AND SLCODE IS NULL) OR SLCODE = OLD.SLCODE)
                    GROUP BY POSTCODE;

                        UPDATE FINCOSTTAG
                        SET
                        Damount         = coalesce(Damount,0) - coalesce(V_OLD_GRSAMT,0)
                        where  entcode  =  OLD.RTCODE::varchar
                        and   enttype     = V_ENTTYPE_POST
                        AND   postcode        = v_OLD_postcode
                        AND   OLD.GL_CC_APPL = 'Y'
                        and   glcode      = OLD.glcode
                        AND ((OLD.SLCODE IS NULL AND SLCODE IS NULL) OR SLCODE = OLD.SLCODE);
                EXCEPTION WHEN no_data_found THEN
                   NULL;
                END;
            END IF;

            IF    NEW.GLCODE IS NOT NULL THEN
              UPDATE finpost
                 SET entno          = V_ENTNO::varchar,
                     entdt          = V_ENTDT,
                     scheme_docno   = V_scheme_docno,
                     docno   = V_docno,
                     docDT   = V_DOCDT,
                     glcode  = NEW.glcode,
                     slcode  = NEW.slcode,
                     nartext = V_rem,
                     damount = coalesce(DAMOUNT,0) + coalesce(V_NEW_GRSAMT,0),
                     camount = 0
              -- ,REF_ADMSITE_CODE   = V_REF_ADMSITE_CODE
                ,admsite_code_owner = v_SITECODE_OWNER
               ,ADMOU_CODE = V_INVMAINOUCODE
               WHERE entcode = NEW.RTCODE::varchar
                 AND enttype = V_ENTTYPE_POST
                 AND glcode = NEW.glcode
                 AND ((NEW.slcode IS NULL AND slcode IS NULL) OR slcode = NEW.slcode);

                  GET DIAGNOSTICS ora2pg_rowcount = ROW_COUNT;
IF ora2pg_rowcount = 0
                  THEN
                        INSERT INTO FINPOST(postcode, entcode, entno,
                                        entdt, enttype, docno, glcode, slcode,
                                        Damount, ycode
                                        ,nartext
                                        ,scheme_docno
                                      --  ,REF_ADMSITE_CODE
                                       ,admsite_code_owner
                                        ,ADMOU_CODE
                                        ,docDT
                                       )
                                VALUES (nextval('erp01'),
                                         NEW.RTCODE::varchar,
                                         V_ENTNO::varchar,
                                        V_ENTDT, V_ENTTYPE_POST, V_docno, NEW.glcode, NEW.slcode,
                                        coalesce(V_NEW_GRSAMT,0),
                                        V_ycode
                                        ,V_rem
                                        ,V_scheme_docno
                                       -- ,V_REF_ADMSITE_CODE
                                       ,v_SITECODE_OWNER
                                        ,V_INVMAINOUCODE
                                        ,V_docDT
                                       );
                   END IF;

                BEGIN
                    SELECT  DISTINCT(POSTCODE),
                            SUM(DAMOUNT),
                            SUM(CAMOUNT)
                    INTO STRICT
                            V_POSTCODE,
                            V_DAMOUNT,
                            V_CAMOUNT
                    FROM
                            FINPOST
                    WHERE
                            ENTCODE = NEW.RTCODE::varchar
                    AND     ENTTYPE = V_ENTTYPE_POST
                    AND       GLCODE = NEW.GLCODE
                    AND      NEW.GLCODE  IS NOT NULL
                    AND      coalesce(DAMOUNT,0) <> 0
                    AND     ((NEW.SLCODE IS NULL AND SLCODE IS NULL) OR SLCODE = NEW.SLCODE)
                    GROUP BY POSTCODE;

                        UPDATE FINCOSTTAG
                        SET    ENTCODE  = NEW.RTCODE::varchar,
                        entno           = V_ENTno::varchar,
                        entdt           = V_ENTdt,
                        enttype         = V_ENTTYPE_POST,
                        glcode          = NEW.glcode,
                        ycode           = V_ycode,
                        costcode         = NULL,
                        slcode          = NEW.slcode, --:new.pcode,
                        damount         = coalesce(Damount,0) + coalesce(V_NEW_GRSAMT,0) ,
                        camount         = 0,
                        admsite_code    = v_SITECODE_OWNER,
                        postcode        = v_postcode,
                        ref_admsite_code    = v_SITECODE_OWNER
                        ,ADMOU_CODE = V_INVMAINOUCODE -- REV : 009
                        where  entcode  =  NEW.RTCODE::varchar
                        and enttype     = V_ENTTYPE_POST
                        AND  NEW.GL_CC_APPL = 'Y'
                        and glcode      = NEW.glcode
                        AND    ((NEW.SLCODE IS NULL AND SLCODE IS NULL) OR SLCODE = NEW.SLCODE);

                       GET DIAGNOSTICS ora2pg_rowcount = ROW_COUNT;
IF ora2pg_rowcount = 0 THEN

                            IF  V_POSTCODE IS NOT NULL AND NEW.GL_CC_APPL = 'Y' AND coalesce(V_DAMOUNT,0) <> 0  THEN
                                INSERT INTO FINCOSTTAG(ENTCODE, ENTNO, ENTDT, ENTTYPE
                                       ,GLCODE, YCODE, COSTCODE, SLCODE, DAMOUNT,
                                       POSTCODE, ADMSITE_CODE, REF_ADMSITE_CODE
                                       ,ADMOU_CODE
                                       )
                                VALUES (NEW.RTCODE::varchar, V_ENTNO::varchar, V_ENTDT, V_ENTTYPE_POST
                                       ,NEW.GLCODE, V_YCODE, NULL, NEW.SLCODE, coalesce(V_NEW_GRSAMT,0),
                                       V_POSTCODE, v_SITECODE_OWNER,v_SITECODE_OWNER
                                       ,V_INVMAINOUCODE
                                       );
                            END IF;
                       END IF;
            EXCEPTION WHEN no_data_found THEN
               NULL;
            END;

        END IF;
 END IF;

  DELETE FROM FINCOSTTAG
   WHERE  ENTCODE IN ( OLD.RTCODE::varchar ,NEW.RTCODE::varchar)
   AND    ENTTYPE = V_ENTTYPE_POST
   AND    coalesce(DAMOUNT, 0) = 0
   AND    coalesce(CAMOUNT, 0) = 0;

   DELETE FROM FINPOST
   WHERE  ENTCODE IN ( OLD.RTCODE::varchar ,NEW.RTCODE::varchar)
   AND    ENTTYPE = V_ENTTYPE_POST
   AND    coalesce(DAMOUNT, 0) = 0
   AND    coalesce(CAMOUNT, 0) = 0;


  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
"""
  returnType = trigger
  arguments = [
  ]
  language = plpgsql
}

