function "main"."trigger_fct_t_salinvchg()" {
  text = """

DECLARE
    ora2pg_rowcount integer;
V_INVNO                     SALINVMAIN.INVNO%TYPE;
    V_INVDT                     SALINVMAIN.INVDT%TYPE;
    V_YCODE                     SALINVMAIN.YCODE%TYPE;
    V_DOCNO                     SALINVMAIN.DOCNO%TYPE;
    V_DUEDT                     SALINVMAIN.DUEDT%TYPE;
    V_SCHEME_DOCNO              SALINVMAIN.SCHEME_DOCNO%TYPE;
    V_POSTCODE                  FINPOST.POSTCODE%TYPE;
    V_CCCODE                    FINCOSTTAG.CODE%TYPE;
    V_ADMSITE_CODE_OWNER        SALINVMAIN.ADMSITE_CODE_OWNER%TYPE;
    -- start REV : 100
    V_ADMOU_CODE_OWNER          SALINVMAIN.ADMOU_CODE%TYPE;
    -- end rev : 100
    V_CNT                       bigint;
    V_SALETYPE                  char(1) := NULL;
BEGIN
  BEGIN
    /*******************************************************************************************************************
      NO.          DATE          AUTHOR                   DESCRIPTION
      ---------    ----------    ----------------------   ---------------------------------------------------------
      REV : 001    18/09/2008    RANJIT                   (BUG ID : 784) Doc date and Due date is not getting
                                                                       saved in FINPOST for charge entries
      REV : 002    12/12/2009    SUJOY                    (BUG ID : 1641) Sales Invoice posting is not getting
                                                                        updated correctly in case of change in customer
                                                                        and delivery slip.
      REV : 003    16/12/2009    RAJKUMAR                 (BUG ID : 1120) Add SLCODE, CHGCODE in FINPOST upsert
      REV : 004    28/07/2010    RAJKUMAR                 (BUG ID : 2049) Add NVL check for Rate in FINPOST upsert
      REV : 005    01/02/2012    DIPTIMAN                 (BUG ID : 216)  Site related enhancement.
      REV : 006    13/06/2014    MOUSUMI                  (BUG ID : 1047)  Cost Center Ref Admsite code added
      REV : 100    10/04/2017    MOUSUMI                  (BUG ID : 26844) Multiou
      REV : 101    15/06/2017    ANINDYA                  (TFS ID : 29634) GST Related changes.
      REV : 102    19/06/2017    MANASH                   (TFS ID : 29634) GST Related changes.
      REV : 103    06/07/2017    DIPTIMAN                 (TFS ID : 30860) Invalid number related changes.
      REV : 104    18/09/2017     MOUSUMI             (TFS ID: 33151) CTC TYPE ADDED
 *********************************************************************************************************************/
 -- START REV : 104
 BEGIN
 SELECT SALETYPE
 INTO STRICT   V_SALETYPE
 FROM   SALINVMAIN
 WHERE  INVCODE = coalesce(OLD.INVCODE,NEW.INVCODE);
 EXCEPTION WHEN no_data_found THEN
 NULL;
 END;
 -- END REV : 104
   IF OLD.INVCODE IS NOT NULL THEN
      --START REV : 001  NEW COLUMN ADDED REV : 002 v_scheme_docno IS ADDED
      SELECT INVNO
            ,INVDT
            ,YCODE
            ,DOCNO
            ,DUEDT
            ,SCHEME_DOCNO
            ,ADMSITE_CODE_OWNER
      INTO STRICT   V_INVNO
            ,V_INVDT
            ,V_YCODE
            ,V_DOCNO
            ,V_DUEDT
            ,V_SCHEME_DOCNO
            ,V_ADMSITE_CODE_OWNER
      FROM   SALINVMAIN
      WHERE  INVCODE = OLD.INVCODE;

      IF coalesce(OLD.CHGAMT, 0) < 0 THEN
         UPDATE FINPOST
         SET    ENTNO = V_INVNO::varchar
               ,ENTDT = V_INVDT
               ,DOCNO = V_DOCNO
               ,DUEDT = V_DUEDT
               ,SCHEME_DOCNO = V_SCHEME_DOCNO
               ,DAMOUNT = coalesce(DAMOUNT, 0) + coalesce(OLD.CHGAMT, 0)
               ,CAMOUNT = 0
         WHERE  ENTCODE = OLD.INVCODE::varchar
         -- START REV : 104
         --AND    ENTTYPE = 'SIC'
         AND    ENTTYPE IN ('CTC', 'SIC')
         -- END REV : 104
         AND    GLCODE = OLD.GLCODE
         AND    CHGCODE = OLD.SALCHGCODE
         AND    coalesce(CHGRATE, 0) = coalesce(OLD.RATE, 0)
         AND    coalesce(SLCODE, 0) = coalesce(OLD.SLCODE, 0)
         AND    coalesce(DAMOUNT, 0) > 0;
      ELSIF coalesce(OLD.CHGAMT, 0) > 0 THEN
         UPDATE FINPOST
         SET    ENTNO = V_INVNO::varchar
               ,ENTDT = V_INVDT
               ,DOCNO = V_DOCNO
               ,DUEDT = V_DUEDT
               ,SCHEME_DOCNO = V_SCHEME_DOCNO
               ,DAMOUNT = 0
               ,CAMOUNT = coalesce(CAMOUNT, 0) - coalesce(OLD.CHGAMT, 0)
         WHERE  ENTCODE = OLD.INVCODE::varchar
         -- START REV : 104
         --AND    ENTTYPE = 'SIC'
         AND    ENTTYPE IN ('CTC', 'SIC')
         -- END REV : 104
         AND    GLCODE = OLD.GLCODE
         AND    CHGCODE = OLD.SALCHGCODE
         AND    coalesce(CHGRATE, 0) = coalesce(OLD.RATE, 0)
         AND    coalesce(SLCODE, 0) = coalesce(OLD.SLCODE, 0)
         AND    coalesce(CAMOUNT, 0) > 0;
      END IF;
   END IF;

   IF NEW.INVCODE IS NOT NULL THEN
      SELECT INVNO
            ,INVDT
            ,YCODE
            ,DOCNO
            ,DUEDT
            ,SCHEME_DOCNO
            ,ADMSITE_CODE_OWNER
      INTO STRICT   V_INVNO
            ,V_INVDT
            ,V_YCODE
            ,V_DOCNO
            ,V_DUEDT
            ,V_SCHEME_DOCNO
            ,V_ADMSITE_CODE_OWNER
      FROM   SALINVMAIN
      WHERE  INVCODE = NEW.INVCODE;

    -- START REV : 100
    BEGIN
           SELECT ADMOU_CODE
           INTO STRICT   V_ADMOU_CODE_OWNER
           FROM   ADMSITE
           WHERE  CODE = V_ADMSITE_CODE_OWNER;
    EXCEPTION WHEN no_data_found THEN
     NULL;
    END;
    -- END REV : 100
      IF coalesce(NEW.CHGAMT, 0) < 0 THEN
         UPDATE FINPOST
         SET    ENTNO = V_INVNO::varchar
               ,ENTDT = V_INVDT
               ,DOCNO = V_DOCNO
               ,DUEDT = V_DUEDT
               ,SCHEME_DOCNO = V_SCHEME_DOCNO
               ,DAMOUNT = coalesce(DAMOUNT, 0) - coalesce(NEW.CHGAMT, 0)
               ,CAMOUNT = 0
         -- START REV : 103
         -- WHERE  ENTCODE = :NEW.INVCODE
         WHERE  ENTCODE = NEW.INVCODE::varchar
         -- END REV : 103
         -- START REV : 104
         --AND    ENTTYPE = 'SIC'
         AND    ENTTYPE IN ('CTC', 'SIC')
         -- END REV : 104
         AND    GLCODE = NEW.GLCODE
         AND    CHGCODE = NEW.SALCHGCODE
         AND    coalesce(CHGRATE, 0) = coalesce(NEW.RATE, 0)
         AND    coalesce(SLCODE, 0) = coalesce(NEW.SLCODE, 0)
         AND    coalesce(DAMOUNT, 0) > 0;

         GET DIAGNOSTICS ora2pg_rowcount = ROW_COUNT;
IF ora2pg_rowcount = 0 THEN
            INSERT INTO FINPOST(POSTCODE, ENTCODE, ENTNO, ENTDT, DOCNO, DUEDT, ENTTYPE
                        ,GLCODE, SLCODE, DAMOUNT, CAMOUNT, YCODE
                        ,SCHEME_DOCNO, CHGCODE, CHGRATE
                        ,ADMSITE_CODE_OWNER,
                        -- start rev : 100
                        ADMOU_CODE
                        -- end rev : 100
                        )
            -- START REV : 103
            -- VALUES      (ERP01.NEXTVAL, :NEW.INVCODE, V_INVNO, V_INVDT, V_DOCNO, V_DUEDT, 'SIC'
            VALUES (nextval('erp01'), NEW.INVCODE::varchar, V_INVNO::varchar, V_INVDT, V_DOCNO, V_DUEDT
                        -- START REV : 104
                        ,CASE WHEN V_SALETYPE='C' THEN 'CTC'  ELSE 'SIC' END
                       -- ,'SIC'
                        -- END REV : 104
            -- END REV : 103
                        ,NEW.GLCODE, NEW.SLCODE, -coalesce(NEW.CHGAMT, 0), 0, V_YCODE
                        ,V_SCHEME_DOCNO, NEW.SALCHGCODE, NEW.RATE
                        ,V_ADMSITE_CODE_OWNER,
                        -- start rev : 100
                        V_ADMOU_CODE_OWNER
                        -- end rev : 100
                        );
         END IF;

         V_POSTCODE := NULL;
         V_CCCODE   := NULL;

         BEGIN
            SELECT POSTCODE
            INTO STRICT   V_POSTCODE
            FROM   FINPOST
            WHERE  ENTCODE = coalesce(NEW.INVCODE,OLD.INVCODE)::varchar
             -- START REV : 104
             --AND    ENTTYPE = 'SIC'
             AND    ENTTYPE IN ('CTC', 'SIC')
             -- END REV : 104
            AND    GLCODE = coalesce(NEW.GLCODE,OLD.GLCODE)
            AND    CHGCODE = coalesce(NEW.SALCHGCODE,OLD.SALCHGCODE)
            AND    coalesce(CHGRATE, 0) = coalesce(coalesce(NEW.RATE,OLD.RATE), 0)
            AND    coalesce(SLCODE, 0) = coalesce(coalesce(NEW.SLCODE,OLD.SLCODE), 0)
            AND    coalesce(DAMOUNT, 0) = ABS(coalesce(NEW.CHGAMT,OLD.CHGAMT))
            AND    YCODE = V_YCODE;
         EXCEPTION
            WHEN no_data_found THEN NULL;
         END;

         DELETE    FROM FINCOSTTAG
         WHERE     ENTCODE = OLD.INVCODE::varchar
         -- START REV : 104
         --AND    ENTTYPE = 'SIC'
         AND    ENTTYPE IN ('CTC', 'SIC')
         -- END REV : 104
         AND       coalesce(DAMOUNT, 0) = ABS(OLD.CHGAMT)
         AND       YCODE = V_YCODE
         -- start rev : 102
         AND        POSTCODE = V_POSTCODE
         -- end rev : 102
         RETURNING CODE
         INTO      V_CCCODE;

         IF V_POSTCODE IS NOT NULL AND NEW.GL_CC_APPL = 'Y' THEN
            INSERT INTO FINCOSTTAG(ENTCODE, ENTNO, ENTDT, ENTTYPE
                        ,GLCODE, SLCODE, COSTCODE, DAMOUNT, CAMOUNT, YCODE
                        ,CODE, POSTCODE, ADMSITE_CODE
                        ,REF_ADMSITE_CODE
                        -- start rev : 100
                        ,ADMOU_CODE
                        -- end rev : 100
                        )
            VALUES (NEW.INVCODE::varchar, V_INVNO::varchar, V_INVDT
                        -- START REV : 104
                        ,CASE WHEN V_SALETYPE='C' THEN 'CTC'  ELSE 'SIC' END
                       -- ,'SIC'
                        -- END REV : 104
                        ,NEW.GLCODE, NEW.SLCODE, NULL, ABS(coalesce(NEW.CHGAMT, 0)), 0, V_YCODE
                        ,V_CCCODE, V_POSTCODE, V_ADMSITE_CODE_OWNER
                        ,V_ADMSITE_CODE_OWNER
                        -- start rev : 100
                        ,V_ADMOU_CODE_OWNER
                        -- end rev : 100
                        );
         END IF;

      ELSIF coalesce(NEW.CHGAMT, 0) > 0 THEN
         UPDATE FINPOST
         SET    ENTNO = V_INVNO::varchar
               ,ENTDT = V_INVDT
               ,DOCNO = V_DOCNO
               ,DUEDT = V_DUEDT
               ,SCHEME_DOCNO = V_SCHEME_DOCNO
               ,DAMOUNT = 0
               ,CAMOUNT = coalesce(CAMOUNT, 0) + coalesce(NEW.CHGAMT, 0)
         -- START REV : 103
         -- WHERE  ENTCODE = :NEW.INVCODE
         WHERE  ENTCODE = NEW.INVCODE::varchar
         -- END REV : 103
         -- START REV : 104
         --AND    ENTTYPE = 'SIC'
         AND    ENTTYPE IN ('CTC', 'SIC')
         -- END REV : 104
         AND    GLCODE = NEW.GLCODE
         AND    CHGCODE = NEW.SALCHGCODE
         AND    coalesce(CHGRATE, 0) = coalesce(NEW.RATE, 0)
         AND    coalesce(SLCODE, 0) = coalesce(NEW.SLCODE, 0)
         AND    coalesce(CAMOUNT, 0) > 0;

         GET DIAGNOSTICS ora2pg_rowcount = ROW_COUNT;
IF ora2pg_rowcount = 0 THEN
            INSERT INTO FINPOST(POSTCODE, ENTCODE, ENTNO, ENTDT, DOCNO, DUEDT, ENTTYPE
                        ,GLCODE, SLCODE, DAMOUNT, CAMOUNT, YCODE
                        ,SCHEME_DOCNO, CHGCODE, CHGRATE
                        ,ADMSITE_CODE_OWNER,
                        -- start rev : 100
                        ADMOU_CODE
                        -- end rev : 100
                        )
            -- START REV : 103
            -- VALUES      (ERP01.NEXTVAL, :NEW.INVCODE, V_INVNO, V_INVDT, V_DOCNO, V_DUEDT, 'SIC'
            VALUES (nextval('erp01'), NEW.INVCODE::varchar, V_INVNO::varchar, V_INVDT, V_DOCNO, V_DUEDT
                        -- START REV : 104
                        ,CASE WHEN V_SALETYPE='C' THEN 'CTC'  ELSE 'SIC' END
                       -- ,'SIC'
                        -- END REV : 104
            -- START REV : 103
                        ,NEW.GLCODE, NEW.SLCODE, 0, coalesce(NEW.CHGAMT, 0), V_YCODE
                        ,V_SCHEME_DOCNO, NEW.SALCHGCODE, NEW.RATE
                        ,V_ADMSITE_CODE_OWNER,
                        -- start rev : 100
                        V_ADMOU_CODE_OWNER
                        -- end rev : 100
                        );
         END IF;

         V_POSTCODE := NULL;
         V_CCCODE   := NULL;

         BEGIN
            SELECT POSTCODE
            INTO STRICT   V_POSTCODE
            FROM   FINPOST

            WHERE  ENTCODE = coalesce(NEW.INVCODE,OLD.INVCODE)::varchar
         -- START REV : 104
         --AND    ENTTYPE = 'SIC'
         AND    ENTTYPE IN ('CTC', 'SIC')
         -- END REV : 104
            AND    GLCODE = coalesce(NEW.GLCODE,OLD.GLCODE)
            AND    CHGCODE = coalesce(NEW.SALCHGCODE,OLD.SALCHGCODE)
            AND    coalesce(CHGRATE, 0) = coalesce(coalesce(NEW.RATE,OLD.RATE), 0)
            AND    coalesce(SLCODE, 0) = coalesce(coalesce(NEW.SLCODE,OLD.SLCODE), 0)
            AND    coalesce(CAMOUNT, 0) = coalesce(NEW.CHGAMT,OLD.CHGAMT)
            -- END REV : 101
            AND    YCODE = V_YCODE;
         EXCEPTION
            WHEN no_data_found THEN NULL;
         END;

         DELETE    FROM FINCOSTTAG
         WHERE     ENTCODE = OLD.INVCODE::varchar
         -- START REV : 104
         --AND    ENTTYPE = 'SIC'
         AND    ENTTYPE IN ('CTC', 'SIC')
         -- END REV : 104
         AND       coalesce(CAMOUNT, 0) > 0
         AND       GLCODE = OLD.GLCODE
         AND       coalesce(SLCODE, 0) = coalesce(OLD.SLCODE, 0)
         AND       coalesce(CAMOUNT, 0) = OLD.CHGAMT
         AND       YCODE = V_YCODE
         -- start rev : 100
         AND       POSTCODE = V_POSTCODE
         -- end rev : 100
         RETURNING CODE
         INTO      V_CCCODE;

         IF V_POSTCODE IS NOT NULL AND NEW.GL_CC_APPL = 'Y' THEN
            INSERT INTO FINCOSTTAG(ENTCODE, ENTNO, ENTDT, ENTTYPE
                        ,GLCODE, SLCODE, COSTCODE, DAMOUNT, CAMOUNT, YCODE
                        ,CODE, POSTCODE, ADMSITE_CODE
                        ,REF_ADMSITE_CODE
                        -- start rev : 100
                        ,ADMOU_CODE
                        -- end rev : 100
                        )
            VALUES (NEW.INVCODE::varchar, V_INVNO::varchar, V_INVDT
                        -- START REV : 104
                        ,CASE WHEN V_SALETYPE='C' THEN 'CTC'  ELSE 'SIC' END
                       -- ,'SIC'
                        -- END REV : 104
                        ,NEW.GLCODE, NEW.SLCODE, NULL, 0, coalesce(NEW.CHGAMT, 0), V_YCODE
                        ,V_CCCODE, V_POSTCODE, V_ADMSITE_CODE_OWNER
                        ,V_ADMSITE_CODE_OWNER
                        -- start rev : 100
                        ,V_ADMOU_CODE_OWNER
                        -- end rev : 100
                        );
         END IF;
      END IF;
   END IF;

   IF  TG_OP = 'DELETE' THEN
       DELETE FROM FINCOSTTAG
       WHERE  POSTCODE IN (
                           SELECT POSTCODE
                           FROM   FINPOST
                           WHERE  ENTCODE = OLD.INVCODE::varchar
                         -- START REV : 104
                         --AND    ENTTYPE = 'SIC'
                         AND    ENTTYPE IN ('CTC', 'SIC')
                         -- END REV : 104
                         );
   END IF;

   DELETE FROM FINCOSTTAG
   WHERE  POSTCODE IN (
                       SELECT POSTCODE
                       FROM   FINPOST
                       WHERE  ENTCODE = OLD.INVCODE::varchar
                     -- START REV : 104
                     --AND    ENTTYPE = 'SIC'
                     AND    ENTTYPE IN ('CTC', 'SIC')
                     -- END REV : 104
                       AND    coalesce(DAMOUNT, 0) = 0
                       AND    coalesce(CAMOUNT, 0) = 0);

   DELETE FROM FINPOST
   WHERE  ENTCODE = OLD.INVCODE::varchar
   AND    ENTTYPE IN ('SIC','CTC')
   AND    coalesce(DAMOUNT, 0) = 0
   AND    coalesce(CAMOUNT, 0) = 0;
  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
"""
  returnType = trigger
  arguments = [
  ]
  language = plpgsql
}

