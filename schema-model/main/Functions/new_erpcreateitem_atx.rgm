function "main"."new_erpcreateitem_atx(bigint, text, bigint, text, text, bigint, bigint, bigint, bigint, bigint, bigint, text, text, text, text, text, text, bigint, text, text, bigint, bigint, timestamp without time zone, text, text, timestamp without time zone, timestamp without time zone, timestamp without time zone, text, text, text, text, text, text, text, text, text, timestamp without time zone, text, text, text, text, text, text, bigint, bigint, bigint, bigint, text, text, text, text, text, text, text, text, text, text, text, text, text, text, text, text, text, text, text, text, text, text, bigint, bigint, bigint, bigint, text, text, text, text, text, numeric, text)" {
  text = """

DECLARE

   dcmpcode                 bigint;
   dicode                   varchar(9);
   dcname1                  varchar(1000);
   dccode1                  bigint;
   dcname2                  varchar(1000);
   dccode2                  bigint;
   dcname3                  varchar(1000);
   dccode3                  bigint;
   dcname4                  varchar(1000);
   dccode4                  bigint;
   dcname5                  varchar(1000);
   dccode5                  bigint;
   dcname6                  varchar(1000);
   dccode6                  bigint;
   ditemprefix              char(3);
   dsupplierappl            char(1);
   dpartycode               bigint;
   dpartyname               varchar(1000);
   dpartyalias              varchar(100);
   dunitname                varchar(100);
   dgrpcode                 bigint;
   darticlecode             bigint;
   dtaxcode                 bigint;
   dbarunit                 double precision;
   dautoqtypopup            char(1);
   dbarser                  char(1);
   dcostrate                double precision;
   dmrp                     double precision;
   dgrccode                 bigint;
   doldicode                varchar(9);
   dbarcode                 varchar(50);
   dlistedmrp               double precision;
   dwsp                     double precision;
   dexpirydate              timestamp;
   dshrtname                varchar(25);
   dageingappl              char(1);
   dagedate                 timestamp;
   dagedtfr                 timestamp;
   dagedtto                 timestamp;
   dpos_multiprice_action   char(1);
   dnoninventory            char(1);
   ddesc1                   varchar(500);
   ddesc2                   varchar(500);
   ddesc3                   varchar(500);
   cursor1                  integer;
   cursor2                  integer;
   counter_item1            bigint;
   dstockindate             timestamp;
   dconsiderasfree          char(1);
   rows_processed           integer;
   tinvitem                 varchar(100);
   tfinsl                   varchar(100);
   tinvgrp                  char(100);
   dismetal                 char(1);
   dgenerated               timestamp;
   errcode                  varchar(50);
   errmsg                   varchar(2000);
   return_string            varchar(1000);
   testmsg                  varchar(4000);
   v_date                   varchar(20);
   v_gendt                  varchar(20);
   sqltext                  varchar(4000);
   v_item_status            char(1) := 'N';
   v_material_type          char(1);
   v_routecode              bigint;
   v_cnt                    integer;v_show_param_val         char(1) := 'Y';
   v_invhsnsacmain_code     bigint;
   dglcode                  bigint;
   dslcode                  bigint;
   dgst_itc_appl            INVITEM.gst_itc_appl%TYPE;
   ditem_management_mode        INVITEM.item_management_mode%TYPE;
   dprice_management            INVITEM.price_management%TYPE;
   dmanage_expiry               INVITEM.manage_expiry%TYPE;
   dvalidity_mode               INVITEM.validity_mode%TYPE;
   dvalidity_period             INVITEM.validity_period%TYPE;
   dpos_batch_selection_mode    INVITEM.pos_batch_selection_mode%TYPE;
   -- END REV : 014
   v_string_len             bigint;
/**********************************************************************************************************************************
   REV : 001   23/11/2015    MOUSUMI     (TFS ID : 13223) Apostropy Sign in CATEGORY NAME >> CCODE is not updating in Invitem
   REV : 002   05/10/2016    DIPTIMAN    (TFS ID : 20314) Price change limit related changes.
   REV : 003   27/12/2016    DIPTIMAN    (TFS ID : 22371) Negative stock alert, material type added in arguments.
   REV : 004   11/02/2017    DIPTIMAN    (TFS ID : 23280) UDF added.
   REV : 005   25/05/2017    DIPTIMAN    (TFS ID : 28796) GST master related changes.
   REV : 006   23/06/2017    DIPTIMAN    (TFS ID : 30397) Charge tax extra parameter added.
   REV : 007   23-02-2018    MOUSUMI      (TFS ID: 37820)    Non-trading flow - Purchase/Sale/Transfer
   REV : 008   22-01-2018    DIPTIMAN    (TFS ID : 33196) [Procurement - Goods Receive Challan] Export to excel from Grid
   REV : 009   22-02-2020    DIPTIMAN    (TFS ID : 33271) Problem in Category modification through Import Excel.
   REV : 010   24-08-2020    DIPTIMAN    (TFS ID : 83560) Duplicate item creating for same item combination AND stockindate geting updated on creation.
   REV : 011   30/10/2020    PRASANTA    (TFS ID : 94413) Category name is showing different in Category master and Item master 
                                                         (Purposefully created by BA and to sort the size in ascending order.
   REV : 012   11/08/2021    PRASANTA    (MANTIS ID : 1102) Category 6 value is showing different  in item view page.                                                         
   REV : 013   17/08/2022    ANINDYA     (MANTIS ID : XXXX)   New item to be created against new HSN.
   REV : 014   21/OCT/2022   MANASH      (DEVOPS ID : 10418)  If new item is creating from import excel, though in excel Standard Rate is null 
                                                              but after import in DB it is showing as 0.
   REV : 015   21/02/2022    SIDDHARTHA  (TFS ID : XXXXX)   Batch Serial Related Changes
   REV : 016   09/03/2023    PRASANTA    (Devops Id : 12847) New item is not getting created from PO (Ginesys Import) Code verified by Siddhartha 
   REV : 017   19/09/2023    PRADIPTA    (Devops Id : 33323) Desc field value to be inserted as case defined in excel
***********************************************************************************************************************************/
BEGIN
   IF v_show_param_val = 'Y'
   THEN
      CALL erraudit(
         'v',
         'v',
         'v',
            'argcmpcode='
         || argcmpcode::text
         || ','
         || CHR(10)
         || 'argitemprefix='
         || argitemprefix
         || ','
         || CHR(10)
         || 'argpartycode='
         || argpartycode::text
         || ','
         || CHR(10)
         || 'argpartyname='
         || argpartyname
         || ','
         || CHR(10)
         || 'argunitname='
         || argunitname
         || ','
         || CHR(10)
         || 'arggrpcode='
         || arggrpcode::text
         || ','
         || CHR(10)
         || 'argarticlecode='
         || argarticlecode::text
         || ','
         || CHR(10)
         || 'argtaxcode='
         || argtaxcode::text
         || ','
         || CHR(10)
         || 'argbarunit='
         || argbarunit::text
         || ','
         || CHR(10)
         || 'argcostrate='
         || argcostrate::text
         || ','
         || CHR(10)
         || 'argmrp='
         || argmrp::text
         || ','
         || CHR(10)
         || 'argcname1='
         || argcname1
         || ','
         || CHR(10)
         || 'argcname2='
         || argcname2
         || ','
         || CHR(10)
         || 'argcname3='
         || argcname3
         || ','
         || CHR(10)
         || 'argcname4='
         || argcname4
         || ','
         || CHR(10)
         || 'argcname5='
         || argcname5
         || ','
         || CHR(10)
         || 'argcname6='
         || argcname6
         || ','
         || CHR(10)
         || 'arggrccode='
         || arggrccode::text
         || ','
         || CHR(10)
         || 'argicode='
         || argicode
         || ','
         || CHR(10)
         || 'argbarcode'
         || argbarcode
         || ','
         || CHR(10)
         || 'arglistedmrp='
         || arglistedmrp::text
         || ','
         || CHR(10)
         || 'argwsp='
         || argwsp::text
         || ','
         || CHR(10)
         || 'argexpirydate='
         || argexpirydate
         || ','
         || CHR(10)
         || 'argshrtname='
         || argshrtname
         || ','
         || CHR(10)
         || 'argageingappl='
         || argageingappl
         || ','
         || CHR(10)
         || 'argagedate='
         || argagedate
         || ','
         || CHR(10)
         || 'argagedtfr='
         || argagedtfr
         || ','
         || CHR(10)
         || 'argagedtto='
         || argagedtto
         || ','
         || CHR(10)
         || 'argconsiderasfree='
         || argconsiderasfree
         || ','
         || CHR(10)
         || 'argwhetherconsignment='
         || argwhetherconsignment
         || ','
         || CHR(10)
         || 'argavgcostingapplicable='
         || argavgcostingapplicable
         || ','
         || CHR(10)
         || 'argnoninventory='
         || argnoninventory
         || ','
         || CHR(10)
         || 'argallow_price_modification='
         || argallow_price_modification
         || ','
         || CHR(10)
         || 'argmodule_name='
         || argmodule_name
         || ','
         || CHR(10)
         || 'argautoqtypopup='
         || argautoqtypopup
         || ','
         || CHR(10)
         || 'argpos_multiprice_action='
         || argpos_multiprice_action
         || ','
         || CHR(10)
         || 'argismetal='
         || argismetal
         || ','
         || CHR(10)
         || 'arggenerated='
         || arggenerated
         || ','
         || CHR(10)
         || 'argdesc1='
         || argdesc1
         || ','
         || CHR(10)
         || 'argdesc2='
         || argdesc2
         || ','
         || CHR(10)
         || 'argdesc3='
         || argdesc3
         || ','
         || CHR(10)
         || 'argdesc4='
         || argdesc4
         || ','
         || CHR(10)
         || 'argdesc5='
         || argdesc5
         || ','
         || CHR(10)
         || 'argdesc6'
         || argdesc6
         || ','
         || CHR(10)
         || 'argnum1='
         || argnum1::text
         || ','
         || CHR(10)
         || 'argnum2='
         || argnum2::text
         || ','
         || CHR(10)
         || 'argnum3='
         || argnum3::text
         || ','
         || CHR(10)
         || 'argprice_change_limit='
         || argprice_change_limit::text
         || ','
         || CHR(10)
         || 'argnegative_stock_alert='
         || argnegative_stock_alert
         || ','
         || CHR(10)
         || 'argmaterial_type='
         || argmaterial_type
         || ','
         || CHR(10)
         || 'argGLCODE='
         || argGLCODE::text
         || ','
         || CHR(10)
         || 'argSLCODE='
         || argSLCODE::text
         || ','
         || CHR(10)
         || 'argGST_ITC_APPL='
         || argGST_ITC_APPL
         || ','
         || CHR(10)
         || 'arg_item_management_mode='
         || arg_item_management_mode
         || ','
         || CHR(10)
         || 'arg_price_management='
         || arg_price_management
         || ','
         || CHR(10)
         || 'arg_manage_expiry='
         || arg_manage_expiry
         || ','
         || CHR(10)
         || 'arg_validity_mode='
         || arg_validity_mode
         || ','
         || CHR(10)
         || 'arg_validity_period='
         || arg_validity_period::text
         || ','
         || CHR(10)
         || 'arg_pos_batch_selection_mode='
         || arg_pos_batch_selection_mode
         );
   END IF;
   --=====================ASSIGNING VALUES TO VARIABLES=======================
   dcmpcode := argcmpcode;
   dcname1 := argcname1;
   dcname2 := argcname2;
   dcname3 := argcname3;
   dcname4 := argcname4;
   dcname5 := argcname5;
   dcname6 := argcname6;
   dgrccode := arggrccode;
   ditemprefix := argitemprefix;
   dpartycode := argpartycode;
   dpartyname := REPLACE(argpartyname, '''', '''''');
   dautoqtypopup := coalesce(LTRIM(RTRIM(argautoqtypopup)), 'N');
   ditem_management_mode :=arg_item_management_mode;
   dprice_management := arg_price_management;
   dmanage_expiry := arg_manage_expiry;
   dvalidity_mode := arg_validity_mode;
   dvalidity_period := arg_validity_period;
   dpos_batch_selection_mode := arg_pos_batch_selection_mode;
   -- select party alias from finsl *********************************************
   IF argpartycode IS NOT NULL
   THEN
      SELECT abbre
        INTO STRICT dpartyalias
        FROM finsl
       WHERE slcode = argpartycode;
   END IF;
   SELECT supplier_appl, coalesce(arginvhsnsacmain_code, invhsnsacmain_code)
     INTO STRICT dsupplierappl, v_invhsnsacmain_code
     FROM invgrp
    WHERE grpcode = arggrpcode;
   dpartyalias := REPLACE(dpartyalias, '''', '''''');
   dunitname := argunitname;
   dgrpcode := arggrpcode;
   darticlecode := argarticlecode;
   dtaxcode := argtaxcode;
   dbarunit := argbarunit;
   dcostrate := argcostrate;
   dmrp := round((coalesce(argmrp, 0))::numeric, 3);
   doldicode := argicode;
   dbarcode := argbarcode;
   dlistedmrp := round((coalesce(arglistedmrp, 0))::numeric, 3);
   dwsp := round((coalesce(argwsp, 0))::numeric, 3);
   dexpirydate := argexpirydate;
   dshrtname := REPLACE(argshrtname, '''', '''''');
   dageingappl := argageingappl;
   dagedate := argagedate;
   dagedtfr := argagedtfr;
   dagedtto := argagedtto;
   dconsiderasfree := argconsiderasfree;
   v_date := TO_CHAR(clock_timestamp(), 'YYYY-MM-DD HH24:MI:SS');
   dgenerated := arggenerated;
   dglcode := argglcode;
   dslcode := argslcode;
   dgst_itc_appl := arggst_itc_appl;
   IF argmodule_name = 'S'
   THEN
      v_gendt := TO_CHAR(dgenerated, 'YYYY-MM-DD HH24:MI:SS');
   ELSE
      v_gendt := TO_CHAR(clock_timestamp(), 'YYYY-MM-DD HH24:MI:SS');
   END IF;
   dpos_multiprice_action := argpos_multiprice_action;
   dnoninventory := argnoninventory;
   dismetal := argismetal;
   ddesc1 := UPPER(argdesc1);
   ddesc2 := UPPER(argdesc2);
   ddesc3 := UPPER(argdesc3);
   return_string :=
      erpcheckcategory(dcname1,
                        dcname2,
                        dcname3,
                        dcname4,
                        dcname5,
                        dcname6);
   select length(return_string) into STRICT v_string_len;
   dccode1 :=
      NULLIF(LTRIM(RTRIM(SUBSTR(LPAD(return_string, 72), 1, 12))),'')::bigint;
   dccode2 :=
      NULLIF(LTRIM(RTRIM(SUBSTR(LPAD(return_string, 72), 13, 12))),'')::bigint;
   dccode3 :=
      NULLIF(LTRIM(RTRIM(SUBSTR(LPAD(return_string, 72), 25, 12))),'')::bigint;
   dccode4 :=
      NULLIF(LTRIM(RTRIM(SUBSTR(LPAD(return_string, 72), 37, 12))),'')::bigint;
   dccode5 :=
      NULLIF(LTRIM(RTRIM(SUBSTR(LPAD(return_string, 72), 49, 12))),'')::bigint;
   dccode6 :=
      NULLIF(LTRIM(RTRIM(SUBSTR(LPAD(return_string, 72), 61, 12))),'')::bigint;
   dcname1 :=
      NULLIF(RTRIM(SUBSTR(RPAD(return_string, 600), 73, 100)),'');
   dcname2 :=
      NULLIF(RTRIM(SUBSTR(RPAD(return_string, 600), 173, 100)),'');
   dcname3 :=
      NULLIF(RTRIM(SUBSTR(RPAD(return_string, 600), 273, 100)),'');
   dcname4 :=
      NULLIF(RTRIM(SUBSTR(RPAD(return_string, 600), 373, 100)),'');
   dcname5 :=
      NULLIF(RTRIM(SUBSTR(RPAD(return_string, 600), 473, 100)),'');
   dcname6 :=
      NULLIF(RTRIM(SUBSTR(RPAD(return_string, 673), 573, 100)),'');
   --===================================================================================
   <<last_return>>
   BEGIN
      <<createnewitem>>
	  BEGIN
		   IF argbarcode IS NOT NULL
		   THEN                                            -- THIS MEANS THIS IS A UPC
			  BEGIN
				 SELECT icode, stockindate
				   INTO STRICT dicode, dstockindate
				   FROM invitem
				  WHERE barcode = dbarcode;
				 EXIT last_return;
			  EXCEPTION
				 WHEN no_data_found
				 THEN
					EXIT createnewitem;
			  END;
		   ELSIF argbarcode IS NULL
		   THEN                                                  -- IF IT IS NOT A UPC
			  IF argicode IS NOT NULL
			  THEN
				 BEGIN
					SELECT icode, stockindate
					  INTO STRICT dicode, dstockindate
					  FROM invitem
					 WHERE icode = doldicode;
					EXIT last_return;
				 EXCEPTION
					WHEN no_data_found
					THEN
					   EXIT createnewitem;
				 END;
			  END IF;

			  BEGIN
				 SELECT icode, stockindate
				   INTO STRICT dicode, dstockindate
				   FROM invitem
				  WHERE     coalesce(ccode1, 0) = coalesce(dccode1, 0)
						AND coalesce(ccode2, 0) = coalesce(dccode2, 0)
						AND coalesce(ccode3, 0) = coalesce(dccode3, 0)
						AND coalesce(ccode4, 0) = coalesce(dccode4, 0)
						AND coalesce(ccode5, 0) = coalesce(dccode5, 0)
						AND coalesce(ccode6, 0) = coalesce(dccode6, 0)
						AND coalesce(mrp, 0) = coalesce(dmrp, 0)
						AND coalesce(listed_mrp, 0) = coalesce(arglistedmrp, 0)
						AND coalesce(grpcode, 0) = coalesce(arggrpcode, 0)
						AND coalesce(invarticle_code, 0) = coalesce(argarticlecode, 0)
						AND coalesce(taxcode, 0) = coalesce(argtaxcode, 0)
						AND (   dsupplierappl = 'U'
							 OR coalesce(partycode, 0) = coalesce(dpartycode, 0))
						AND (   (dshrtname IS NULL AND shrtname IS NULL)
							 OR shrtname = dshrtname)
						AND coalesce(noninventory, 'N') = coalesce(argnoninventory, 'N')
						AND (dexpirydate IS NULL OR expiry_date = dexpirydate)
						AND (   (    argavgcostingapplicable = 'L'
								 AND coalesce(costrate, 0) = coalesce(dcostrate, 0))
							 OR (argavgcostingapplicable = 'A'))
						AND (   argageingappl = 'N'
							 OR (date_trunc('day', generated) BETWEEN argagedtfr AND argagedtto))
						AND coalesce(invhsnsacmain_code, 0) = coalesce(arginvhsnsacmain_code,v_invhsnsacmain_code)
						AND coalesce(UPPER(desc1), 'N') = coalesce(UPPER(ddesc1), 'N')
						AND coalesce(UPPER(desc2), 'N') = coalesce(UPPER(ddesc2), 'N')
						AND coalesce(UPPER(desc3), 'N') = coalesce(UPPER(ddesc3), 'N');
				 counter_item1 := 1;
			  EXCEPTION
				 WHEN no_data_found
				 THEN
					counter_item1 := 0;
				 WHEN too_many_rows
				 THEN
					counter_item1 := 1;
			  END;
			  IF argmodule_name = 'S'
			  THEN                                           -- THIS IS FOR SPLIT ITEM
				 EXIT createnewitem;
			  ELSE
				 IF coalesce(counter_item1, 0) = 0
				 THEN
					-- ITEM COULD NOT BE FOUND THIS MEANS YOU HAVE TO CREATE NEW ITEM
					EXIT createnewitem;
				 ELSE
					EXIT last_return;
				 END IF;
			  END IF;
		   END IF;
	  END;
	  --<<createnewitem>>
	   SELECT nextval('erpitem') INTO STRICT dicode;
	   BEGIN
		  SELECT coalesce(material_type, 'F'), routecode
			INTO STRICT v_material_type, v_routecode
			FROM invgrp
		   WHERE grpcode = arggrpcode;
	   EXCEPTION
		  WHEN no_data_found
		  THEN
			 v_material_type := 'F';
			 v_routecode := NULL;
	   END;
	   v_material_type := coalesce(argmaterial_type, v_material_type);
	   v_routecode := NULL;
	   dicode :=
		  LTRIM(RTRIM(LTRIM(RTRIM(ditemprefix)) || dicode));
	   INSERT INTO invitem(icode,
							cmpcode,
							partycode,
							partyname,
							partyalias,
							unitname,
							grpcode,
							invarticle_code,
							taxcode,
							autoqtypopup,
							barunit,
							costrate,
							mrp,
							GENERATED,
							last_changed,
							cname1,
							ccode1,
							cname2,
							ccode2,
							cname3,
							ccode3,
							cname4,
							ccode4,
							cname5,
							ccode5,
							cname6,
							ccode6,
							grccode,
							barcode,
							listed_mrp,
							wsp,
							expiry_date,
							shrtname,
							stockindate,
							ext,
							considerinorder,
							considerasfree,
							noninventory,
							allow_price_modification,
							pos_multiprice_action,
							negative_stock_alert,
							ismetal,
							material_type,
							routecode,
							desc1,
							desc2,
							desc3,
							desc4,
							desc5,
							desc6,
							num1,
							num2,
							num3,
							price_change_limit,
							udfstring01,
							udfstring02,
							udfstring03,
							udfstring04,
							udfstring05,
							udfstring06,
							udfstring07,
							udfstring08,
							udfstring09,
							udfstring10,
							udfnum01,
							udfnum02,
							udfnum03,
							udfnum04,
							udfnum05,
							udfdate01,
							udfdate02,
							udfdate03,
							udfdate04,
							udfdate05,
							invhsnsacmain_code,
							isprice_excludes_tax,
							glcode,
							slcode,
							gst_itc_appl,
							item_management_mode,
							price_management,
							manage_expiry,
							validity_mode,
							validity_period,
							pos_batch_selection_mode
							)
			VALUES (dicode,
					dcmpcode,
					dpartycode,
					dpartyname,
					dpartyalias,
					dunitname,
					dgrpcode,
					darticlecode,
					dtaxcode,
					dautoqtypopup,
					dbarunit,
					dcostrate,
					dmrp,
					TO_TIMESTAMP (v_gendt, 'YYYY-MM-DD HH24:MI:SS'),
             		TO_TIMESTAMP (v_date, 'YYYY-MM-DD HH24:MI:SS'),
					dcname1,
					dccode1,
					dcname2,
					dccode2,
					dcname3,
					dccode3,
					dcname4,
					dccode4,
					dcname5,
					dccode5,
					dcname6,
					dccode6,
					dgrccode,
					dbarcode,
					dlistedmrp,
					dwsp,
					dexpirydate,
					dshrtname,
					NULL,
					'N',
					'N',
					dconsiderasfree,
					dnoninventory,
					argallow_price_modification,
					dpos_multiprice_action,
					coalesce(argnegative_stock_alert, 'P'),
					dismetal,
					v_material_type,
					v_routecode,
					-- REV : 017
					/*UPPER(argdesc1),
					UPPER(argdesc2),
					UPPER(argdesc3),
					UPPER(argdesc4),
					UPPER(argdesc5),
					UPPER(argdesc6),*/
					argdesc1,
					argdesc2,
					argdesc3,
					argdesc4,
					argdesc5,
					argdesc6,
					-- REV : 017
					argnum1,
					argnum2,
					argnum3,
					argprice_change_limit,
					argudfstring01,
					argudfstring02,
					argudfstring03,
					argudfstring04,
					argudfstring05,
					argudfstring06,
					argudfstring07,
					argudfstring08,
					argudfstring09,
					argudfstring10,
					argudfnum01,
					argudfnum02,
					argudfnum03,
					argudfnum04,
					argudfnum05,
					TO_TIMESTAMP (argudfdate01, 'YYYY-MM-DD HH24:MI:SS'),
             		TO_TIMESTAMP (argudfdate02, 'YYYY-MM-DD HH24:MI:SS'),
             		TO_TIMESTAMP (argudfdate03, 'YYYY-MM-DD HH24:MI:SS'),
             		TO_TIMESTAMP (argudfdate04, 'YYYY-MM-DD HH24:MI:SS'),
             		TO_TIMESTAMP (argudfdate05, 'YYYY-MM-DD HH24:MI:SS'),
					coalesce(arginvhsnsacmain_code,v_invhsnsacmain_code),
					coalesce(argisprice_excludes_tax, 0),
					ARGglcode,
					ARGslcode,
					coalesce(ARGgst_itc_appl, 'IP'),
					coalesce(ditem_management_mode,'I'),
					coalesce(dprice_management,'I'), 
					coalesce(dmanage_expiry,'N'),
					coalesce(dvalidity_mode,'N'),
					dvalidity_period,   
					coalesce(dpos_batch_selection_mode,'M')
					);
	   v_item_status := 'Y';
  END;
  --<<last_return>>	   
RETURN(   LPAD(coalesce(dicode, ' '), 9, ' ')
           || LPAD(coalesce(dccode1::varchar, ' '), 12, ' ')
           || LPAD(coalesce(dccode2::varchar, ' '), 12, ' ')
           || LPAD(coalesce(dccode3::varchar, ' '), 12, ' ')
           || LPAD(coalesce(dccode4::varchar, ' '), 12, ' ')
           || LPAD(coalesce(dccode5::varchar, ' '), 12, ' ')
           || LPAD(coalesce(dccode6::varchar, ' '), 12, ' ')
           || RPAD(coalesce(dcname1, ' '), 100, ' ')
           || RPAD(coalesce(dcname2, ' '), 100, ' ')
           || RPAD(coalesce(dcname3, ' '), 100, ' ')
           || RPAD(coalesce(dcname4, ' '), 100, ' ')
           || RPAD(coalesce(dcname5, ' '), 100, ' ')
           || RPAD(coalesce(dcname6, ' '), 100, ' ')
           || v_item_status);
EXCEPTION
   WHEN OTHERS
   THEN
      errcode := SQLSTATE;
      errmsg := SQLERRM;
      CALL erraudit(USER,
                'NEW_ERPCREATEITEM',
                errcode,
                errmsg);
      RETURN(NULL);
END;
"""
  returnType = text
  arguments = <
    {
      name = argcmpcode
      type = bigint
      mode = IN
    }

    {
      name = argitemprefix
      type = text
      mode = IN
    }

    {
      name = argpartycode
      type = bigint
      mode = IN
    }

    {
      name = argpartyname
      type = text
      mode = IN
    }

    {
      name = argunitname
      type = text
      mode = IN
    }

    {
      name = arggrpcode
      type = bigint
      mode = IN
    }

    {
      name = argarticlecode
      type = bigint
      mode = IN
    }

    {
      name = argtaxcode
      type = bigint
      mode = IN
    }

    {
      name = argbarunit
      type = bigint
      mode = IN
    }

    {
      name = argcostrate
      type = bigint
      mode = IN
    }

    {
      name = argmrp
      type = bigint
      mode = IN
    }

    {
      name = argcname1
      type = text
      mode = IN
    }

    {
      name = argcname2
      type = text
      mode = IN
    }

    {
      name = argcname3
      type = text
      mode = IN
    }

    {
      name = argcname4
      type = text
      mode = IN
    }

    {
      name = argcname5
      type = text
      mode = IN
    }

    {
      name = argcname6
      type = text
      mode = IN
    }

    {
      name = arggrccode
      type = bigint
      mode = IN
    }

    {
      name = argicode
      type = text
      mode = IN
    }

    {
      name = argbarcode
      type = text
      mode = IN
    }

    {
      name = arglistedmrp
      type = bigint
      mode = IN
    }

    {
      name = argwsp
      type = bigint
      mode = IN
    }

    {
      name = argexpirydate
      type = timestamp without time zone
      mode = IN
    }

    {
      name = argshrtname
      type = text
      mode = IN
    }

    {
      name = argageingappl
      type = text
      mode = IN
    }

    {
      name = argagedate
      type = timestamp without time zone
      mode = IN
    }

    {
      name = argagedtfr
      type = timestamp without time zone
      mode = IN
    }

    {
      name = argagedtto
      type = timestamp without time zone
      mode = IN
    }

    {
      name = argconsiderasfree
      type = text
      mode = IN
    }

    {
      name = argwhetherconsignment
      type = text
      mode = IN
    }

    {
      name = argavgcostingapplicable
      type = text
      mode = IN
    }

    {
      name = argnoninventory
      type = text
      mode = IN
    }

    {
      name = argallow_price_modification
      type = text
      mode = IN
    }

    {
      name = argmodule_name
      type = text
      mode = IN
    }

    {
      name = argautoqtypopup
      type = text
      mode = IN
      default = 'N'::bpchar
    }

    {
      name = argpos_multiprice_action
      type = text
      mode = IN
      default = NULL::bpchar
    }

    {
      name = argismetal
      type = text
      mode = IN
      default = NULL::bpchar
    }

    {
      name = arggenerated
      type = timestamp without time zone
      mode = IN
      default = NULL::timestamp without time zone
    }

    {
      name = argdesc1
      type = text
      mode = IN
      default = NULL::bpchar
    }

    {
      name = argdesc2
      type = text
      mode = IN
      default = NULL::bpchar
    }

    {
      name = argdesc3
      type = text
      mode = IN
      default = NULL::bpchar
    }

    {
      name = argdesc4
      type = text
      mode = IN
      default = NULL::bpchar
    }

    {
      name = argdesc5
      type = text
      mode = IN
      default = NULL::bpchar
    }

    {
      name = argdesc6
      type = text
      mode = IN
      default = NULL::bpchar
    }

    {
      name = argnum1
      type = bigint
      mode = IN
      default = NULL::bigint
    }

    {
      name = argnum2
      type = bigint
      mode = IN
      default = NULL::bigint
    }

    {
      name = argnum3
      type = bigint
      mode = IN
      default = NULL::bigint
    }

    {
      name = argprice_change_limit
      type = bigint
      mode = IN
      default = NULL::bigint
    }

    {
      name = argnegative_stock_alert
      type = text
      mode = IN
      default = NULL::bpchar
    }

    {
      name = argmaterial_type
      type = text
      mode = IN
      default = NULL::bpchar
    }

    {
      name = argudfstring01
      type = text
      mode = IN
      default = NULL::bpchar
    }

    {
      name = argudfstring02
      type = text
      mode = IN
      default = NULL::bpchar
    }

    {
      name = argudfstring03
      type = text
      mode = IN
      default = NULL::bpchar
    }

    {
      name = argudfstring04
      type = text
      mode = IN
      default = NULL::bpchar
    }

    {
      name = argudfstring05
      type = text
      mode = IN
      default = NULL::bpchar
    }

    {
      name = argudfstring06
      type = text
      mode = IN
      default = NULL::bpchar
    }

    {
      name = argudfstring07
      type = text
      mode = IN
      default = NULL::bpchar
    }

    {
      name = argudfstring08
      type = text
      mode = IN
      default = NULL::bpchar
    }

    {
      name = argudfstring09
      type = text
      mode = IN
      default = NULL::bpchar
    }

    {
      name = argudfstring10
      type = text
      mode = IN
      default = NULL::bpchar
    }

    {
      name = argudfnum01
      type = text
      mode = IN
      default = NULL::bpchar
    }

    {
      name = argudfnum02
      type = text
      mode = IN
      default = NULL::bpchar
    }

    {
      name = argudfnum03
      type = text
      mode = IN
      default = NULL::bpchar
    }

    {
      name = argudfnum04
      type = text
      mode = IN
      default = NULL::bpchar
    }

    {
      name = argudfnum05
      type = text
      mode = IN
      default = NULL::bpchar
    }

    {
      name = argudfdate01
      type = text
      mode = IN
      default = NULL::bpchar
    }

    {
      name = argudfdate02
      type = text
      mode = IN
      default = NULL::bpchar
    }

    {
      name = argudfdate03
      type = text
      mode = IN
      default = NULL::bpchar
    }

    {
      name = argudfdate04
      type = text
      mode = IN
      default = NULL::bpchar
    }

    {
      name = argudfdate05
      type = text
      mode = IN
      default = NULL::bpchar
    }

    {
      name = arginvhsnsacmain_code
      type = bigint
      mode = IN
      default = NULL::bigint
    }

    {
      name = argisprice_excludes_tax
      type = bigint
      mode = IN
      default = NULL::bigint
    }

    {
      name = argglcode
      type = bigint
      mode = IN
      default = NULL::bigint
    }

    {
      name = argslcode
      type = bigint
      mode = IN
      default = NULL::bigint
    }

    {
      name = arggst_itc_appl
      type = text
      mode = IN
      default = NULL::bpchar
    }

    {
      name = arg_item_management_mode
      type = text
      mode = IN
      default = 'I'::bpchar
    }

    {
      name = arg_price_management
      type = text
      mode = IN
      default = 'I'::bpchar
    }

    {
      name = arg_manage_expiry
      type = text
      mode = IN
      default = 'N'::bpchar
    }

    {
      name = arg_validity_mode
      type = text
      mode = IN
      default = 'N'::bpchar
    }

    {
      name = arg_validity_period
      type = numeric
      mode = IN
      default = NULL::numeric
    }

    {
      name = arg_pos_batch_selection_mode
      type = text
      mode = IN
      default = 'M'::bpchar
    }

  >
  language = plpgsql
}

