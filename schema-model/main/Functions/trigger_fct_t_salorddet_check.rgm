function "main"."trigger_fct_t_salorddet_check()" {
  text = """

DECLARE
    V_NEW_ORDDET_QTY    double precision := 0;
BEGIN
    /*******************************************************************************************************************
      REV NO      DATE           OWNER            DESCRIPTION
      ---------   -----------    -----------      ---------------------------------------------------------------------
      REV : 000   17-JAN-2018    MOUSUMI          (Ticket ID  : 2693) ORDQTY,DQTY CHECKING
      REV : 001   08-FEB-2018    DIPTIMAN         (TFS ID : 37648) CNLQTY discard from this trigger.
    *******************************************************************************************************************/
    -- START REV : 001
    /*
    IF  :OLD.CODE IS NOT NULL THEN
        UPDATE TEMP_INVDCSO_CHECK
        SET    ORDQTY = NVL(ORDQTY,0) - NVL(:OLD.ORDQTY,0),
               CNLQTY = NVL(CNLQTY,0) - NVL(:OLD.CNLQTY,0)
        WHERE  SALORDDET_CODE = :OLD.CODE;
    END IF;

    IF  :NEW.CODE IS NOT NULL THEN
        UPDATE TEMP_INVDCSO_CHECK
        SET    ORDQTY = NVL(ORDQTY,0) + NVL(:NEW.ORDQTY,0),
               CNLQTY = NVL(CNLQTY,0) + NVL(:NEW.CNLQTY,0)
        WHERE  SALORDDET_CODE = :NEW.CODE;
    END IF;
    */
    IF  TG_OP = 'INSERT' THEN
        INSERT INTO TEMP_INVDCSO_CHECK(SALORDDET_CODE, ORDQTY)
        VALUES (NEW.CODE, NEW.ORDQTY);
    END IF;

    IF  TG_OP = 'UPDATE' THEN
        IF  OLD.CODE IS NOT NULL THEN
            UPDATE TEMP_INVDCSO_CHECK
            SET    ORDQTY = coalesce(ORDQTY,0) - coalesce(OLD.ORDQTY,0)
            WHERE  SALORDDET_CODE = OLD.CODE;
        END IF;

        IF  NEW.CODE IS NOT NULL THEN
            UPDATE TEMP_INVDCSO_CHECK
            SET    ORDQTY = coalesce(ORDQTY,0) + coalesce(NEW.ORDQTY,0)
            WHERE  SALORDDET_CODE = NEW.CODE;
        END IF;
    END IF;

    IF  TG_OP = 'DELETE' THEN
        IF  OLD.CODE IS NOT NULL THEN
            DELETE FROM TEMP_INVDCSO_CHECK
            WHERE  SALORDDET_CODE = OLD.CODE;
        END IF;
    END IF;
    -- END REV : 001
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
"""
  returnType = trigger
  arguments = [
  ]
  language = plpgsql
}

