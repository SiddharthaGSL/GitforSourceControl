function "main"."trigger_fct_t_invgrcmain()" {
  text = """

-- START REV : 012
DECLARE
   
   V_SID                        bigint;
   V_PROGRAM                    varchar(1000);
-- END REV : 012
BEGIN
  BEGIN
   /**************************************************************************************************************
   REV NO     OWNER           DATE         DESCRIPTION
   ---------  ----------      -----------  ---------------------------------------------------------------------
   REV : 001  RAJKUMAR        22-MAY-2010  (BUG ID : 1728) Logistics  Entry added.
   REV : 002  SHANKAR         29-JUL-2010  (BUG ID : 1924) Vendor Id to get saved with Vednor name in item master.
   REV : 003  RAJKUMAR        04-AUG-2010  (BUG ID : 0842) SCHEME DOC NO
   REV : 004  MANASH          17-NOV-2010  (BUG ID : 2261) Item rate, amount, and scheme doc number is not gettingF
                                                         inserted in Stock table.
   REV : 005  DIPTIMAN        06-FEB-2012  (BUG ID : 216)  Site related changes.
   REV : 006  DIPTIMAN        25-FEB-2013  (BUG ID : 502)  PSITE STOCKPOINT related changes.
   REV : 007  MOUSUMI         05-SEP-2017  (TFS ID : 31941)  PADN
   REV : 008  DIPTIMAN        20-SEP-2017  (TFS ID : 32259) Last inward rate update.
   REV : 009  SIDDHARTHA      23-JAN-2018  (TFS ID : 37305, 37307)  REVERT LOGIC MOVES FROM FRONT END TO BACK END
   REV : 010  DIPTIMAN        04-JUL-2018  (TFS ID : 41385) Last inward rate update for Manage site.
   REV : 011  ANINDYA         08-JAN-2019  (TFS ID : 6779 ) Non trading item costing related changes.
   REV : 012  ANINDYA         28-MAR-2019  (TFS ID : 4177)  GRC Web Migration related changes.
   REV : 013  MOUSUMI         02-JUN-2020                       (TFS BUG ID : MIGRATION) Will not be updated from web 
   **************************************************************************************************************/
   -- START REV : 001
   IF TG_OP = 'INSERT'
   THEN
      -- START REV : 012
      IF coalesce(NEW.ENTRY_SOURCE, 'XX') <> 'WEB'
      THEN
         -- END REV : 012
         IF NEW.LGTCODE IS NOT NULL
         THEN
            UPDATE INVLGTNOTE
               SET LGTRECQTY = coalesce(LGTRECQTY, 0) + coalesce(NEW.LGTRECQTY, 0),
                   COMPLETION_TIME =
                      CASE
                         WHEN coalesce(QTY1, 0) <> 0 AND QTY1 = LGTRECQTY
                         THEN
                            statement_timestamp()
                         ELSE
                            COMPLETION_TIME
                      END
             WHERE LGTCODE = NEW.LGTCODE;
         END IF;

         IF NEW.INVGATEIN_CODE IS NOT NULL
         THEN
            UPDATE INVGATEIN
               SET TAGQTY = coalesce(TAGQTY, 0) + coalesce(NEW.LGTRECQTY, 0)
             WHERE CODE = NEW.INVGATEIN_CODE;
         END IF;
      -- START REV : 012
      END IF;
   -- END REV : 012
   END IF;

   -- END REV : 001
   IF TG_OP = 'UPDATE'
   THEN
         -- START ISSUE : 1225
         -- START REV : 005
         -- START REV : 005
         IF coalesce(DB_FUN_GET_SITETYPE(NEW.ADMSITE_CODE_IN), '@@') <>
               'MS-CO-OM-TS'
         THEN
            -- END REV : 005
            CALL DB_PRO_UPD_ITEM_RATE('INVGRCDET',
                                  'GRCCODE',
                                  'ACRATE',
                                  'ACQTY',
                                  NEW.GRCCODE,
                                  NEW.GRCDT);
         END IF;                                                  -- REV : 005
         -- END ISSUE : 1225
         -- START REV : 011
         -- START REV : 008
         --DB_PRO_UPD_LAST_IN_RATE (:NEW.GRCCODE, 'GRC');
         CALL DB_PRO_UPD_LAST_IN_RATE(NEW.GRCCODE,
                                  'GRC',
                                  NULL,
                                  NULL,
                                  NEW.GRCDT,
                                  NULL,
                                  NULL,
                                  NEW.ADMSITE_CODE_IN,
                                  NEW.ADMOU_CODE);
      -- END REV : 008
      -- END REV : 011
      /* GENERATE GRCNO */

         -- END REV : 003
         -- START ISSUE : 1225
         IF NEW.PCODE IS NOT NULL
         THEN
            -- START REV : 002 SLID concatenated with slname
            UPDATE INVITEM MN
               SET(PARTYCODE, PARTYNAME, PARTYALIAS) =
                      (SELECT NEW.PCODE,
                              F.SLNAME || ' : ' || F.SLID,
                              F.ABBRE
                         FROM FINSL F
                        WHERE F.SLCODE = NEW.PCODE)
             WHERE MN.ICODE IN (SELECT G.ICODE
                                  FROM INVGRCDET G
                                 WHERE G.GRCCODE = NEW.GRCCODE);
         -- END REV : 002
         END IF;
      -- END ISSUE : 1225
      -- START REV : 001
      
      -- START REV : 013
	    SELECT PG_BACKEND_PID() INTO STRICT V_SID;
        SELECT APPLICATION_NAME INTO STRICT V_PROGRAM FROM PG_STAT_ACTIVITY WHERE PID=V_SID;
        
       -- END REV : 013
      IF OLD.LGTCODE IS NOT NULL
      THEN
         -- START REV : 012
         -- Considering :NEW Instead of :OLD because we are trying to restrict the
         -- execution of this dependent table update from trigger when update is done
         -- from web application even if the document was created from any other source
         -- like (Import Excel, D2K etc.)
                
         IF coalesce(NEW.ENTRY_SOURCE, 'XX') <> 'WEB'
         -- START REV : 013
          AND 
not coalesce(V_PROGRAM,'XX') ILIKE '%w3wp.exe%'
           -- END REV : 013
         THEN        
            -- END REV : 012
            UPDATE INVLGTNOTE
               SET LGTRECQTY = coalesce(LGTRECQTY, 0) - coalesce(OLD.LGTRECQTY, 0),
                   COMPLETION_TIME =
                      CASE
                         WHEN     coalesce(QTY1, 0) <> 0
                              AND QTY1 =
                                     (LGTRECQTY - coalesce(OLD.LGTRECQTY, 0))
                         THEN
                            statement_timestamp()
                         ELSE
                            NULL
                      END
             WHERE LGTCODE = OLD.LGTCODE;
         -- START REV :012
         END IF;
      -- END REV : 012
      END IF;

      IF NEW.LGTCODE IS NOT NULL
      THEN
         -- START REV : 012
         IF coalesce(NEW.ENTRY_SOURCE, 'XX') <> 'WEB'
         -- START REV : 013
          AND
not coalesce(V_PROGRAM,'XX') ILIKE '%w3wp.exe%'
           -- END REV : 013
         THEN
            -- END REV : 012
            UPDATE INVLGTNOTE
               SET LGTRECQTY = coalesce(LGTRECQTY, 0) + coalesce(NEW.LGTRECQTY, 0),
                   COMPLETION_TIME =
                      CASE
                         WHEN     coalesce(QTY1, 0) <> 0
                              AND QTY1 =
                                     (LGTRECQTY + coalesce(NEW.LGTRECQTY, 0))
                         THEN
                            statement_timestamp()
                         ELSE
                            COMPLETION_TIME
                      END
             WHERE LGTCODE = NEW.LGTCODE;
         -- START REV :012
         END IF;
      -- END REV : 012
      END IF;

      IF OLD.INVGATEIN_CODE IS NOT NULL
      THEN
         -- START REV : 012
         -- Considering :NEW Instead of :OLD because we are trying to restrict the
         -- execution of this dependent table update from trigger when update is done
         -- from web application even if the document was created from any other source
         -- like (Import Excel, D2K etc.)
         IF coalesce(OLD.ENTRY_SOURCE, 'XX') <> 'WEB'
         -- START REV : 013
          AND
not coalesce(V_PROGRAM,'XX') ILIKE '%w3wp.exe%'
           -- END REV : 013
         THEN
            -- END REV : 012
            UPDATE INVGATEIN
               SET TAGQTY = coalesce(TAGQTY, 0) - coalesce(OLD.LGTRECQTY, 0)
             WHERE CODE = OLD.INVGATEIN_CODE;
         -- START REV :012
         END IF;
      -- END REV : 012
      END IF;

      IF NEW.INVGATEIN_CODE IS NOT NULL
      THEN
         -- START REV : 012
         IF coalesce(NEW.ENTRY_SOURCE, 'XX') <> 'WEB'
         -- START REV : 013
          AND
not coalesce(V_PROGRAM,'XX') ILIKE '%w3wp.exe%'
           -- END REV : 013
         THEN
            -- END REV : 012
            UPDATE INVGATEIN
               SET TAGQTY = coalesce(TAGQTY, 0) + coalesce(NEW.LGTRECQTY, 0)
             WHERE CODE = NEW.INVGATEIN_CODE;
         -- START REV :012
         END IF;
      -- END REV : 012
      END IF;

      -- END REV : 001
      -- START REV : 006        
      -- END REV : 006
      /* STOCK AND COSTING REFLECTION */

	  <<END_UPD>>
	  BEGIN
		  IF NEW.PSITE_STOCKPOINT_CODE IS NOT NULL AND NEW.AUTH_ECODE IS NULL
		  THEN EXIT END_UPD;
		  END IF;
      CALL DB_PKG_STOCK$REFLECT(NEW.GRCCODE,
                            NEW.GRCNO,
                            NEW.GRCDT,
                            'GRC',
                            NEW.LOCCODE,
                            NEW.YCODE,
                            NEW.PCODE,
                            NULL,
                            NULL,
                            NULL,
                            NULL,
                            NULL,
                            NEW.DOCNO,
                            NULL-- START REV : 004
                            ,
                            NEW.SCHEME_DOCNO-- END REV : 004
                                             -- START REV : 005
                            ,
                            NULL,
                            NEW.ADMOU_CODE,
                            NEW.ADMSITE_CODE_IN-- END REV : 005
                                                -- START REV : 006
                            ,
                            NULL,
                            NEW.PSITE_STOCKPOINT_CODE-- END REV : 006
                            );

      -- START REV : 010
         -- START REV : 011
         --DB_PRO_UPD_LAST_IN_RATE (:NEW.GRCCODE, 'GRC');
         IF NEW.AUTH_ECODE IS NOT NULL
         THEN
            CALL DB_PRO_UPD_LAST_IN_RATE(NEW.GRCCODE,
                                     'GRC',
                                     NULL,
                                     NULL,
                                     NEW.GRCDT,
                                     NULL,
                                     NULL,
                                     NEW.ADMSITE_CODE_IN,
                                     NEW.ADMOU_CODE);
         END IF;
      -- END REV : 011
      -- END REV : 010
      -- START REV : 007
      CALL P_GRC_ZERO_QTY_DEL(NEW.GRCCODE);
	  
	  --END IF;
	  END;
      
     -- END REV : 007
     -- START REV : 006
      -- END REV : 006
      -- START REV : 009
      IF     OLD.AUTH_ECODE IS NOT NULL
         AND NEW.AUTH_ECODE IS NULL
         AND OLD.AUTH_TIME IS NOT NULL
         AND NEW.AUTH_TIME IS NULL
      THEN
         DELETE FROM GRC_AUTHORIZE_TRAP
          WHERE GRCCODE = OLD.GRCCODE;

         BEGIN
            CALL P_PUR_PURRT_REVERT(OLD.GRCCODE::varchar, 'GRC');
         END;

         BEGIN
            CALL DB_PKG_NPOS_EVENT$TRACK(OLD.ADMSITE_CODE_IN,
                                     'LOCALPURCHASEREVERT',
                                     OLD.GRCCODE);
         END;
      END IF;
   END IF;

   -- END REV : 009
   -- START REV : 012
   -- START REV : 001
   IF TG_OP = 'DELETE'
   THEN
        SELECT PG_BACKEND_PID() INTO STRICT V_SID;
        SELECT APPLICATION_NAME INTO STRICT V_PROGRAM FROM PG_STAT_ACTIVITY WHERE PID=V_SID;
        

IF not coalesce(V_PROGRAM,'XX') ILIKE '%w3wp.exe%'
      THEN
         RAISE EXCEPTION 'del_from_wrong_application' USING ERRCODE = '50001';
      END IF;
   END IF;
EXCEPTION
   WHEN SQLSTATE '50001' THEN
      RAISE EXCEPTION '%', 'T_INVGRCMAIN == >> Deletion from other application except GINESYS WEB not allowed.' USING ERRCODE = '45112';
-- END REV : 012
  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
"""
  returnType = trigger
  arguments = [
  ]
  language = plpgsql
}

