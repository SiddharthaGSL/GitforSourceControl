function "main"."trigger_fct_t_purordcnldet()" {
  text = """

/*******************************************************************************************************************
   No.                Date                  Author Description
   ---------     ----------          ----------------------
------------------------------------------------------------------
   REV : 001    15/04/2008          SHANKAR                  (BUG ID :
586) To update Purchase order status
   REV : 002   09/03/2009           DIPTIMAN                (BUG ID :
1134) Round option altered.
   REV : 003   27/01/2016          MOUSUMI                (BUG ID :
13307) SET INTRODUCED
   REV : 004   28/APR/2020          MOUSUMI                (BUG ID :MIGRATION) ENTRY SOURCE RELATED CHANGES
 *********************************************************************************************************************/
DECLARE
   V_ENTRY_SOURCE   varchar(25) := NULL;
   V_SID            bigint;
   V_PROGRAM        varchar(50);
BEGIN
  BEGIN
   -- START REV : 004
   BEGIN
      SELECT ENTRY_SOURCE
        INTO STRICT V_ENTRY_SOURCE
        FROM PURORDCNLMAIN
       WHERE CNLCODE = coalesce(NEW.CNLCODE, OLD.CNLCODE);
   EXCEPTION
      WHEN no_data_found
      THEN
         NULL;
   END;

   IF TG_OP = 'UPDATE'
   THEN
      -- END REV : 004
      IF OLD.CNLCODE IS NOT NULL
      THEN
         -- START REV : 002
SELECT PG_BACKEND_PID() INTO V_SID;

SELECT APPLICATION_NAME INTO V_PROGRAM FROM PG_STAT_ACTIVITY WHERE PID=V_SID;

         -- END REV : 002
         IF     coalesce(V_ENTRY_SOURCE, 'XX') <> 'WEB'
            AND                                                   -- REV : 004
not coalesce(V_PROGRAM,'XX') ILIKE '%w3wp.exe%'
         THEN
            UPDATE PURORDDET
               SET CNLQTY = coalesce(CNLQTY, 0) - coalesce(OLD.CNLQTY, 0)
             WHERE     ORDCODE = OLD.ORDCODE
                   AND ICODE = OLD.ICODE
                   -- START REV : 003
                   AND (   OLD.INVSETMAIN_CODE IS NULL
                        OR INVSETMAIN_CODE = OLD.INVSETMAIN_CODE)
                   -- END REV : 003
                   -- START REV : 002
                   --AND        ROUND(RATE,2)  = ROUND(:OLD.RATE,2);
                   AND round((RATE)::numeric, 3) = round((OLD.RATE)::numeric, 3);

            -- END REV : 002
            -- START REV : 001
            CALL Update_Purordmain_Status(OLD.ORDCODE);
         -- END REV : 001
         END IF;                                                  -- REV : 004
      END IF;
   END IF;

   IF TG_OP = 'INSERT'
   THEN
      IF NEW.CNLCODE IS NOT NULL
      THEN
         IF coalesce(V_ENTRY_SOURCE, 'XX') <> 'WEB'
         THEN                                                     -- REV : 004
            UPDATE PURORDDET
               SET CNLQTY = coalesce(CNLQTY, 0) + coalesce(NEW.CNLQTY, 0)
             WHERE     ORDCODE = NEW.ORDCODE
                   AND ICODE = NEW.ICODE
                   -- START REV : 003
                   AND (   NEW.INVSETMAIN_CODE IS NULL
                        OR INVSETMAIN_CODE = NEW.INVSETMAIN_CODE)
                   -- END REV : 003
                   -- START REV : 002
                   --AND        ROUND(RATE,2)  = ROUND(:NEW.RATE,2);
                   AND round((RATE)::numeric, 3) = round((NEW.RATE)::numeric, 3);

            -- END REV : 002
            -- START REV : 001
            CALL Update_Purordmain_Status(NEW.ORDCODE);
         -- END REV : 001
         END IF;                                                  -- REV : 004
      END IF;

      -- START REV : 004
      IF TG_OP = 'DELETE'
      THEN
         NULL;
      END IF;
   -- END REV : 004
   END IF;
  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
"""
  returnType = trigger
  arguments = [
  ]
  language = plpgsql
}

