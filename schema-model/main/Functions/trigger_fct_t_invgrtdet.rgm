function "main"."trigger_fct_t_invgrtdet()" {
  text = """

DECLARE

    V_TYPE                      varchar(100);
    V_DETAIL_CODE               INVSTOCK.DETAIL_CODE%TYPE;
    V_ENTCODE                   INVSTOCK.ENTCODE%TYPE;
    V_ENTNO                     INVSTOCK.ENTNO%TYPE;
    V_ENTDT                     INVSTOCK.ENTDT%TYPE;
    V_ENTTYPE                   INVSTOCK.ENTTYPE%TYPE;
    V_LOCCODE                   INVSTOCK.LOCCODE%TYPE;
    V_YCODE                     INVSTOCK.YCODE%TYPE;
    V_NEW_ICODE                 INVSTOCK.ICODE%TYPE;
    V_OLD_ICODE                 INVSTOCK.ICODE%TYPE;
    V_NEW_QTY                   INVSTOCK.QTY%TYPE;
    V_OLD_QTY                   INVSTOCK.QTY%TYPE;
    V_NEW_RATE                  INVSTOCK.RATE%TYPE;
    V_OLD_RATE                  INVSTOCK.RATE%TYPE;
    V_REFPCODE                  INVSTOCK.REFPCODE%TYPE;
    V_REFLOCCODE                INVSTOCK.REFLOCCODE%TYPE;
    V_REFCMPCODE                INVSTOCK.REFCMPCODE%TYPE;
    V_REFGLCODE                 INVSTOCK.REFGLCODE%TYPE;
    V_REFDEPTCODE               INVSTOCK.REFDEPTCODE%TYPE;
    V_REFPRCODE                 INVSTOCK.REFPRCODE%TYPE;
    V_REFDOCNO                  INVSTOCK.REFDOCNO%TYPE;
    V_REFPKGCODE                INVSTOCK.REFPKGCODE%TYPE;
    V_REFDCCODE                 INVSTOCK.REFDCCODE%TYPE;
    V_OTHER_RATE                INVSTOCK.COSTRATE%TYPE;
    -- START REV : 006      
    V_SCHEME_DOCNO              INVSTOCK.SCHEME_DOCNO%TYPE;
    -- END REV : 006        
    -- START REV : 007      
    V_ADMSITE_CODE              INVSTOCK.ADMSITE_CODE%TYPE;
    -- END REV : 007
    -- START REV : 008
    V_AUTH_ECODE                INVGRTMAIN.AUTH_ECODE%TYPE;
    V_PSITE_STKPT_CODE          INVSTOCK.PSITE_STOCKPOINT_CODE%TYPE;
    -- END REV : 008
    -- START REV : 009
    V_ISSECONDARY               INVSTOCK.ISSECONDARY%TYPE;
    -- END REV : 009
    -- START REV : 012
        V_COSTRATE              INVSTOCK.COSTRATE%TYPE;
    -- END REV : 012
BEGIN
  BEGIN
/*******************************************************************************************************************
   No.            Date          Author                  Description
   ---------   ----------    ----------------------  ------------------------------------------------------------------
   REV : 001   23/02/2009     SUJOY                  (BUG ID : 1100) Remove Calculation of COSTRATE
   REV : 002   09/03/2009     DIPTIMAN               (BUG ID : 1134) Round option altered.
   REV : 003   02-JUN-2009    SHANKAR                (BUG ID : 1325) To add Item level remarks
   REV : 004   30-JUN-2009    SUJOY                  (BUG ID : 1101) Costing Method ii
   REV : 005   03/08/2010     RAJKUMAR               (BUG ID : 0842) INVGRCDET_ERS_CODE used for GRC updation
   REV : 006   17-NOV-2010    MANASH                 (BUG ID : 2261) Item rate, amount, and scheme doc number is
                                                                     not getting inserted in Stock table .
   REV : 007   06-FEB-2012    DIPTIMAN               (BUG ID : 216)  Site related changes.
   REV : 008   25-FEB-2013    DIPTIMAN               (BUG ID : 502)  PSITE STOCKPOINT related changes.
   REV : 009   09-MAR-2017    MOUSUMI                (TFS ID : 26511)  MS-CO-OM-TS.
   REV : 010   11-MAY-2017    MANASH                 (TFS ID : 21200)  COGS revamp.
   REV : 011   13-NOV-2017    DIPTIMAN               (TFS ID : 32259) COGS costrate related changes.
   REV : 012   27-SEP-018     DIPTIMAN               (TFS ID : XXXXX) GRT costrate updation in stock.
   REV : 013   25-AUG-022     SIDDHARTHA             (TFS ID : XXXXX) Batch Serial Related Changes.
 *********************************************************************************************************************/
    -- start rev : 010
    IF      TG_OP = 'INSERT' THEN
            V_TYPE := 'INSERTING';
    ELSIF   TG_OP = 'UPDATE' THEN
            V_TYPE := 'UPDATING';
    ELSIF   TG_OP = 'DELETE' THEN
            V_TYPE := 'DELETING';
    END IF;
    -- end rev : 010
    -- STOCK AND COSTING REFLECTION
    SELECT  GRTNO                 ENTNO,
            GRTDT                 ENTDT,
            'GRT'                 ENTTYPE,
            YCODE                 YCODE,
            LOCCODE               LOCCODE,
            PCODE                 REFPCODE,
            NULL                  REFLOCCODE,
            NULL                  REFCMPCODE,
            NULL                  REFGLCODE,
            NULL                  REFDEPTCODE,
            NULL                  REFPRCODE,
            GENO                  REFDOCNO,
            NULL                  REFPKGCODE,
            -- START REV : 006
            SCHEME_DOCNO          SCHEME_DOCNO,
            -- END REV : 006
            -- START REV : 007
            ADMSITE_CODE          ADMSITE_CODE,
            -- END REV : 007
            -- START REV : 008
            AUTH_ECODE,
            PSITE_STOCKPOINT_CODE,
            -- END REV : 008
         -- START REV : 009
            CASE WHEN DB_FUN_GET_SITETYPE(ADMSITE_CODE)='MS-CO-OM-TS' THEN 'Y'  ELSE NULL END  ISSECONDARY
         -- END REV : 009
    INTO STRICT    V_ENTNO,
            V_ENTDT,
            V_ENTTYPE,
            V_YCODE,
            V_LOCCODE,
            V_REFPCODE,
            V_REFLOCCODE,
            V_REFCMPCODE,
            V_REFGLCODE,
            V_REFDEPTCODE,
            V_REFPRCODE,
            V_REFDOCNO,
            V_REFPKGCODE,
            -- START REV : 006
            V_SCHEME_DOCNO,
            -- END REV : 006
            -- START REV : 007
            V_ADMSITE_CODE,
            -- END REV : 007
            -- START REV : 008
            V_AUTH_ECODE,
            V_PSITE_STKPT_CODE
            -- END REV : 008
            -- START REV : 009
            ,V_ISSECONDARY
         -- END REV : 009
    FROM   INVGRTMAIN
    WHERE  GRTCODE = coalesce(NEW.GRTCODE,OLD.GRTCODE);

    V_DETAIL_CODE := coalesce(NEW.CODE,OLD.CODE);
    V_ENTCODE     := coalesce(NEW.GRTCODE,OLD.GRTCODE);

    V_NEW_ICODE   := NEW.ICODE;
    V_OLD_ICODE   := OLD.ICODE;

    V_NEW_QTY     := NEW.QTY;
    V_OLD_QTY     := OLD.QTY;

    IF  coalesce(NEW.QTY,1) <> 0 THEN
        V_NEW_RATE :=  round((coalesce(NEW.EFFAMT,0)/coalesce(NEW.QTY,1))::numeric,3);
    ELSE
        V_NEW_RATE :=  0;
    END IF;

    IF  coalesce(OLD.QTY,1) <> 0 THEN
        V_OLD_RATE :=  round((coalesce(OLD.EFFAMT,0)/coalesce(OLD.QTY,1))::numeric,3);
    ELSE
        V_OLD_RATE :=  0;
    END IF;
    -- START ISSUE 1225
    -- START REV : 001
    -- END REV : 001
    -- END ISSUE 1225
    -- START REV : 008
	<<END_POSTING>>
	BEGIN
	IF  V_PSITE_STKPT_CODE IS NOT NULL AND V_AUTH_ECODE IS NULL THEN
        EXIT END_POSTING;
	END IF;
    V_COSTRATE  := coalesce(DB_PKG_COGS$GET_ITEM_LAST_IN_RATE(V_ADMSITE_CODE, NEW.ICODE, V_ENTDT, NULL, coalesce(NEW.INVBATCH_SERIAL_CODE,OLD.INVBATCH_SERIAL_CODE)),0);
    V_OTHER_RATE := V_NEW_RATE;
        CALL Db_Pkg_Stock$REFLECT(
                              V_DETAIL_CODE
                             ,V_TYPE,V_ENTCODE
                             ,V_ENTNO
                             ,V_ENTDT
                             ,V_ENTTYPE
                             ,V_LOCCODE
                             ,V_YCODE
                             ,V_NEW_ICODE
                             ,V_OLD_ICODE
                             ,V_NEW_QTY
                             ,V_OLD_QTY
                             ,V_NEW_RATE
                             ,V_OLD_RATE
                             ,V_REFPCODE
                             ,V_REFLOCCODE
                             ,V_REFCMPCODE
                             ,V_REFGLCODE
                             ,V_REFDEPTCODE
                             ,V_REFPRCODE
                             ,V_REFDOCNO
                             ,V_REFPKGCODE
                             ,V_REFDCCODE
                             ,V_OTHER_RATE
                             ,V_SCHEME_DOCNO
                             ,NULL
                             ,NULL
                             ,NEW.REM
                             ,V_ADMSITE_CODE
                             -- START REV : 008
                             -- START REV : 009
                             /*,NULL
                             ,NULL*/
                             ,V_ISSECONDARY
                             ,NULL
                             -- END REV : 009
                             ,NULL
                             ,NULL
                             ,V_PSITE_STKPT_CODE
                             -- END REV : 008
                            -- START REV : 011
                            ,NULL
                            ,NULL
                            ,NULL
                            ,NULL
                            ,NULL
                            ,NULL
                            ,NULL
                            ,NULL
                            ,NULL
                            ,NULL
                            ,NULL
                            -- START REV : 012
                            -- ,V_OTHER_RATE
                            ,V_COSTRATE
                            -- END REV : 012
                            -- END REV : 011
                            --START REV : 013
                            ,NULL
                            ,NULL
                            ,NULL
                            ,NULL
                            ,NULL
                            -- START REV : 013
                            ,coalesce(NEW.INVBATCH_SERIAL_CODE, OLD.INVBATCH_SERIAL_CODE)
                            -- END REV : 013
                            --END REV : 013
                          );
    -- STOCK AND COSTING REFLECTION
END;
    -- END REV : 008
EXCEPTION
    WHEN OTHERS THEN
        CALL ERRAUDIT(USER, 'T_INVGRTDET', SQLSTATE, SQLERRM);
  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
"""
  returnType = trigger
  arguments = [
  ]
  language = plpgsql
}

