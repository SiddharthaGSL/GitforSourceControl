function "main"."t_salrtdet_aud$salrtdet()" {
  text = """

DECLARE
    V_RECORD_OLD AUD_SALRTDET%ROWTYPE;
	V_RECORD_NEW AUD_SALRTDET%ROWTYPE;
    V_SID DOUBLE PRECISION;
    V_TRNID CHARACTER VARYING(50);
    V_ACTION CHARACTER VARYING(10);
    I RECORD;    
	V_AUDIT_USER CHARACTER VARYING (100);
	V_LOGINUSER  CHARACTER VARYING (100);
	V_PROGRAM    CHARACTER VARYING (100);
	V_REC_COUNT  BIGINT; 
   
BEGIN
       SELECT current_setting('audit.AUDIT_USER', true) INTO V_AUDIT_USER;
	   IF NULLIF(V_AUDIT_USER,'') IS NOT NULL THEN  
		   BEGIN
				SELECT FULLNAME
				INTO   STRICT V_LOGINUSER
				FROM   APPUSER
				WHERE  ID =  substring (V_AUDIT_USER,8,position(';' in V_AUDIT_USER)-8)::NUMERIC; 
		   EXCEPTION
				WHEN no_data_found
				THEN
					V_LOGINUSER := 'System';
			END;			
		ELSE
			V_LOGINUSER := 'SYSTEM';
		END IF;
	   
	   select application_name
	   INTO   V_PROGRAM
	   from pg_stat_activity where pid = pg_backend_pid();

       V_ACTION:=TG_OP;
	   
       SELECT TXID_CURRENT() INTO V_TRNID;
       
        IF TG_OP = 'INSERT' OR  TG_OP = 'UPDATE' THEN 
	   
           V_RECORD_NEW.ACTION := V_ACTION;
           V_RECORD_NEW.ACTION_SUBTYPE := 'NEW';
           V_RECORD_NEW.TRANSACTION_ID := V_TRNID::TEXT;		   
		   V_RECORD_NEW.rtcode := NEW.rtcode;
            V_RECORD_NEW.icode := NEW.icode;
            V_RECORD_NEW.qty := NEW.qty;
            V_RECORD_NEW.rate := NEW.rate;
            V_RECORD_NEW.rem := NEW.rem;
            V_RECORD_NEW.mrp := NEW.mrp;
            V_RECORD_NEW.dccode := NEW.dccode;
            V_RECORD_NEW.code := NEW.code;
            V_RECORD_NEW.costrate := NEW.costrate;
            V_RECORD_NEW.chgamt := NEW.chgamt;
            V_RECORD_NEW.effamt := NEW.effamt;
            V_RECORD_NEW.salinvdet_code := NEW.salinvdet_code;
            V_RECORD_NEW.excisemain_code := NEW.excisemain_code;
            V_RECORD_NEW.ex_basis := NEW.ex_basis;
            V_RECORD_NEW.ex_effrate := NEW.ex_effrate;
            V_RECORD_NEW.ex_abtfactor := NEW.ex_abtfactor;
            V_RECORD_NEW.ex_dutyfactor := NEW.ex_dutyfactor;
            V_RECORD_NEW.ex_cessfactor := NEW.ex_cessfactor;
            V_RECORD_NEW.ex_appamt := NEW.ex_appamt;
            V_RECORD_NEW.ex_dutyamt := NEW.ex_dutyamt;
            V_RECORD_NEW.ex_cessamt := NEW.ex_cessamt;
            V_RECORD_NEW.ex_roundoff := NEW.ex_roundoff;
            V_RECORD_NEW.site_costrate := NEW.site_costrate;
            V_RECORD_NEW.site_costamt := NEW.site_costamt;
            V_RECORD_NEW.packetno := NEW.packetno;
            V_RECORD_NEW.packetdocid := NEW.packetdocid;
            V_RECORD_NEW.invcode := NEW.invcode;
            V_RECORD_NEW.transferout_dccode := NEW.transferout_dccode;
            V_RECORD_NEW.transferout_salinvdet_code := NEW.transferout_salinvdet_code;
            V_RECORD_NEW.sendqty := NEW.sendqty;
            V_RECORD_NEW.shortexcessqty := NEW.shortexcessqty;
            V_RECORD_NEW.shortexcessamt := NEW.shortexcessamt;
            V_RECORD_NEW.ex_applicable_from := NEW.ex_applicable_from;
            V_RECORD_NEW.allowtaxreversal := NEW.allowtaxreversal;
            V_RECORD_NEW.hsn_sac_code := NEW.hsn_sac_code;
            V_RECORD_NEW.ref_family_code := NEW.ref_family_code;
            V_RECORD_NEW.gl_cc_appl := NEW.gl_cc_appl;
            V_RECORD_NEW.glcode := NEW.glcode;
            V_RECORD_NEW.slcode := NEW.slcode;
            V_RECORD_NEW.dataversion := NEW.dataversion;
            V_RECORD_NEW.invbatch_serial_code := NEW.invbatch_serial_code;
          END IF;  
            
         IF TG_OP = 'UPDATE' OR TG_OP = 'DELETE' THEN 
	   
            V_RECORD_OLD.ACTION := V_ACTION;
            V_RECORD_OLD.ACTION_SUBTYPE := 'OLD';
            V_RECORD_OLD.TRANSACTION_ID := V_TRNID::TEXT;			
			V_RECORD_OLD.rtcode := OLD.rtcode;
            V_RECORD_OLD.icode := OLD.icode;
            V_RECORD_OLD.qty := OLD.qty;
            V_RECORD_OLD.rate := OLD.rate;
            V_RECORD_OLD.rem := OLD.rem;
            V_RECORD_OLD.mrp := OLD.mrp;
            V_RECORD_OLD.dccode := OLD.dccode;
            V_RECORD_OLD.code := OLD.code;
            V_RECORD_OLD.costrate := OLD.costrate;
            V_RECORD_OLD.chgamt := OLD.chgamt;
            V_RECORD_OLD.effamt := OLD.effamt;
            V_RECORD_OLD.salinvdet_code := OLD.salinvdet_code;
            V_RECORD_OLD.excisemain_code := OLD.excisemain_code;
            V_RECORD_OLD.ex_basis := OLD.ex_basis;
            V_RECORD_OLD.ex_effrate := OLD.ex_effrate;
            V_RECORD_OLD.ex_abtfactor := OLD.ex_abtfactor;
            V_RECORD_OLD.ex_dutyfactor := OLD.ex_dutyfactor;
            V_RECORD_OLD.ex_cessfactor := OLD.ex_cessfactor;
            V_RECORD_OLD.ex_appamt := OLD.ex_appamt;
            V_RECORD_OLD.ex_dutyamt := OLD.ex_dutyamt;
            V_RECORD_OLD.ex_cessamt := OLD.ex_cessamt;
            V_RECORD_OLD.ex_roundoff := OLD.ex_roundoff;
            V_RECORD_OLD.site_costrate := OLD.site_costrate;
            V_RECORD_OLD.site_costamt := OLD.site_costamt;
            V_RECORD_OLD.packetno := OLD.packetno;
            V_RECORD_OLD.packetdocid := OLD.packetdocid;
            V_RECORD_OLD.invcode := OLD.invcode;
            V_RECORD_OLD.transferout_dccode := OLD.transferout_dccode;
            V_RECORD_OLD.transferout_salinvdet_code := OLD.transferout_salinvdet_code;
            V_RECORD_OLD.sendqty := OLD.sendqty;
            V_RECORD_OLD.shortexcessqty := OLD.shortexcessqty;
            V_RECORD_OLD.shortexcessamt := OLD.shortexcessamt;
            V_RECORD_OLD.ex_applicable_from := OLD.ex_applicable_from;
            V_RECORD_OLD.allowtaxreversal := OLD.allowtaxreversal;
            V_RECORD_OLD.hsn_sac_code := OLD.hsn_sac_code;
            V_RECORD_OLD.ref_family_code := OLD.ref_family_code;
            V_RECORD_OLD.gl_cc_appl := OLD.gl_cc_appl;
            V_RECORD_OLD.glcode := OLD.glcode;
            V_RECORD_OLD.slcode := OLD.slcode;
            V_RECORD_OLD.dataversion := OLD.dataversion;
            V_RECORD_OLD.invbatch_serial_code := OLD.invbatch_serial_code;
          END IF;  

    IF TG_OP = 'INSERT' THEN
	    V_REC_COUNT := 1;
        INSERT INTO AUD_SALRTDET SELECT V_RECORD_NEW.*;
    END IF;

    IF TG_OP = 'UPDATE' THEN
	FOR I IN (
		SELECT 
		V_RECORD_OLD.slcode,
                  V_RECORD_OLD.glcode,
                  V_RECORD_OLD.gl_cc_appl,
                  V_RECORD_OLD.hsn_sac_code,
                  V_RECORD_OLD.ex_applicable_from,
                  V_RECORD_OLD.shortexcessamt,
                  V_RECORD_OLD.shortexcessqty,
                  V_RECORD_OLD.sendqty,
                  V_RECORD_OLD.packetdocid,
                  V_RECORD_OLD.packetno,
                  V_RECORD_OLD.ex_roundoff,
                  V_RECORD_OLD.ex_cessamt,
                  V_RECORD_OLD.ex_dutyamt,
                  V_RECORD_OLD.ex_appamt,
                  V_RECORD_OLD.ex_cessfactor,
                  V_RECORD_OLD.ex_dutyfactor,
                  V_RECORD_OLD.ex_abtfactor,
                  V_RECORD_OLD.ex_effrate,
                  V_RECORD_OLD.ex_basis,
                  V_RECORD_OLD.excisemain_code,
                  V_RECORD_OLD.effamt,
                  V_RECORD_OLD.chgamt,
                  V_RECORD_OLD.costrate,
                  V_RECORD_OLD.mrp,
                  V_RECORD_OLD.rem,
                  V_RECORD_OLD.rate,
                  V_RECORD_OLD.qty,
                  V_RECORD_OLD.rtcode
		EXCEPT
		SELECT 
		V_RECORD_NEW.slcode,
                  V_RECORD_NEW.glcode,
                  V_RECORD_NEW.gl_cc_appl,
                  V_RECORD_NEW.hsn_sac_code,
                  V_RECORD_NEW.ex_applicable_from,
                  V_RECORD_NEW.shortexcessamt,
                  V_RECORD_NEW.shortexcessqty,
                  V_RECORD_NEW.sendqty,
                  V_RECORD_NEW.packetdocid,
                  V_RECORD_NEW.packetno,
                  V_RECORD_NEW.ex_roundoff,
                  V_RECORD_NEW.ex_cessamt,
                  V_RECORD_NEW.ex_dutyamt,
                  V_RECORD_NEW.ex_appamt,
                  V_RECORD_NEW.ex_cessfactor,
                  V_RECORD_NEW.ex_dutyfactor,
                  V_RECORD_NEW.ex_abtfactor,
                  V_RECORD_NEW.ex_effrate,
                  V_RECORD_NEW.ex_basis,
                  V_RECORD_NEW.excisemain_code,
                  V_RECORD_NEW.effamt,
                  V_RECORD_NEW.chgamt,
                  V_RECORD_NEW.costrate,
                  V_RECORD_NEW.mrp,
                  V_RECORD_NEW.rem,
                  V_RECORD_NEW.rate,
                  V_RECORD_NEW.qty,
                  V_RECORD_NEW.rtcode
			 )
	LOOP
	  V_REC_COUNT := 1; 
		INSERT INTO AUD_SALRTDET SELECT V_RECORD_OLD.*;
       INSERT INTO AUD_SALRTDET SELECT V_RECORD_NEW.*;    
	END LOOP;   
    END IF;

    IF TG_OP = 'DELETE' THEN
		V_REC_COUNT := 1;
		INSERT INTO AUD_SALRTDET SELECT V_RECORD_OLD.*;
    END IF;
	
	IF V_REC_COUNT >  0
	THEN
	   BEGIN
            INSERT INTO AUD_TRANSACTION (TRANSACTION_ID, TRANSACTION_DATE, LOGIN_USER, PROGRAM, MODULE_SHORTCODE, MODULE_TYPE)
            VALUES (V_TRNID,   current_date,V_LOGINUSER, V_PROGRAM, 'Sales Return', 'Sales Return/Transfer In');
       EXCEPTION WHEN unique_violation THEN
            NULL;
       END;  

       BEGIN  
             INSERT INTO AUD_TRANSACTION_TABLE (TRANSACTION_ID, TABLE_NAME)
             VALUES (V_TRNID,  'SALRTDET');
       EXCEPTION WHEN unique_violation THEN
             NULL;
       END; 
	END IF;   
    

    IF TG_OP = 'INSERT' THEN
        RETURN NEW;
    ELSIF TG_OP = 'UPDATE' THEN
        RETURN NEW;
    ELSIF TG_OP = 'DELETE' THEN
        RETURN OLD;
    END IF;
    EXCEPTION
        WHEN others THEN
            CALL main.erraudit(SESSION_USER::text, 'T_SALRTDET_AUD'::CHARACTER, SQLSTATE::text, SQLERRM);
			RAISE;
			RETURN NULL;
END;
"""
  returnType = trigger
  arguments = [
  ]
  language = plpgsql
}

