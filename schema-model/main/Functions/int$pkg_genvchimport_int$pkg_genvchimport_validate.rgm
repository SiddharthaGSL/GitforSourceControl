function "main"."int$pkg_genvchimport_int$pkg_genvchimport_validate_atx(bigint, bigint, timestamp without time zone, bigint)" {
  text = """

DECLARE

      v_status   char(1);
      errmsg     varchar(200);
      errcode    bigint;
      v_date     varchar(25);
      g_mark     varchar(100);
      v_oucode   bigint;
BEGIN

      IF 1 = 1
      THEN

         NULL;
      END IF;

      g_mark := 'V14';

      -- vchdt is null
      INSERT INTO int$error_log(code,
                                 lineno,
                                 classname,
                                 userid,
                                 errortype,
                                 errordesc,
                                 createdon)
         SELECT nextval('int$error_log_code'),
                lineno,
                'GENVCHIMPORT',
                userid,
                'Mandatory Validation',
                'Column is Mandatory for voucher date',
                clock_timestamp()
           FROM int$stg_genvchimport a
          WHERE vchdt IS NULL AND a.userid = p_userid;

      g_mark := 'V15';

      -- scheme_doc_format is null
      INSERT INTO int$error_log(code,
                                 lineno,
                                 classname,
                                 userid,
                                 errortype,
                                 errordesc,
                                 createdon)
         SELECT nextval('int$error_log_code'),
                lineno,
                'GENVCHIMPORT',
                userid,
                'Mandatory Validation',
                'Column is Mandatory for document scheme format',
                clock_timestamp()
           FROM int$stg_genvchimport a
          WHERE scheme_doc_format IS NULL AND a.userid = p_userid;

      g_mark := 'V16';

      -- bank_cash_glname is null
      INSERT INTO int$error_log(code,
                                 lineno,
                                 classname,
                                 userid,
                                 errortype,
                                 errordesc,
                                 createdon)
         SELECT nextval('int$error_log_code'),
                lineno,
                'GENVCHIMPORT',
                userid,
                'Mandatory Validation',
                'Column is Mandatory header GL name',
                clock_timestamp()
           FROM int$stg_genvchimport a
          WHERE bank_cash_glname IS NULL AND a.userid = p_userid;

      g_mark := 'V17';

      -- gl_name is null
      INSERT INTO int$error_log(code,
                                 lineno,
                                 classname,
                                 userid,
                                 errortype,
                                 errordesc,
                                 createdon)
         SELECT nextval('int$error_log_code'),
                lineno,
                'GENVCHIMPORT',
                userid,
                'Mandatory Validation',
                'Column is Mandatory for detail GL name',
                clock_timestamp()
           FROM int$stg_genvchimport a
          WHERE gl_name IS NULL AND a.userid = p_userid;

      g_mark := 'V19';

      g_mark := 'V20';

      -- vchdt > sysdate
      INSERT INTO int$error_log(code,
                                 lineno,
                                 classname,
                                 userid,
                                 errortype,
                                 errordesc,
                                 createdon)
         SELECT nextval('int$error_log_code'),
                lineno,
                'GENVCHIMPORT',
                userid,
                'Data Validation',
                   'Future Voucher Date is Invalid ('
                || TO_CHAR(vchdt, 'dd/mm/rrrr')
                || ')',
                clock_timestamp()
           FROM int$stg_genvchimport a
          WHERE date_trunc('day', vchdt) > date_trunc('day', clock_timestamp()) AND a.userid = p_userid;

      g_mark := 'V21';

      -- VCHDT checking for the following -
      -- Year extinct,
      DECLARE
         v_dtfr           timestamp;
         v_dtto           timestamp;
         v_yr_ext         char(1);
         v_day_status     char(1);
         v_locdays        hrdemp.locdays%TYPE;
         v_last_dt_lock   char(1);

         c1 CURSOR FOR
            SELECT DISTINCT date_trunc('day', vchdt) vchdt
              FROM int$stg_genvchimport

             WHERE userid = p_userid;
      -- end rev : 006
      BEGIN
         FOR i IN c1
         LOOP
            -- Ycode related checking, min trans date checking, lockday checking, Year exists or not, Day status related checking
            BEGIN
               SELECT ext, dtfr, dtto
                 INTO STRICT v_yr_ext, v_dtfr, v_dtto
                 FROM admyear
                WHERE i.vchdt BETWEEN dtfr AND dtto;

               IF coalesce(v_yr_ext, 'N') = 'Y'
               THEN
                  INSERT INTO int$error_log(code,
                                             lineno,
                                             classname,
                                             userid,
                                             errortype,
                                             errordesc,
                                             createdon)
                     SELECT nextval('int$error_log_code'),
                            lineno,
                            'GENVCHIMPORT',
                            userid,
                            'Data Validation',
                            'Year of the Date is not open / extinct',
                            clock_timestamp()
                       FROM int$stg_genvchimport
                      WHERE date_trunc('day', vchdt) = i.vchdt AND userid = p_userid;
               ELSE
                  IF i.vchdt < v_dtfr
                  THEN
                     INSERT INTO int$error_log(code,
                                                lineno,
                                                classname,
                                                userid,
                                                errortype,
                                                errordesc,
                                                createdon)
                        SELECT nextval('int$error_log_code'),
                               lineno,
                               'GENVCHIMPORT',
                               userid,
                               'Data Validation',
                                  'Date can not be less than start date of current accounting year date '
                               || TO_CHAR(v_dtfr, 'DD/MM/YYYY'),
                               clock_timestamp()
                          FROM int$stg_genvchimport
                         WHERE date_trunc('day', vchdt) = i.vchdt AND userid = p_userid;
                  ELSE
                     BEGIN
                        SELECT locdays, allow_last_fy_day_mode
                          INTO STRICT v_locdays, v_last_dt_lock
                          FROM hrdemp
                         WHERE ecode = p_userid;

                        IF v_locdays IS NOT NULL
                        THEN
                           IF coalesce(
                                 db_fun_chk_last_dt_lock(v_last_dt_lock,
                                                          clock_timestamp()),
                                 0) <> 0
                           THEN
                              INSERT INTO int$error_log(code,
                                                         lineno,
                                                         classname,
                                                         userid,
                                                         errortype,
                                                         errordesc,
                                                         createdon)
                                 SELECT nextval('int$error_log_code'),
                                        lineno,
                                        'GENVCHIMPORT',
                                        userid,
                                        'Data Validation',
                                        'user do not have priviledge to igonre lock days on the last day of accounting year',
                                        clock_timestamp()
                                   FROM int$stg_genvchimport
                                  WHERE     date_trunc('day', vchdt) = i.vchdt
                                        AND userid = p_userid;
                           ELSE
                              IF date_trunc('day', i.vchdt) <
                                    (date_trunc('day', clock_timestamp()) - v_locdays)
                              THEN
                                 INSERT INTO int$error_log(code,
                                                            lineno,
                                                            classname,
                                                            userid,
                                                            errortype,
                                                            errordesc,
                                                            createdon)
                                    SELECT nextval('int$error_log_code'),
                                           lineno,
                                           'GENVCHIMPORT',
                                           userid,
                                           'Data Validation',
                                           'User lock days logic fails',
                                           clock_timestamp()
                                      FROM int$stg_genvchimport
                                     WHERE     date_trunc('day', vchdt) = i.vchdt
                                           AND userid = p_userid;
                              END IF;
                           END IF;
                        END IF;
                     EXCEPTION
                        WHEN no_data_found
                        THEN
                           INSERT INTO int$error_log(code,
                                                      lineno,
                                                      classname,
                                                      userid,
                                                      errortype,
                                                      errordesc,
                                                      createdon)
                              SELECT nextval('int$error_log_code'),
                                     lineno,
                                     'GENVCHIMPORT',
                                     userid,
                                     'Data Validation',
                                     'User not exists',
                                     clock_timestamp()
                                FROM int$stg_genvchimport
                               WHERE     date_trunc('day', vchdt) = i.vchdt
                                     AND userid = p_userid;
                     END;
                  END IF;
               END IF;
            EXCEPTION
               WHEN no_data_found
               THEN
                  INSERT INTO int$error_log(code,
                                             lineno,
                                             classname,
                                             userid,
                                             errortype,
                                             errordesc,
                                             createdon)
                     SELECT nextval('int$error_log_code'),
                            lineno,
                            'GENVCHIMPORT',
                            userid,
                            'Data Validation',
                            'Year not exists',
                            clock_timestamp()
                       FROM int$stg_genvchimport
                      WHERE date_trunc('day', vchdt) = i.vchdt AND userid = p_userid;
            END;

            -- day status related checking
            -- START REV : 004
            -- Day check
            INSERT INTO int$error_log(code,
                                       lineno,
                                       classname,
                                       userid,
                                       errortype,
                                       errordesc,
                                       createdon)
               SELECT nextval('int$error_log_code'),
                      0,
                      'GENVCHIMPORT',
                      p_userid,
                      'Mandatory Validation',
                      'Finance Month is Closed no entry is possible for the date',
                      clock_timestamp()
                 FROM admmonth a, admou_month b
                WHERE     a.mcode = b.admmonth_code
                      AND i.vchdt BETWEEN dtfr AND dtto
                      -- START REV : 007
                      AND p_userid IN (SELECT userid
                                         FROM int$stg_genvchimport)
                      -- END REV : 007
                      AND b.admou_code = p_connect_ou
                      AND b.fin_month_status = 'C';

         END LOOP;
      END;

      g_mark := 'V22';

      -- scheme_doc_format chking
      INSERT INTO int$error_log(code,
                                 lineno,
                                 classname,
                                 userid,
                                 errortype,
                                 errordesc,
                                 createdon)
         SELECT nextval('int$error_log_code'),
                lineno,
                'GENVCHIMPORT',
                userid,
                'Data Validation',
                'Invalid Scheme Doc format.',
                clock_timestamp()
           FROM int$stg_genvchimport a
          WHERE     UPPER(a.scheme_doc_format) NOT IN
                       (SELECT UPPER(a.docname)
                          FROM admdocscheme a, admmenu_docscheme b
                         WHERE     a.doccode = b.doccode
                               --AND b.menucode = 22
                               --START REV : 011
                               AND b.mdmenushortcode = 'FinanceGenVoucher'
                               --END REV : 011
                               AND coalesce(a.ext, 'N') = 'N'
                               AND (   0 =
                                          (SELECT COUNT(*)
                                             FROM admdocscheme    c,
                                                  admou_docscheme d
                                            WHERE     c.doccode = d.doccode
                                                  AND d.admsite_code =
                                                         p_connect_site
                                                  AND coalesce(c.ext, 'N') = 'N')
                                    OR a.doccode IN (SELECT e.doccode
                                             FROM admdocscheme    e,
                                                  admou_docscheme f
                                            WHERE     e.doccode = f.doccode
                                                  AND f.admsite_code =
                                                         p_connect_site
                                                  AND coalesce(e.ext, 'N') = 'N')))
                AND a.userid = p_userid;

      g_mark := 'V23';

      -- scheme_docno chking
      INSERT INTO int$error_log(code,
                                 lineno,
                                 classname,
                                 userid,
                                 errortype,
                                 errordesc,
                                 createdon)
         SELECT nextval('int$error_log_code'),
                lineno,
                'GENVCHIMPORT',
                userid,
                'Data Validation',
                'Scheme Doc No is missing for "Manual" type document scheme format',
                clock_timestamp()
           FROM int$stg_genvchimport a
          WHERE (    UPPER(a.scheme_doc_format) IN ('MANUAL (GENERAL)', 'MANUAL (EXCISE)')
                     AND a.scheme_docno IS NULL)
                AND a.userid = p_userid;

      INSERT INTO int$error_log(code,
                                 lineno,
                                 classname,
                                 userid,
                                 errortype,
                                 errordesc,
                                 createdon)
         SELECT nextval('int$error_log_code'),
                lineno,
                'GENVCHIMPORT',
                userid,
                'Data Validation',
                'Scheme Doc No should be null, as it would be auto generated',
                clock_timestamp()
           FROM int$stg_genvchimport a
          WHERE (    UPPER(a.scheme_doc_format) NOT IN ('MANUAL (GENERAL)', 'MANUAL (EXCISE)')
                     AND a.scheme_docno IS NOT NULL)
                AND a.userid = p_userid;

      g_mark := 'V24';

      INSERT INTO int$error_log(code,
                                 lineno,
                                 classname,
                                 userid,
                                 errortype,
                                 errordesc,
                                 createdon)
         SELECT nextval('int$error_log_code'),
                0,
                'GENVCHIMPORT',
                p_userid,
                'Data Validation',
                'Scheme Doc No already exists',
                clock_timestamp()

          WHERE EXISTS (SELECT COUNT(DISTINCT a.scheme_docno)
                      FROM int$stg_genvchimport a, finvchmain b
                     WHERE     UPPER(a.scheme_docno) =
                                  UPPER(b.scheme_docno)
                           AND userid = p_userid
                    HAVING COUNT(DISTINCT a.scheme_docno) > 1);

      g_mark := 'V25';

      -- bank cash glname
      INSERT INTO int$error_log(code,
                                 lineno,
                                 classname,
                                 userid,
                                 errortype,
                                 errordesc,
                                 createdon)
         SELECT nextval('int$error_log_code'),
                lineno,
                'GENVCHIMPORT',
                userid,
                'Data Validation',
                'Invalid Bank / Cash.',
                clock_timestamp()
           FROM int$stg_genvchimport
          WHERE     UPPER(bank_cash_glname) NOT IN (SELECT UPPER(g.glname) glname
                          FROM fingl g
                         WHERE     g.srctype IN ('B', 'C')
                               AND g.admsite_code_owner IS NOT NULL
                               AND g.ext = 'N')
                AND userid = p_userid;

      g_mark := 'V26';

      INSERT INTO int$error_log(code,
                                 lineno,
                                 classname,
                                 userid,
                                 errortype,
                                 errordesc,
                                 createdon)
         SELECT nextval('int$error_log_code'),
                0,
                'GENVCHIMPORT',
                p_userid,
                'Data Validation',
                'Voucher remarks is different - ' || voucher_ref,
                clock_timestamp()
           FROM (  SELECT voucher_ref, COUNT(DISTINCT voucher_remarks)
                     FROM int$stg_genvchimport
                    WHERE userid = p_userid
                 GROUP BY voucher_ref
                   HAVING COUNT(DISTINCT voucher_remarks) > 1) alias5;

      -- END REV : 003
      -- START REV : 005
      -- VCHDT unique chking reference number wise
      INSERT INTO int$error_log(code,
                                 lineno,
                                 classname,
                                 userid,
                                 errortype,
                                 errordesc,
                                 createdon)
         SELECT nextval('int$error_log_code'),
                0,
                'GENVCHIMPORT',
                p_userid,
                'Data Validation',
                   'Multiple dates for single reference number ('
                || voucher_ref
                || ') not allowed. Blank reference number is also considered as value.',
                clock_timestamp()
           FROM (  SELECT voucher_ref, COUNT(DISTINCT VCHDT)
                     FROM int$stg_genvchimport
                    WHERE userid = p_userid
                 GROUP BY voucher_ref
                   HAVING COUNT(DISTINCT VCHDT) > 1) alias5;

      -- END REV : 005
      g_mark := 'V29';

      -- invalid gl name
      INSERT INTO int$error_log(code,
                                 lineno,
                                 classname,
                                 userid,
                                 errortype,
                                 errordesc,
                                 createdon)
         SELECT nextval('int$error_log_code'),
                lineno,
                'GENVCHIMPORT',
                userid,
                'Data Validation',
                'GL Name either is not a non-extinct type or not available in GL Master or it is not a general type Ledger',
                clock_timestamp()
           FROM int$stg_genvchimport
          WHERE     UPPER(gl_name) NOT IN (SELECT UPPER(g.glname) glname
                          FROM fingl g
                         WHERE g.srctype = 'G' AND g.ext = 'N')
                AND userid = p_userid;

      g_mark := 'V30';

      -- invalid sl_slid, Checking for SLID is present in finsl or not
      -- case - 0
      INSERT INTO int$error_log(code,
                                 lineno,
                                 classname,
                                 userid,
                                 errortype,
                                 errordesc,
                                 createdon)
         SELECT nextval('int$error_log_code'),
                lineno,
                'GENVCHIMPORT',
                userid,
                'Data Validation',
                'Invalid SLID',
                clock_timestamp()
           FROM int$stg_genvchimport
          WHERE     UPPER(sl_slid) NOT IN (SELECT UPPER(slid)
                                              FROM finsl
                                             WHERE ext = 'N')
                AND userid = p_userid;

      g_mark := 'V31';

      -- case - III
      DECLARE
         c1 CURSOR FOR
            SELECT DISTINCT b.*, a.gl_name, a.sl_slid
              FROM int$stg_genvchimport a, fingl b
             WHERE     UPPER(a.gl_name) = UPPER(b.glname)
                   AND a.userid = p_userid;
      BEGIN
         FOR i IN c1
         LOOP
            IF coalesce(i.slapp, 'N') = 'N'
            THEN
               IF i.sl_slid IS NOT NULL
               THEN
                  INSERT INTO int$error_log(code,
                                             lineno,
                                             classname,
                                             userid,
                                             errortype,
                                             errordesc,
                                             createdon)
                     SELECT nextval('int$error_log_code'),
                            lineno,
                            'GENVCHIMPORT',
                            userid,
                            'Data Validation',
                            'SLID not Applicable for the GL',
                            clock_timestamp()
                       FROM int$stg_genvchimport
                      WHERE     gl_name = i.gl_name
                            AND sl_slid = i.sl_slid
                            AND userid = p_userid;
               END IF;
            ELSE
               -- slapp = 'Y'
               IF i.sl_slid IS NULL
               THEN
                  INSERT INTO int$error_log(code,
                                             lineno,
                                             classname,
                                             userid,
                                             errortype,
                                             errordesc,
                                             createdon)
                     SELECT nextval('int$error_log_code'),
                            lineno,
                            'GENVCHIMPORT',
                            userid,
                            'Data Validation',
                            'Invalid SLID / SLID not Applicable for the GL / extinct SLID / SLID not defined for the GL.',
                            clock_timestamp()
                       FROM int$stg_genvchimport
                      WHERE     gl_name = i.gl_name
                            AND sl_slid IS NULL
                            AND userid = p_userid;
               ELSE
                  INSERT INTO int$error_log(code,
                                             lineno,
                                             classname,
                                             userid,
                                             errortype,
                                             errordesc,
                                             createdon)
                     SELECT nextval('int$error_log_code'),
                            lineno,
                            'GENVCHIMPORT',
                            userid,
                            'Data Validation',
                            'Invalid SLID / SLID not Applicable for the GL / extinct SLID / SLID not defined for the GL.',
                            clock_timestamp()
                       FROM int$stg_genvchimport
                      WHERE     gl_name = i.gl_name
                            AND sl_slid = i.sl_slid
                            AND UPPER(i.sl_slid) NOT IN (SELECT UPPER(finsl.slid)
                                      FROM finsl, fingl, finsl_gl
                                     WHERE     finsl.slcode = finsl_gl.slcode
                                           AND fingl.glcode = finsl_gl.glcode
                                           AND finsl_gl.glcode = i.glcode
                                           AND finsl.ext = 'N'
                                           AND finsl_gl.ext = 'N')
                            AND userid = p_userid;
               END IF;
            END IF;
         END LOOP;
      END;

      g_mark := 'V35';

      -- invalid amount  (amt = 0)
      INSERT INTO int$error_log(code,
                                 lineno,
                                 classname,
                                 userid,
                                 errortype,
                                 errordesc,
                                 createdon)
         -- START REV : 003
         -- SELECT int$error_log_code.NEXTVAL, lineno, 'GENVCHIMPORT', p_userid, 'Data Validation', 'Summation of Debit and Creidt Amount is zero.', SYSDATE
         SELECT nextval('int$error_log_code'),
                lineno,
                'GENVCHIMPORT',
                p_userid,
                'Data Validation',
                'Amount could not be zero.',
                clock_timestamp()
           -- END REV : 003
           FROM int$stg_genvchimport
          WHERE amount = 0;

      g_mark := 'V36';

      INSERT INTO int$error_log(code,
                                 lineno,
                                 classname,
                                 userid,
                                 errortype,
                                 errordesc,
                                 createdon)
         SELECT nextval('int$error_log_code'),
                0,
                'GENVCHIMPORT',
                p_userid,
                'Data Validation',
                   'Summation of Debit and Creidt Amount is zero - '
                || voucher_ref,
                clock_timestamp()
           FROM (  SELECT voucher_ref
                     FROM int$stg_genvchimport a
                    WHERE a.userid = p_userid
                 GROUP BY voucher_ref
                   HAVING coalesce(SUM(coalesce(a.amount, 0)), 0) = 0) alias6;

      -- END REV : 003
      g_mark := 'V37';

      INSERT INTO int$error_log(code,
                                 lineno,
                                 classname,
                                 userid,
                                 errortype,
                                 errordesc,
                                 createdon)
         SELECT nextval('int$error_log_code'),
                0,
                'GENVCHIMPORT',
                p_userid,
                'Data Validation',
                   'Amount with different sign not allowed for same GL / SL combination - '
                || voucher_ref,
                clock_timestamp()
           FROM (  SELECT gl_name,
                          sl_slid,
                          voucher_ref,
                          COUNT(DISTINCT SIGN(amount))
                     FROM int$stg_genvchimport
                    WHERE userid = p_userid
                 GROUP BY gl_name, sl_slid, voucher_ref
                   HAVING COUNT(DISTINCT SIGN(amount)) > 1) alias7;

      -- END REV : 003
      g_mark := 'V38';

      -- invalid ref_admsite_shrtname
      -- case - 0
      INSERT INTO int$error_log(code,
                                 lineno,
                                 classname,
                                 userid,
                                 errortype,
                                 errordesc,
                                 createdon)
         SELECT nextval('int$error_log_code'),
                lineno,
                'GENVCHIMPORT',
                userid,
                'Data Validation',
                'Reference Site Short Name is not available in Site Master.',
                clock_timestamp()
           FROM int$stg_genvchimport a
LEFT OUTER JOIN (SELECT UPPER(s.shrtname) shrtname
                   FROM admsite s) st ON (UPPER(a.ref_admsite_shrtname) = st.shrtname)
WHERE st.shrtname IS NULL AND a.ref_admsite_shrtname IS NOT NULL AND a.userid = p_userid;

      g_mark := 'V39';

      -- case - I
      INSERT INTO int$error_log(code,
                                 lineno,
                                 classname,
                                 userid,
                                 errortype,
                                 errordesc,
                                 createdon)
         SELECT nextval('int$error_log_code'),
                lineno,
                'GENVCHIMPORT',
                userid,
                'Data Validation',
                'Invalid Reference Site Short Name or it is null.',
                clock_timestamp()
           FROM int$stg_genvchimport a,
                (SELECT UPPER(g.glname) glname
                   FROM fingl g
                  WHERE g.ext = 'N' AND g.srctype = 'G' AND g.costapp = 'Y')
                gl
          WHERE     UPPER(a.gl_name) = UPPER(gl.glname)
                AND a.ref_admsite_shrtname IS NULL
                AND a.userid = p_userid;

      DECLARE
         v_oucode   bigint;

         c1 CURSOR
         FOR
            SELECT DISTINCT a.gl_name,
                            a.sl_slid,
                            a.ref_admsite_shrtname,
                            b.glcode,
                            b.glname,
                            b.srctype,
                            b.costapp,
                            b.slapp,
                            c.slcode
              FROM int$stg_genvchimport a
LEFT OUTER JOIN (SELECT UPPER(glname) glname,
                           glcode,
                           srctype,
                           costapp,
                           slapp
                      FROM fingl) b ON (UPPER(a.gl_name) = UPPER(b.glname))
LEFT OUTER JOIN (SELECT UPPER(slid) slid, slname, slcode FROM finsl) c ON (UPPER(a.sl_slid) = UPPER(c.slid))
WHERE b.costapp = 'Y' AND a.userid = p_userid;
      BEGIN
         SELECT admou_code
           INTO STRICT v_oucode
           FROM admsite
          WHERE code = p_connect_site;

         FOR i IN c1
         LOOP
            INSERT INTO int$error_log(code,
                                       lineno,
                                       classname,
                                       userid,
                                       errortype,
                                       errordesc,
                                       createdon)
               SELECT nextval('int$error_log_code'),
                      lineno,
                      'GENVCHIMPORT',
                      userid,
                      'Data Validation',
                      -- START REV : 014
                      --'Reference Site Short Name is not applicable...',
                      'Reference site is either not applicable or extinct.',
                      -- END REV : 014
                      clock_timestamp()
                 FROM int$stg_genvchimport
                WHERE     UPPER(gl_name) = UPPER(i.gl_name)
                      AND UPPER(coalesce(sl_slid, 'x4x')) =
                             UPPER(coalesce(i.sl_slid, 'x4x'))
                      -- START REV : 014
                      and upper(ref_admsite_shrtname) =  upper(i.ref_admsite_shrtname)
                      -- END REV : 014
                      AND UPPER(i.ref_admsite_shrtname) NOT IN (SELECT UPPER(site.shrtname)
                                FROM admsite       site,
                                     fingl_site    gl,
                                     hrdemp_ou     ou,
                                     finsl_gl      a,
                                     finsl_gl_site b
                               WHERE     site.code = gl.admsite_code
                                     AND gl.glcode = i.glcode
                                     AND ou.hrdemp_code = p_userid
                                     AND ou.admou_code = v_oucode
                                     AND ou.admsite_code = site.code
                                     AND gl.glcode = a.glcode
                                     AND a.code = b.finsl_gl_code
                                     AND site.code = b.admsite_code
                                     AND a.glcode = i.glcode
                                     AND coalesce(a.slcode, 0) =
                                            coalesce(i.slcode, 0)
                                     AND site.sitetype IN ('OS-OO-CM')
                                     AND site.code NOT IN (SELECT ref_admsite_code
                                               FROM global_fincosttag)
                                     AND b.ext = 'N'
                                     AND site.ext = 'N'

UNION

                              SELECT UPPER(site.shrtname)
                                FROM admsite       site,
                                     fingl_site    gl,
                                     finsl_gl      a,
                                     finsl_gl_site b
                               WHERE     site.code = gl.admsite_code
                                     AND gl.glcode = a.glcode
                                     AND a.code = b.finsl_gl_code
                                     AND site.code = b.admsite_code
                                     AND gl.glcode = i.glcode
                                     AND a.glcode = i.glcode
                                     AND a.slcode = i.slcode
                                     --START REV : 008
                                     -- site.admou_code = v_oucode
                                     AND (   site.admou_code = v_oucode
                                          OR site.ADMOU_CODE IS NULL)
                                     -- END REV : 008
                                     AND site.sitetype NOT IN ('OS-OO-CM')
                                     AND site.code NOT IN (SELECT ref_admsite_code
                                               FROM global_fincosttag)
                                     AND b.ext = 'N'
                                     AND site.ext = 'N'
                              
UNION

                              SELECT UPPER(site.shrtname)
                                FROM admsite    site,
                                     fingl_site gl,
                                     hrdemp_ou  ou
                               WHERE     site.code = gl.admsite_code
                                     AND gl.glcode = i.glcode
                                     AND site.admou_code = v_oucode
                                     AND ou.hrdemp_code = p_userid
                                     AND ou.admou_code = v_oucode
                                     AND ou.admsite_code = site.code
                                     AND i.slcode IS NULL
                                     AND site.sitetype IN ('OS-OO-CM')
                                     AND site.code NOT IN (SELECT ref_admsite_code
                                               FROM global_fincosttag)
                                     AND site.ext = 'N'
                              
UNION

                              SELECT UPPER(site.shrtname)
                                FROM admsite site, fingl_site gl
                               WHERE     site.code = gl.admsite_code
                                     AND gl.glcode = i.glcode
                                     --START REV : 008
                                     -- site.admou_code = v_oucode
                                     AND (   site.admou_code = v_oucode
                                          OR site.ADMOU_CODE IS NULL)
                                     -- END REV : 008
                                     AND i.slcode IS NULL
                                     AND site.sitetype NOT IN ('OS-OO-CM')
                                     AND site.code NOT IN (SELECT ref_admsite_code
                                               FROM global_fincosttag)
                                     AND site.ext = 'N')
                      AND userid = p_userid;
         END LOOP;
      END;

      g_mark := 'V41';

      INSERT INTO int$error_log(code,
                                 lineno,
                                 classname,
                                 userid,
                                 errortype,
                                 errordesc,
                                 createdon)
         SELECT nextval('int$error_log_code'),
                0,
                'GENVCHIMPORT',
                p_userid,
                'Data Validation',
                   'Different Ledger Narration text for same Ledger and Sub Ledger - '
                || voucher_ref,
                clock_timestamp()
           FROM (  SELECT voucher_ref, COUNT(DISTINCT ledger_nartext)
                     FROM int$stg_genvchimport
                    WHERE userid = p_userid
                 GROUP BY gl_name, sl_slid, voucher_ref
                   HAVING COUNT(DISTINCT ledger_nartext) > 1) alias5;

      -- END REV : 003
      g_mark := 'V42';

      -- chqno and chqdt validation
      INSERT INTO int$error_log(code,
                                 lineno,
                                 classname,
                                 userid,
                                 errortype,
                                 errordesc,
                                 createdon)
         SELECT nextval('int$error_log_code'),
                lineno,
                'GENVCHIMPORT',
                userid,
                'Data Validation',
                'Cheque no and date both value is required',
                clock_timestamp()
           FROM int$stg_genvchimport a

          WHERE     (   (    instrument_no IS NULL
                         AND instrument_date IS NOT NULL)
                     OR (    instrument_no IS NOT NULL
                         AND instrument_date IS NULL))
                -- end rev : 001
                AND userid = p_userid;

      g_mark := 'V43';

      INSERT INTO int$error_log(code,
                                 lineno,
                                 classname,
                                 userid,
                                 errortype,
                                 errordesc,
                                 createdon)
         SELECT nextval('int$error_log_code'),
                0,
                'GENVCHIMPORT',
                p_userid,
                'Data Validation',
                   'Different Instrument Date  for same Ledger and Sub Ledger - '
                || voucher_ref,
                clock_timestamp()
           FROM (  SELECT voucher_ref, COUNT(DISTINCT instrument_date)
                     FROM int$stg_genvchimport
                    WHERE userid = p_userid
                 GROUP BY gl_name, sl_slid, voucher_ref
                   HAVING COUNT(DISTINCT instrument_date) > 1) alias5;

      g_mark := 'V44';

      -- invalid chqdt
      INSERT INTO int$error_log(code,
                                 lineno,
                                 classname,
                                 userid,
                                 errortype,
                                 errordesc,
                                 createdon)
         SELECT nextval('int$error_log_code'),
                0,
                'GENVCHIMPORT',
                p_userid,
                'Data Validation',
                   'Different Instrument No for same Ledger and Sub Ledger - '
                || voucher_ref,
                clock_timestamp()
           FROM (  SELECT voucher_ref, COUNT(DISTINCT instrument_no)
                     FROM int$stg_genvchimport
                    WHERE userid = p_userid
                 GROUP BY gl_name, sl_slid, voucher_ref
                   HAVING COUNT(DISTINCT instrument_no) > 1) alias5;

      INSERT INTO int$error_log(code,
                                 lineno,
                                 classname,
                                 userid,
                                 errortype,
                                 errordesc,
                                 createdon)
         SELECT nextval('int$error_log_code'),
                0,
                'GENVCHIMPORT',
                p_userid,
                'Data Validation',
                   'Different Cheque Label for same Ledger and Sub Ledger - '
                || voucher_ref,
                clock_timestamp()
           FROM (  SELECT voucher_ref, COUNT(DISTINCT chq_label)
                     FROM int$stg_genvchimport
                    WHERE userid = p_userid
                 GROUP BY gl_name, sl_slid, voucher_ref
                   HAVING COUNT(DISTINCT chq_label) > 1) alias5;

      -- END REV : 003
      INSERT INTO int$error_log(code,
                                 lineno,
                                 classname,
                                 userid,
                                 errortype,
                                 errordesc,
                                 createdon)
         SELECT nextval('int$error_log_code'),
                lineno,
                'GENVCHIMPORT',
                userid,
                'Data Validation',
                   'Cheque not valid for bank ('
                || bank_cash_glname
                || ') or issued.',
                clock_timestamp()
           FROM int$stg_genvchimport a
LEFT OUTER JOIN (SELECT UPPER(glname) glname, glcode
                   FROM fingl
                  WHERE ext = 'N') gl ON (UPPER(a.bank_cash_glname) = gl.glname)
WHERE UPPER(payment_mode) = 'CHEQUE' AND LTRIM(a.instrument_no, '0') IN (SELECT LTRIM(d.chqno, '0') chqno
                          FROM finchqmain m, finchqdet d
                         WHERE     m.bookcode = d.bookcode
                               AND d.stat = 'I'
                               AND m.glcode = gl.glcode) AND a.userid = p_userid;

      -- END REV : 002
      INSERT INTO int$error_log(code,
                                 lineno,
                                 classname,
                                 userid,
                                 errortype,
                                 errordesc,
                                 createdon)
         SELECT nextval('int$error_log_code'),
                lineno,
                'GENVCHIMPORT',
                userid,
                'Data Validation',
                'Cheque level is only valid for Bank type GL',
                clock_timestamp()
           FROM int$stg_genvchimport a
LEFT OUTER JOIN (SELECT UPPER(glname) glname, srctype
                   FROM fingl
                  WHERE ext = 'N') gl ON (UPPER(a.bank_cash_glname) = gl.glname)
WHERE gl.srctype <> 'B' AND a.chq_label IS NOT NULL AND a.userid = p_userid;

      INSERT INTO int$error_log(code,
                                 lineno,
                                 classname,
                                 userid,
                                 errortype,
                                 errordesc,
                                 createdon)
         SELECT nextval('int$error_log_code'),
                lineno,
                'GENVCHIMPORT',
                userid,
                'Data Validation',
                'Cheque level is only valid for Debit amount',
                clock_timestamp()
           FROM int$stg_genvchimport a
LEFT OUTER JOIN (SELECT UPPER(glname) glname, srctype
                   FROM fingl
                  WHERE ext = 'N') gl ON (UPPER(a.bank_cash_glname) = gl.glname)
WHERE gl.srctype = 'B' AND coalesce(a.amount, 0) <= 0 AND a.chq_label IS NOT NULL AND a.userid = p_userid;

      INSERT INTO int$error_log(code,
                                 lineno,
                                 classname,
                                 userid,
                                 errortype,
                                 errordesc,
                                 createdon)
         SELECT nextval('int$error_log_code'),
                0,
                'GENVCHIMPORT',
                p_userid,
                'Data Validation',
                   'Different drawn on for same Ledger and Sub Ledger - '
                || voucher_ref,
                clock_timestamp()
           FROM (  SELECT voucher_ref, COUNT(DISTINCT drawn_on)
                     FROM int$stg_genvchimport
                    WHERE userid = p_userid
                 GROUP BY gl_name, sl_slid, voucher_ref
                   HAVING COUNT(DISTINCT drawn_on) > 1) alias5;

      -- **
      -- vchdt,scheme_doc_format,scheme_docno,bank_cash_glname, voucher_remarks
      INSERT INTO int$error_log(code,
                                 lineno,
                                 classname,
                                 userid,
                                 errortype,
                                 errordesc,
                                 createdon)
         SELECT nextval('int$error_log_code'),
                0,
                'GENVCHIMPORT',
                p_userid,
                'Data Validation',
                   'Different voucher date for same voucher ref - '
                || voucher_ref,
                clock_timestamp()
           FROM (  SELECT voucher_ref, COUNT(DISTINCT vchdt)
                     FROM int$stg_genvchimport
                    WHERE userid = p_userid
                 GROUP BY voucher_ref
                   HAVING COUNT(DISTINCT vchdt) > 1) alias5;

      INSERT INTO int$error_log(code,
                                 lineno,
                                 classname,
                                 userid,
                                 errortype,
                                 errordesc,
                                 createdon)
         SELECT nextval('int$error_log_code'),
                0,
                'GENVCHIMPORT',
                p_userid,
                'Data Validation',
                   'Different voucher number format for same voucher ref - '
                || voucher_ref,
                clock_timestamp()
           FROM (  SELECT voucher_ref, COUNT(DISTINCT scheme_doc_format)
                     FROM int$stg_genvchimport
                    WHERE userid = p_userid
                 GROUP BY voucher_ref
                   HAVING COUNT(DISTINCT scheme_doc_format) > 1) alias5;

      INSERT INTO int$error_log(code,
                                 lineno,
                                 classname,
                                 userid,
                                 errortype,
                                 errordesc,
                                 createdon)
         SELECT nextval('int$error_log_code'),
                0,
                'GENVCHIMPORT',
                p_userid,
                'Data Validation',
                   'Different voucher number for same voucher ref - '
                || voucher_ref,
                clock_timestamp()
           FROM (  SELECT voucher_ref, COUNT(DISTINCT scheme_docno)
                     FROM int$stg_genvchimport
                    WHERE userid = p_userid
                 GROUP BY voucher_ref
                   HAVING COUNT(DISTINCT scheme_docno) > 1) alias5;

      INSERT INTO int$error_log(code,
                                 lineno,
                                 classname,
                                 userid,
                                 errortype,
                                 errordesc,
                                 createdon)
         SELECT nextval('int$error_log_code'),
                0,
                'GENVCHIMPORT',
                p_userid,
                'Data Validation',
                   'Different bank cash gl name for same voucher ref - '
                || voucher_ref,
                clock_timestamp()
           FROM (  SELECT voucher_ref, COUNT(DISTINCT bank_cash_glname)
                     FROM int$stg_genvchimport
                    WHERE userid = p_userid
                 GROUP BY voucher_ref
                   HAVING COUNT(DISTINCT bank_cash_glname) > 1) alias5;

      INSERT INTO int$error_log(code,
                                 lineno,
                                 classname,
                                 userid,
                                 errortype,
                                 errordesc,
                                 createdon)
         SELECT nextval('int$error_log_code'),
                0,
                'GENVCHIMPORT',
                p_userid,
                'Data Validation',
                   'Different voucher remarks for same voucher ref - '
                || voucher_ref,
                clock_timestamp()
           FROM (  SELECT voucher_ref, COUNT(DISTINCT voucher_remarks)
                     FROM int$stg_genvchimport
                    WHERE userid = p_userid
                 GROUP BY voucher_ref
                   HAVING COUNT(DISTINCT voucher_remarks) > 1) alias5;

      -- END REV : 003
      INSERT INTO int$error_log(code,
                                 lineno,
                                 classname,
                                 userid,
                                 errortype,
                                 errordesc,
                                 createdon)
         SELECT nextval('int$error_log_code'),
                lineno,
                'GENVCHIMPORT',
                userid,
                'Data Validation',
                'Drawn on is only valid for Bank type GL',
                clock_timestamp()
           FROM int$stg_genvchimport a
LEFT OUTER JOIN (SELECT UPPER(glname) glname, srctype
                   FROM fingl
                  WHERE ext = 'N') gl ON (UPPER(a.bank_cash_glname) = gl.glname)
WHERE gl.srctype <> 'B' AND a.drawn_on IS NOT NULL AND a.userid = p_userid;

      INSERT INTO int$error_log(code,
                                 lineno,
                                 classname,
                                 userid,
                                 errortype,
                                 errordesc,
                                 createdon)
         SELECT nextval('int$error_log_code'),
                lineno,
                'GENVCHIMPORT',
                userid,
                'Data Validation',
                'Drawn on is only valid for Debit amount',
                clock_timestamp()
           FROM int$stg_genvchimport a
LEFT OUTER JOIN (SELECT UPPER(glname) glname, srctype
                   FROM fingl
                  WHERE ext = 'N') gl ON (UPPER(a.bank_cash_glname) = gl.glname)
WHERE gl.srctype = 'B' AND coalesce(a.amount, 0) <= 0 AND a.drawn_on IS NOT NULL AND a.userid = p_userid;

      g_mark := 'V47';

      -- row level validation
      INSERT INTO int$error_log(code,
                                 lineno,
                                 classname,
                                 userid,
                                 errortype,
                                 errordesc,
                                 createdon)
         SELECT nextval('int$error_log_code'),
                0,
                'GENVCHIMPORT',
                p_userid,
                'Data Validation',
                'Duplicate Sub-ledger and Site Combination.',
                clock_timestamp()
           FROM (SELECT ROW_NUMBER()
                           OVER (                           -- START REV : 003
                                 -- PARTITION BY gl_name, sl_slid, ref_admsite_shrtname
                                 -- ORDER BY gl_name, sl_slid, ref_admsite_shrtname)
                                 PARTITION BY gl_name,
                                              sl_slid,
                                              ref_admsite_shrtname,
                                              voucher_ref
                                 ORDER BY
                                    gl_name,
                                    sl_slid,
                                    ref_admsite_shrtname,
                                    voucher_ref)
                           -- END REV : 003
                           row_cnt
                   FROM int$stg_genvchimport a
                  WHERE a.userid = p_userid) t
          WHERE row_cnt > 1;

      -- START REV : 001
      -- validation for payment mode
      INSERT INTO int$error_log(code,
                                 lineno,
                                 classname,
                                 userid,
                                 errortype,
                                 errordesc,
                                 createdon)
         SELECT nextval('int$error_log_code'),
                lineno,
                'GENVCHIMPORT',
                userid,
                'Data Validation',
                'Invalid payment mode.',
                clock_timestamp()
           FROM int$stg_genvchimport a
          WHERE     a.payment_mode IS NOT NULL
                -- START REV : 003
                /*
                -- START REV : 002
                -- AND   a.payment_mode NOT IN ('CHEQUE', 'NEFT/RTGS')
                AND   upper(a.payment_mode) NOT IN ('CHEQUE', 'NEFT/RTGS')
                -- END REV : 002
                */
                AND UPPER(a.payment_mode) NOT IN ('CHEQUE', 'NEFT/RTGS', 'CASH')
                -- END REV : 003
                AND a.userid = p_userid;

      -- payment mode is mandatory for Bank type of GL
      INSERT INTO int$error_log(code,
                                 lineno,
                                 classname,
                                 userid,
                                 errortype,
                                 errordesc,
                                 createdon)
         SELECT nextval('int$error_log_code'),
                lineno,
                'GENVCHIMPORT',
                userid,
                'Data Validation',
                'Payment Mode is mandatory for Bank type of GL.',
                clock_timestamp()
           FROM int$stg_genvchimport a,
                (SELECT UPPER(g.glname) glname
                   FROM fingl g
                  WHERE g.srctype = 'B') gl
          WHERE     UPPER(a.bank_cash_glname) = gl.glname
                AND a.payment_mode IS NULL
                AND a.userid = p_userid;

      -- payment mode is mandatory for Bank type of GL
      INSERT INTO int$error_log(code,
                                 lineno,
                                 classname,
                                 userid,
                                 errortype,
                                 errordesc,
                                 createdon)
         SELECT nextval('int$error_log_code'),
                lineno,
                'GENVCHIMPORT',
                userid,
                'Data Validation',
                'Instrument details are not allowed for Cash type of GL.',
                clock_timestamp()
           FROM int$stg_genvchimport a,
                (SELECT UPPER(g.glname) glname
                   FROM fingl g
                  WHERE g.srctype = 'C') gl
          WHERE     UPPER(a.bank_cash_glname) = gl.glname
                AND (   a.payment_mode IS NOT NULL
                     OR a.instrument_no IS NOT NULL
                     OR a.instrument_date IS NOT NULL
                     OR a.chq_label IS NOT NULL
                     OR a.drawn_on IS NOT NULL)
                AND a.userid = p_userid;
				
         INSERT INTO int$error_log(code, lineno, classname, userid, errortype, errordesc, createdon)
            SELECT nextval('int$error_log_code'), lineno, 'GENVCHIMPORT', userid, 'Date Validation',
                   'Instrument date cannot be greater than entry date.', clock_timestamp()
            FROM   int$stg_genvchimport a
            WHERE  a.instrument_date is not null
            AND    a.vchdt is not null
            AND    a.vchdt < a.instrument_date
            AND    a.userid = p_userid;

      -- END REV : 001
      g_mark := 'V48';

      -- check whether records are valid or not
      BEGIN
         SELECT 'S'
           INTO STRICT v_status

          WHERE EXISTS (SELECT 'S'
                      FROM int$error_log
                     WHERE userid = p_userid);

         RETURN('0');
      EXCEPTION
         WHEN no_data_found
         THEN
            RETURN('1');
      END;
   EXCEPTION
      WHEN OTHERS
      THEN
         errcode := SQLSTATE;
         errmsg := SQLERRM;

         INSERT INTO int$error_log(code,
                                    lineno,
                                    classname,
                                    userid,
                                    errortype,
                                    errordesc,
                                    createdon)
              VALUES (nextval('int$error_log_code'),
                      0,
                      'GENVCHIMPORT',
                      p_userid,
                      errcode,
                      errmsg || ',' || g_mark,
                      clock_timestamp());

         --COMMIT;

         RETURN('0');
   END;

"""
  returnType = character
  arguments = <
    {
      name = p_userid
      type = bigint
      mode = IN
    }

    {
      name = p_connect_site
      type = bigint
      mode = IN
    }

    {
      name = p_logging_date
      type = timestamp without time zone
      mode = IN
    }

    {
      name = p_connect_ou
      type = bigint
      mode = IN
    }

  >
  language = plpgsql
}

function "main"."int$pkg_genvchimport_int$pkg_genvchimport_validate(bigint, bigint, timestamp without time zone, bigint)" {
  text = """

 
DECLARE
  -- Change this to reflect the dblink connection string
    --v_conn_str  text := format('port=%s dbname=%s user=%s', current_setting('port'), current_database(), current_user);
    v_srvname       name;
    v_connname      text;
    v_connstr       text;
    v_conn_result   text;
    v_query         text;
    v_ret    text;
BEGIN
	v_srvname := 'foreign_pgbase';
    v_connname := replace(uuid_generate_v4()::text,'-','');
    v_connstr  := v_srvname;
    
    --Open the connection  
    SELECT dblink_connect(v_connname,v_connstr) 
    INTO v_conn_result;

	v_query := 'SELECT * FROM int$pkg_genvchimport_int$pkg_genvchimport_validate_atx ( ' || quote_nullable(p_userid::text) || '::bigint,' || quote_nullable(p_connect_site::text) || '::bigint,' || quote_nullable(p_logging_date::text) || '::timestamp without time zone,' || quote_nullable(p_connect_ou::text) || '::bigint )';
	SELECT * INTO v_ret FROM dblink(v_connname, v_query) AS p (ret text);

	
	SELECT dblink_disconnect(v_connname) 
    INTO v_conn_result;
	
	RETURN v_ret;
EXCEPTION 
   WHEN OTHERS THEN
        SELECT dblink_disconnect(v_connname) 
        INTO v_conn_result;

END;
"""
  returnType = text
  arguments = <
    {
      name = p_userid
      type = bigint
      mode = IN
    }

    {
      name = p_connect_site
      type = bigint
      mode = IN
    }

    {
      name = p_logging_date
      type = timestamp without time zone
      mode = IN
    }

    {
      name = p_connect_ou
      type = bigint
      mode = IN
    }

  >
  language = plpgsql
}

