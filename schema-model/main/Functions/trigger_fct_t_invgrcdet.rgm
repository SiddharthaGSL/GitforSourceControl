function "main"."trigger_fct_t_invgrcdet()" {
  text = """

DECLARE
   V_TYPE              varchar(100);
   V_DETAIL_CODE       INVSTOCK.DETAIL_CODE%TYPE;
   V_ENTCODE           INVSTOCK.ENTCODE%TYPE;
   V_ENTNO             INVSTOCK.ENTNO%TYPE;
   V_ENTDT             INVSTOCK.ENTDT%TYPE;
   V_ENTTYPE           INVSTOCK.ENTTYPE%TYPE;
   V_LOCCODE           INVSTOCK.LOCCODE%TYPE;
   V_YCODE             INVSTOCK.YCODE%TYPE;
   V_NEW_ICODE         INVSTOCK.ICODE%TYPE;
   V_OLD_ICODE         INVSTOCK.ICODE%TYPE;
   V_NEW_QTY           INVSTOCK.QTY%TYPE;
   V_OLD_QTY           INVSTOCK.QTY%TYPE;
   V_NEW_RATE          INVSTOCK.RATE%TYPE;
   V_OLD_RATE          INVSTOCK.RATE%TYPE;
   V_REFPCODE          INVSTOCK.REFPCODE%TYPE;
   V_REFLOCCODE        INVSTOCK.REFLOCCODE%TYPE;
   V_REFCMPCODE        INVSTOCK.REFCMPCODE%TYPE;
   V_REFGLCODE         INVSTOCK.REFGLCODE%TYPE;
   -- START REV : 010
   --V_REFDEPTCODE       INVSTOCK.REFDEPTCODE%TYPE;
   V_REFDEPTCODE       char(1):=  NULL;
   -- END REV : 010
   V_REFPRCODE         INVSTOCK.REFPRCODE%TYPE;
   V_REFDOCNO          INVSTOCK.REFDOCNO%TYPE;
   -- START REV : 010
  /* V_REFPKGCODE        INVSTOCK.REFPKGCODE%TYPE;
   V_REFDCCODE         INVSTOCK.REFDCCODE%TYPE;
   */
   V_REFPKGCODE        char(1) :=  NULL;
   V_REFDCCODE         char(1) :=  NULL;
   -- END REV : 010
   V_OTHER_RATE        INVSTOCK.RATE%TYPE;
   V_SCHEME_DOCNO      INVSTOCK.SCHEME_DOCNO%TYPE;
   V_ADMSITE_CODE_IN   INVSTOCK.ADMSITE_CODE%TYPE;
   -- START REV : 009
   V_AUTH_ECODE        INVGRCMAIN.AUTH_ECODE%TYPE;
   V_PSITE_STKPT_CODE  INVSTOCK.PSITE_STOCKPOINT_CODE%TYPE;
   -- END REV : 009
   V_SITETYPE          ADMSITE.SITETYPE%TYPE;
   V_ISSECONDARY       INVSTOCK.ISSECONDARY%TYPE;
   V_SITE_UPD_COST     INVSTOCK.SITE_UPD_COST%TYPE;
   V_UPD_COST          INVSTOCK.UPD_COST%TYPE;
BEGIN
  BEGIN
 /*******************************************************************************************************************
  No.            Date          Author                  Description
  ---------   ----------    ----------------------  ------------------------------------------------------------------
  REV : 001   15/04/2008    SHANKAR                 (BUG ID : 586) Goods Receive Challan and Delivery Challan
                                                                   against Order: Category wise search criteria
                                                                   to be added in Populate pending item option
  REV : 002   20/11/2008    ABHI                    (BUG ID : 839) PO - GRC Tagging Revamp.
  REV : 003   02-JUN-2009   SHANKAR                 (BUG ID : 1325) To add Item level remarks
  REV : 004   02-JUN-2009   RAJKUMAR                (BUG ID : 0842) Replace NETAMT with EFFAMT for RATE calculation.
  REV : 005   17-NOV-2010   MANASH                  (BUG ID : 2261) Item rate, amount, and scheme doc number is
                                                                    not getting inserted in Stock table.
  REV  : 006  16-MAY-2011   MANASH                  (BUG ID : 3199) Rate column not getting updated when effamt is
                                                                    null.
  REV  : 007  21-MAY-2011   MANASH                  (BUG ID : 3163) EFFAMT getting null when charge is not
                                                                    calculated.
  REV : 008   06-FEB-2012   DIPTIMAN                (BUG ID : 216)  Site related changes.
  REV : 009   25-FEB-2013   DIPTIMAN                (BUG ID : 502)  PSITE STOCKPOINT related changes.
  REV : 010   08-MAR-2017   MOUSUMI                 (TFS ID : 26511)  MS-CO-OM-TS
  REV : 011   10-MAY-2017   MANASH                  (TFS ID : 21200)  COGS revamp.
  REV : 012   01-SEP-2017  MOUSUMI                  (TFS ID : 31941)  PADN
  REV : 013   10-JAN-2018   DIPTIMAN                (TFS ID : 16842) For Local Procurement (Managed Site), Item is getting posted without authorization.
  REV : 014   13-NOV-2017   DIPTIMAN                (TFS ID : 32259) COGS costrate related changes.
  REV : 015   07-MAR-2022   ANINDYA                 (TFS ID : BATCH_SERIAL) Introduction of Batch Serial Id in inventory posting
*******************************************************************************************************************/
   -- START REV : 011
   IF       TG_OP = 'INSERT' THEN
            V_TYPE := 'INSERTING';
   ELSIF    TG_OP = 'UPDATE' THEN
            V_TYPE := 'UPDATING';
   ELSIF    TG_OP = 'DELETE' THEN
            V_TYPE := 'DELETING';
   END IF;
   -- END REV : 011
   SELECT GRCNO ENTNO
         ,GRCDT ENTDT
         ,'GRC' ENTTYPE
         ,YCODE YCODE
         ,LOCCODE LOCCODE
         ,PCODE REFPCODE
         ,NULL REFLOCCODE
         ,NULL REFCMPCODE
         ,NULL REFGLCODE
         ,NULL REFDEPTCODE
         ,NULL REFPRCODE
         ,DOCNO REFDOCNO
         ,NULL REFPKGCODE
         ,SCHEME_DOCNO
         ,ADMSITE_CODE_IN
         -- START REV : 009
         ,AUTH_ECODE
         ,PSITE_STOCKPOINT_CODE
         -- END REV : 009
         -- START REV :010
         ,DB_FUN_GET_SITETYPE(ADMSITE_CODE_IN) SITETYPE
         ,CASE WHEN DB_FUN_GET_SITETYPE(ADMSITE_CODE_IN)='MS-CO-OM-TS' THEN 'N'  ELSE NULL END  UPD_COST
         ,CASE WHEN DB_FUN_GET_SITETYPE(ADMSITE_CODE_IN)='MS-CO-OM-TS' THEN 'Y'  ELSE NULL END  ISSECONDARY
         ,CASE WHEN DB_FUN_GET_SITETYPE(ADMSITE_CODE_IN)='MS-CO-OM-TS' THEN 'Y'  ELSE NULL END  SITE_UPD_COST
         -- END REV : 010
   INTO STRICT   V_ENTNO
         ,V_ENTDT
         ,V_ENTTYPE
         ,V_YCODE
         ,V_LOCCODE
         ,V_REFPCODE
         ,V_REFLOCCODE
         ,V_REFCMPCODE
         ,V_REFGLCODE
         ,V_REFDEPTCODE
         ,V_REFPRCODE
         ,V_REFDOCNO
         ,V_REFPKGCODE
         ,V_SCHEME_DOCNO
         ,V_ADMSITE_CODE_IN
         -- START REV : 009
         ,V_AUTH_ECODE
         ,V_PSITE_STKPT_CODE
         -- END REV : 009
         -- START REV : 010
         ,V_SITETYPE
         ,V_UPD_COST
         ,V_ISSECONDARY
         ,V_SITE_UPD_COST
         -- END REV : 010
   FROM   INVGRCMAIN
   WHERE  GRCCODE = coalesce(NEW.GRCCODE, OLD.GRCCODE);

   V_DETAIL_CODE:= coalesce(NEW.CODE, OLD.CODE);
   V_ENTCODE    := coalesce(NEW.GRCCODE, OLD.GRCCODE);
   V_NEW_ICODE  := NEW.ICODE;
   V_OLD_ICODE  := OLD.ICODE;
   V_NEW_QTY    := NEW.ACQTY;
   V_OLD_QTY    := OLD.ACQTY;
   -- START REV : 012
  /* V_NEW_RATE   := ROUND(NVL(:NEW.EFFAMT, 0) / NVL(:NEW.ACQTY, 1), 3);
   V_OLD_RATE   := ROUND(NVL(:OLD.EFFAMT, 0) / NVL(:OLD.ACQTY, 1), 3);*/
   IF NEW.ACQTY <> 0 THEN
   V_NEW_RATE   := round((coalesce(NEW.EFFAMT, 0) / coalesce(NEW.ACQTY, 1))::numeric, 3);
   END IF;
   IF OLD.ACQTY <> 0 THEN
   V_OLD_RATE   := round((coalesce(OLD.EFFAMT, 0) / coalesce(OLD.ACQTY, 1))::numeric, 3);
   END IF;
   -- END REV : 012
   
   -- START REV : 009
	<<END_POSTING>>
	BEGIN
	   	IF  V_PSITE_STKPT_CODE IS NOT NULL AND V_AUTH_ECODE IS NULL THEN
       		EXIT END_POSTING;
		END IF;
   -- END REV : 009
   -- START REV : 012
   -- END REV : 012
   CALL DB_PKG_STOCK$REFLECT(V_DETAIL_CODE::text
                       ,V_TYPE::text
                       ,V_ENTCODE::text
                       ,V_ENTNO::bigint
                       ,V_ENTDT::timestamp without time zone
                       ,V_ENTTYPE::text
                       ,V_LOCCODE::bigint
                       ,V_YCODE::bigint
                       ,V_NEW_ICODE::text
                       ,V_OLD_ICODE::text
                       ,V_NEW_QTY
                       ,V_OLD_QTY
                       ,V_NEW_RATE
                       ,V_OLD_RATE
                       ,V_REFPCODE::bigint
                       ,V_REFLOCCODE::bigint
                       ,V_REFCMPCODE::bigint
                       ,V_REFGLCODE::bigint
                       ,V_REFDEPTCODE::bigint
                       ,V_REFPRCODE::bigint
                       ,V_REFDOCNO::text
                        ,V_REFPKGCODE::bigint
                       ,V_REFDCCODE::bigint
                       ,V_OTHER_RATE::bigint
                       ,V_SCHEME_DOCNO::text
                       ,NULL::TEXT
                       -- START REV : 010
                       --,NULL
                       ,V_UPD_COST
                       -- END REV : 010
                       ,NEW.REM::TEXT
                       ,V_ADMSITE_CODE_IN
                       -- START REV : 009
                       -- START REV : 010
                       /*,NULL
                       ,NULL*/
                       ,V_ISSECONDARY
                       ,V_SITE_UPD_COST
                       -- END REV : 010
                       ,NULL::BIGINT
                       ,NULL::BIGINT
                       ,V_PSITE_STKPT_CODE::TEXT
                       -- END REV : 009
                       -- START REV : 014
                       ,NULL::BIGINT
                       ,NULL::BIGINT
                       ,NULL::BIGINT
                       ,NULL::BIGINT
                       ,NULL::TEXT
                       ,NULL::BIGINT
                       ,NULL::BIGINT
                       ,NULL::BIGINT
                       ,NULL::BIGINT
                       ,NULL::BIGINT
                       ,NULL::BIGINT
                       ,coalesce(V_NEW_RATE, V_OLD_RATE)::BIGINT
                       -- END REV : 014
                       -- START REV : 015
                       ,NULL::TEXT
                       ,NULL::TEXT
                       ,NULL::TEXT
                       ,NULL::timestamp without time zone
                       ,NULL::timestamp without time zone
                       ,coalesce(NEW.INVBATCH_SERIAL_CODE, OLD.INVBATCH_SERIAL_CODE)
                       -- END REV : 015
                       );
      -- START REV : 012
       CALL p_grc_ZERO_QTY_del(V_ENTCODE,V_DETAIL_CODE);
       -- END REV : 012

   -- START REV : 009
   -- END REV : 009
--END IF;
END;
EXCEPTION
    WHEN OTHERS THEN
    CALL ERRAUDIT(USER, 'T_INVGRCDET', SQLSTATE, SQLERRM);
    -- START REV : 014
    RAISE;
    -- END REV : 014
  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
"""
  returnType = trigger
  arguments = [
  ]
  language = plpgsql
}

