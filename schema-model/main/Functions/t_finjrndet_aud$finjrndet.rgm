function "main"."t_finjrndet_aud$finjrndet()" {
  text = """

DECLARE
    V_RECORD_OLD AUD_FINJRNDET%ROWTYPE;
	V_RECORD_NEW AUD_FINJRNDET%ROWTYPE;
    V_SID DOUBLE PRECISION;
    V_TRNID CHARACTER VARYING(50);
    V_ACTION CHARACTER VARYING(10);
    I RECORD;    
	V_AUDIT_USER CHARACTER VARYING (100);
	V_LOGINUSER  CHARACTER VARYING (100);
	V_PROGRAM    CHARACTER VARYING (100);
	V_REC_COUNT  BIGINT; 
   
BEGIN
       SELECT current_setting('audit.AUDIT_USER', true) INTO V_AUDIT_USER;
	   IF NULLIF(V_AUDIT_USER,'') IS NOT NULL THEN  
		   BEGIN
				SELECT FULLNAME
				INTO   STRICT V_LOGINUSER
				FROM   APPUSER
				WHERE  ID =  substring (V_AUDIT_USER,8,position(';' in V_AUDIT_USER)-8)::NUMERIC; 
		   EXCEPTION
				WHEN no_data_found
				THEN
					V_LOGINUSER := 'System';
			END;			
		ELSE
			V_LOGINUSER := 'SYSTEM';
		END IF;
	   
	   select application_name
	   INTO   V_PROGRAM
	   from pg_stat_activity where pid = pg_backend_pid();

       V_ACTION:=TG_OP;
	   
       SELECT TXID_CURRENT() INTO V_TRNID;
       
        IF TG_OP = 'INSERT' OR  TG_OP = 'UPDATE' THEN 
	   
           V_RECORD_NEW.ACTION := V_ACTION;
           V_RECORD_NEW.ACTION_SUBTYPE := 'NEW';
           V_RECORD_NEW.TRANSACTION_ID := V_TRNID::TEXT;		   
		   V_RECORD_NEW.jrncode := NEW.jrncode;
            V_RECORD_NEW.jrnno := NEW.jrnno;
            V_RECORD_NEW.jrndt := NEW.jrndt;
            V_RECORD_NEW.jrntype := NEW.jrntype;
            V_RECORD_NEW.glcode := NEW.glcode;
            V_RECORD_NEW.slcode := NEW.slcode;
            V_RECORD_NEW.damount := NEW.damount;
            V_RECORD_NEW.camount := NEW.camount;
            V_RECORD_NEW.ycode := NEW.ycode;
            V_RECORD_NEW.nartext := NEW.nartext;
            V_RECORD_NEW.code := NEW.code;
            V_RECORD_NEW.gl_cc_appl := NEW.gl_cc_appl;
            V_RECORD_NEW.adjamt := NEW.adjamt;
            V_RECORD_NEW.tdstypecode := NEW.tdstypecode;
            V_RECORD_NEW.tdssrccode := NEW.tdssrccode;
            V_RECORD_NEW.tdssection := NEW.tdssection;
            V_RECORD_NEW.tdsrate := NEW.tdsrate;
            V_RECORD_NEW.tds_appamt := NEW.tds_appamt;
            V_RECORD_NEW.certificateno := NEW.certificateno;
            V_RECORD_NEW.tds_roundoff_amt := NEW.tds_roundoff_amt;
            V_RECORD_NEW.tds_grossamt := NEW.tds_grossamt;
            V_RECORD_NEW.ref_admsite_code := NEW.ref_admsite_code;
            V_RECORD_NEW.finvchdet_code := NEW.finvchdet_code;
            V_RECORD_NEW.tds_journal_code := NEW.tds_journal_code;
            V_RECORD_NEW.tds_rev_amt := NEW.tds_rev_amt;
            V_RECORD_NEW.tds_rev_app_amt := NEW.tds_rev_app_amt;
            V_RECORD_NEW.dataversion := NEW.dataversion;
          END IF;  
            
         IF TG_OP = 'UPDATE' OR TG_OP = 'DELETE' THEN 
	   
            V_RECORD_OLD.ACTION := V_ACTION;
            V_RECORD_OLD.ACTION_SUBTYPE := 'OLD';
            V_RECORD_OLD.TRANSACTION_ID := V_TRNID::TEXT;			
			V_RECORD_OLD.jrncode := OLD.jrncode;
            V_RECORD_OLD.jrnno := OLD.jrnno;
            V_RECORD_OLD.jrndt := OLD.jrndt;
            V_RECORD_OLD.jrntype := OLD.jrntype;
            V_RECORD_OLD.glcode := OLD.glcode;
            V_RECORD_OLD.slcode := OLD.slcode;
            V_RECORD_OLD.damount := OLD.damount;
            V_RECORD_OLD.camount := OLD.camount;
            V_RECORD_OLD.ycode := OLD.ycode;
            V_RECORD_OLD.nartext := OLD.nartext;
            V_RECORD_OLD.code := OLD.code;
            V_RECORD_OLD.gl_cc_appl := OLD.gl_cc_appl;
            V_RECORD_OLD.adjamt := OLD.adjamt;
            V_RECORD_OLD.tdstypecode := OLD.tdstypecode;
            V_RECORD_OLD.tdssrccode := OLD.tdssrccode;
            V_RECORD_OLD.tdssection := OLD.tdssection;
            V_RECORD_OLD.tdsrate := OLD.tdsrate;
            V_RECORD_OLD.tds_appamt := OLD.tds_appamt;
            V_RECORD_OLD.certificateno := OLD.certificateno;
            V_RECORD_OLD.tds_roundoff_amt := OLD.tds_roundoff_amt;
            V_RECORD_OLD.tds_grossamt := OLD.tds_grossamt;
            V_RECORD_OLD.ref_admsite_code := OLD.ref_admsite_code;
            V_RECORD_OLD.finvchdet_code := OLD.finvchdet_code;
            V_RECORD_OLD.tds_journal_code := OLD.tds_journal_code;
            V_RECORD_OLD.tds_rev_amt := OLD.tds_rev_amt;
            V_RECORD_OLD.tds_rev_app_amt := OLD.tds_rev_app_amt;
            V_RECORD_OLD.dataversion := OLD.dataversion;
          END IF;  

    IF TG_OP = 'INSERT' THEN
	    V_REC_COUNT := 1;
        INSERT INTO AUD_FINJRNDET SELECT V_RECORD_NEW.*;
    END IF;

    IF TG_OP = 'UPDATE' THEN
	FOR I IN (
		SELECT 
		V_RECORD_OLD.tds_rev_app_amt,
                  V_RECORD_OLD.tds_rev_amt,
                  V_RECORD_OLD.ref_admsite_code,
                  V_RECORD_OLD.tds_grossamt,
                  V_RECORD_OLD.tds_roundoff_amt,
                  V_RECORD_OLD.tds_appamt,
                  V_RECORD_OLD.tdsrate,
                  V_RECORD_OLD.tdssection,
                  V_RECORD_OLD.tdssrccode,
                  V_RECORD_OLD.tdstypecode,
                  V_RECORD_OLD.adjamt,
                  V_RECORD_OLD.gl_cc_appl,
                  V_RECORD_OLD.nartext,
                  V_RECORD_OLD.camount,
                  V_RECORD_OLD.damount,
                  V_RECORD_OLD.slcode,
                  V_RECORD_OLD.glcode
		EXCEPT
		SELECT 
		V_RECORD_NEW.tds_rev_app_amt,
                  V_RECORD_NEW.tds_rev_amt,
                  V_RECORD_NEW.ref_admsite_code,
                  V_RECORD_NEW.tds_grossamt,
                  V_RECORD_NEW.tds_roundoff_amt,
                  V_RECORD_NEW.tds_appamt,
                  V_RECORD_NEW.tdsrate,
                  V_RECORD_NEW.tdssection,
                  V_RECORD_NEW.tdssrccode,
                  V_RECORD_NEW.tdstypecode,
                  V_RECORD_NEW.adjamt,
                  V_RECORD_NEW.gl_cc_appl,
                  V_RECORD_NEW.nartext,
                  V_RECORD_NEW.camount,
                  V_RECORD_NEW.damount,
                  V_RECORD_NEW.slcode,
                  V_RECORD_NEW.glcode
			 )
	LOOP
	  V_REC_COUNT := 1; 
		INSERT INTO AUD_FINJRNDET SELECT V_RECORD_OLD.*;
       INSERT INTO AUD_FINJRNDET SELECT V_RECORD_NEW.*;    
	END LOOP;   
    END IF;

    IF TG_OP = 'DELETE' THEN
		V_REC_COUNT := 1;
		INSERT INTO AUD_FINJRNDET SELECT V_RECORD_OLD.*;
    END IF;
	
	IF V_REC_COUNT >  0
	THEN
	   BEGIN
            INSERT INTO AUD_TRANSACTION (TRANSACTION_ID, TRANSACTION_DATE, LOGIN_USER, PROGRAM, MODULE_SHORTCODE, MODULE_TYPE)
            VALUES (V_TRNID,   current_date,V_LOGINUSER, V_PROGRAM, 'Journal', 'Journal');
       EXCEPTION WHEN unique_violation THEN
            NULL;
       END;  

       BEGIN  
             INSERT INTO AUD_TRANSACTION_TABLE (TRANSACTION_ID, TABLE_NAME)
             VALUES (V_TRNID,  'FINJRNDET');
       EXCEPTION WHEN unique_violation THEN
             NULL;
       END; 
	END IF;   
    

    IF TG_OP = 'INSERT' THEN
        RETURN NEW;
    ELSIF TG_OP = 'UPDATE' THEN
        RETURN NEW;
    ELSIF TG_OP = 'DELETE' THEN
        RETURN OLD;
    END IF;
    EXCEPTION
        WHEN others THEN
            CALL main.erraudit(SESSION_USER::text, 'T_FINJRNDET_AUD'::CHARACTER, SQLSTATE::text, SQLERRM);
			RAISE;
			RETURN NULL;
END;
"""
  returnType = trigger
  arguments = [
  ]
  language = plpgsql
}

