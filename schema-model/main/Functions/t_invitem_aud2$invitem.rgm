function "main"."t_invitem_aud2$invitem()" {
  text = """



DECLARE
    V_RECORD_OLD AUD2_INVITEM%ROWTYPE;
	V_RECORD_NEW AUD2_INVITEM%ROWTYPE;
    V_SID DOUBLE PRECISION;
    V_TRNID CHARACTER VARYING(50);
    V_ACTION CHARACTER VARYING(10);
	Client_Info CHARACTER VARYING(500);
    I RECORD;    
	V_AUDIT_USER CHARACTER VARYING (100);
	V_LOGINUSER  CHARACTER VARYING (100);
	V_PROGRAM    CHARACTER VARYING (100);
	V_REC_COUNT  BIGINT; 
	v_last_action CHARACTER VARYING(20);
   	v_app_info CHARACTER VARYING(500);
BEGIN

       select application_name
	   INTO   Client_Info
	   from pg_stat_activity where pid = pg_backend_pid();
	   
       SELECT current_setting('audit.AUDIT_USER', true) INTO v_app_info;
	   
	   IF NULLIF(v_app_info,'') IS NULL THEN
	   		BEGIN
				SELECT  VALUE
       			INTO V_AUDIT_USER FROM parse_userinfo(Client_Info) where key = 'USERID';
			END;
		ELSE
			SELECT  VALUE
       		INTO V_AUDIT_USER FROM parse_userinfo(v_app_info) where key = 'USERID';
		END IF;

	   IF NULLIF(V_AUDIT_USER,'') IS NOT NULL THEN  
		   BEGIN
				SELECT FULLNAME
				INTO   STRICT V_LOGINUSER
				FROM   APPUSER
				WHERE  ID =  V_AUDIT_USER::NUMERIC; --??
		   EXCEPTION
				WHEN no_data_found
				THEN
					V_LOGINUSER := 'System';
			END;			
		ELSE
			V_LOGINUSER := 'SYSTEM';
		END IF;
	   
       -- Initialize V_Program
	   select application_name
	   INTO   V_PROGRAM
	   from pg_stat_activity where pid = pg_backend_pid();

       V_ACTION:=TG_OP;
	   
       SELECT TXID_CURRENT() INTO V_TRNID;
       
        IF TG_OP = 'INSERT' OR  TG_OP = 'UPDATE' THEN 
	   
           V_RECORD_NEW.ACTION := V_ACTION;
           V_RECORD_NEW.ACTION_SUBTYPE := 'NEW';
           V_RECORD_NEW.TRANSACTION_ID := V_TRNID::TEXT;		   
		   V_RECORD_NEW.icode := NEW.icode;
            V_RECORD_NEW.grpcode := NEW.grpcode;
            V_RECORD_NEW.cname1 := NEW.cname1;
            V_RECORD_NEW.ccode1 := NEW.ccode1;
            V_RECORD_NEW.cname2 := NEW.cname2;
            V_RECORD_NEW.ccode2 := NEW.ccode2;
            V_RECORD_NEW.cname3 := NEW.cname3;
            V_RECORD_NEW.ccode3 := NEW.ccode3;
            V_RECORD_NEW.cname4 := NEW.cname4;
            V_RECORD_NEW.ccode4 := NEW.ccode4;
            V_RECORD_NEW.cname5 := NEW.cname5;
            V_RECORD_NEW.ccode5 := NEW.ccode5;
            V_RECORD_NEW.cname6 := NEW.cname6;
            V_RECORD_NEW.ccode6 := NEW.ccode6;
            V_RECORD_NEW.rate := NEW.rate;
            V_RECORD_NEW.mrp := NEW.mrp;
            V_RECORD_NEW.barrq := NEW.barrq;
            V_RECORD_NEW.barunit := NEW.barunit;
            V_RECORD_NEW.rem := NEW.rem;
            V_RECORD_NEW.ext := NEW.ext;
            V_RECORD_NEW.taxcode := NEW.taxcode;
            V_RECORD_NEW.partycode := NEW.partycode;
            V_RECORD_NEW.partyname := NEW.partyname;
            V_RECORD_NEW.generated := NEW.generated;
            V_RECORD_NEW.last_changed := NEW.last_changed;
            V_RECORD_NEW.cmpcode := NEW.cmpcode;
            V_RECORD_NEW.unitname := NEW.unitname;
            V_RECORD_NEW.charge := NEW.charge;
            V_RECORD_NEW.grccode := NEW.grccode;
            V_RECORD_NEW.stkplancode := NEW.stkplancode;
            V_RECORD_NEW.barcode := NEW.barcode;
            V_RECORD_NEW.listed_mrp := NEW.listed_mrp;
            V_RECORD_NEW.expiry_date := NEW.expiry_date;
            V_RECORD_NEW.partyalias := NEW.partyalias;
            V_RECORD_NEW.stockindate := NEW.stockindate;
            V_RECORD_NEW.considerinorder := NEW.considerinorder;
            V_RECORD_NEW.shrtname := NEW.shrtname;
            V_RECORD_NEW.considerasfree := NEW.considerasfree;
            V_RECORD_NEW.noninventory := NEW.noninventory;
            V_RECORD_NEW.costrate := NEW.costrate;
            V_RECORD_NEW.wsp := NEW.wsp;
            V_RECORD_NEW.invarticle_code := NEW.invarticle_code;
            V_RECORD_NEW.allow_price_modification := NEW.allow_price_modification;
            V_RECORD_NEW.alt_mrp := NEW.alt_mrp;
            V_RECORD_NEW.alt_listed_mrp := NEW.alt_listed_mrp;
            V_RECORD_NEW.isservice := NEW.isservice;
            V_RECORD_NEW.service_days := NEW.service_days;
            V_RECORD_NEW.pos_multiprice_action := NEW.pos_multiprice_action;
            V_RECORD_NEW.negative_stock_alert := NEW.negative_stock_alert;
            V_RECORD_NEW.ismetal := NEW.ismetal;
            V_RECORD_NEW.item_name := NEW.item_name;
            V_RECORD_NEW.price_terms := NEW.price_terms;
            V_RECORD_NEW.price_basis := NEW.price_basis;
            V_RECORD_NEW.invmetal_code := NEW.invmetal_code;
            V_RECORD_NEW.net_weight := NEW.net_weight;
            V_RECORD_NEW.grs_weight := NEW.grs_weight;
            V_RECORD_NEW.job_cost_basis := NEW.job_cost_basis;
            V_RECORD_NEW.job_cost_amt := NEW.job_cost_amt;
            V_RECORD_NEW.part_qty := NEW.part_qty;
            V_RECORD_NEW.certificate_no := NEW.certificate_no;
            V_RECORD_NEW.d_count := NEW.d_count;
            V_RECORD_NEW.d_size := NEW.d_size;
            V_RECORD_NEW.d_weight := NEW.d_weight;
            V_RECORD_NEW.d_value := NEW.d_value;
            V_RECORD_NEW.d_desc := NEW.d_desc;
            V_RECORD_NEW.c_count := NEW.c_count;
            V_RECORD_NEW.c_weight := NEW.c_weight;
            V_RECORD_NEW.c_value := NEW.c_value;
            V_RECORD_NEW.c_desc := NEW.c_desc;
            V_RECORD_NEW.o_count := NEW.o_count;
            V_RECORD_NEW.o_weight := NEW.o_weight;
            V_RECORD_NEW.o_value := NEW.o_value;
            V_RECORD_NEW.o_desc := NEW.o_desc;
            V_RECORD_NEW.other_chg := NEW.other_chg;
            V_RECORD_NEW.material_type := NEW.material_type;
            V_RECORD_NEW.routecode := NEW.routecode;
            V_RECORD_NEW.costsheet_code := NEW.costsheet_code;
            V_RECORD_NEW.desc1 := NEW.desc1;
            V_RECORD_NEW.desc2 := NEW.desc2;
            V_RECORD_NEW.desc3 := NEW.desc3;
            V_RECORD_NEW.desc4 := NEW.desc4;
            V_RECORD_NEW.desc5 := NEW.desc5;
            V_RECORD_NEW.desc6 := NEW.desc6;
            V_RECORD_NEW.num1 := NEW.num1;
            V_RECORD_NEW.num2 := NEW.num2;
            V_RECORD_NEW.num3 := NEW.num3;
            V_RECORD_NEW.block_sale := NEW.block_sale;
            V_RECORD_NEW.block_sale_before := NEW.block_sale_before;
            V_RECORD_NEW.block_sale_after := NEW.block_sale_after;
            V_RECORD_NEW.block_sale_reason := NEW.block_sale_reason;
            V_RECORD_NEW.isprice_excludes_tax := NEW.isprice_excludes_tax;
            V_RECORD_NEW.autoqtypopup := NEW.autoqtypopup;
            V_RECORD_NEW.pos_return_behavior := NEW.pos_return_behavior;
            V_RECORD_NEW.search_string := NEW.search_string;
            V_RECORD_NEW.price_change_limit := NEW.price_change_limit;
            V_RECORD_NEW.udfstring01 := NEW.udfstring01;
            V_RECORD_NEW.udfstring02 := NEW.udfstring02;
            V_RECORD_NEW.udfstring03 := NEW.udfstring03;
            V_RECORD_NEW.udfstring04 := NEW.udfstring04;
            V_RECORD_NEW.udfstring05 := NEW.udfstring05;
            V_RECORD_NEW.udfstring06 := NEW.udfstring06;
            V_RECORD_NEW.udfstring07 := NEW.udfstring07;
            V_RECORD_NEW.udfstring08 := NEW.udfstring08;
            V_RECORD_NEW.udfstring09 := NEW.udfstring09;
            V_RECORD_NEW.udfstring10 := NEW.udfstring10;
            V_RECORD_NEW.udfnum01 := NEW.udfnum01;
            V_RECORD_NEW.udfnum02 := NEW.udfnum02;
            V_RECORD_NEW.udfnum03 := NEW.udfnum03;
            V_RECORD_NEW.udfnum04 := NEW.udfnum04;
            V_RECORD_NEW.udfnum05 := NEW.udfnum05;
            V_RECORD_NEW.udfdate01 := NEW.udfdate01;
            V_RECORD_NEW.udfdate02 := NEW.udfdate02;
            V_RECORD_NEW.udfdate03 := NEW.udfdate03;
            V_RECORD_NEW.udfdate04 := NEW.udfdate04;
            V_RECORD_NEW.udfdate05 := NEW.udfdate05;
            V_RECORD_NEW.cogs_code := NEW.cogs_code;
            V_RECORD_NEW.invhsnsacmain_code := NEW.invhsnsacmain_code;
            V_RECORD_NEW.gst_itc_appl := NEW.gst_itc_appl;
            V_RECORD_NEW.glcode := NEW.glcode;
            V_RECORD_NEW.slcode := NEW.slcode;
            V_RECORD_NEW.item_management_mode := NEW.item_management_mode;
            V_RECORD_NEW.price_management := NEW.price_management;
            V_RECORD_NEW.manage_expiry := NEW.manage_expiry;
            V_RECORD_NEW.validity_mode := NEW.validity_mode;
            V_RECORD_NEW.validity_period := NEW.validity_period;
            V_RECORD_NEW.pos_batch_selection_mode := NEW.pos_batch_selection_mode;
          END IF;  
            
         IF TG_OP = 'UPDATE' OR TG_OP = 'DELETE' THEN 
	   
            V_RECORD_OLD.ACTION := V_ACTION;
            V_RECORD_OLD.ACTION_SUBTYPE := 'OLD';
            V_RECORD_OLD.TRANSACTION_ID := V_TRNID::TEXT;			
			V_RECORD_OLD.icode := OLD.icode;
            V_RECORD_OLD.grpcode := OLD.grpcode;
            V_RECORD_OLD.cname1 := OLD.cname1;
            V_RECORD_OLD.ccode1 := OLD.ccode1;
            V_RECORD_OLD.cname2 := OLD.cname2;
            V_RECORD_OLD.ccode2 := OLD.ccode2;
            V_RECORD_OLD.cname3 := OLD.cname3;
            V_RECORD_OLD.ccode3 := OLD.ccode3;
            V_RECORD_OLD.cname4 := OLD.cname4;
            V_RECORD_OLD.ccode4 := OLD.ccode4;
            V_RECORD_OLD.cname5 := OLD.cname5;
            V_RECORD_OLD.ccode5 := OLD.ccode5;
            V_RECORD_OLD.cname6 := OLD.cname6;
            V_RECORD_OLD.ccode6 := OLD.ccode6;
            V_RECORD_OLD.rate := OLD.rate;
            V_RECORD_OLD.mrp := OLD.mrp;
            V_RECORD_OLD.barrq := OLD.barrq;
            V_RECORD_OLD.barunit := OLD.barunit;
            V_RECORD_OLD.rem := OLD.rem;
            V_RECORD_OLD.ext := OLD.ext;
            V_RECORD_OLD.taxcode := OLD.taxcode;
            V_RECORD_OLD.partycode := OLD.partycode;
            V_RECORD_OLD.partyname := OLD.partyname;
            V_RECORD_OLD.generated := OLD.generated;
            V_RECORD_OLD.last_changed := OLD.last_changed;
            V_RECORD_OLD.cmpcode := OLD.cmpcode;
            V_RECORD_OLD.unitname := OLD.unitname;
            V_RECORD_OLD.charge := OLD.charge;
            V_RECORD_OLD.grccode := OLD.grccode;
            V_RECORD_OLD.stkplancode := OLD.stkplancode;
            V_RECORD_OLD.barcode := OLD.barcode;
            V_RECORD_OLD.listed_mrp := OLD.listed_mrp;
            V_RECORD_OLD.expiry_date := OLD.expiry_date;
            V_RECORD_OLD.partyalias := OLD.partyalias;
            V_RECORD_OLD.stockindate := OLD.stockindate;
            V_RECORD_OLD.considerinorder := OLD.considerinorder;
            V_RECORD_OLD.shrtname := OLD.shrtname;
            V_RECORD_OLD.considerasfree := OLD.considerasfree;
            V_RECORD_OLD.noninventory := OLD.noninventory;
            V_RECORD_OLD.costrate := OLD.costrate;
            V_RECORD_OLD.wsp := OLD.wsp;
            V_RECORD_OLD.invarticle_code := OLD.invarticle_code;
            V_RECORD_OLD.allow_price_modification := OLD.allow_price_modification;
            V_RECORD_OLD.alt_mrp := OLD.alt_mrp;
            V_RECORD_OLD.alt_listed_mrp := OLD.alt_listed_mrp;
            V_RECORD_OLD.isservice := OLD.isservice;
            V_RECORD_OLD.service_days := OLD.service_days;
            V_RECORD_OLD.pos_multiprice_action := OLD.pos_multiprice_action;
            V_RECORD_OLD.negative_stock_alert := OLD.negative_stock_alert;
            V_RECORD_OLD.ismetal := OLD.ismetal;
            V_RECORD_OLD.item_name := OLD.item_name;
            V_RECORD_OLD.price_terms := OLD.price_terms;
            V_RECORD_OLD.price_basis := OLD.price_basis;
            V_RECORD_OLD.invmetal_code := OLD.invmetal_code;
            V_RECORD_OLD.net_weight := OLD.net_weight;
            V_RECORD_OLD.grs_weight := OLD.grs_weight;
            V_RECORD_OLD.job_cost_basis := OLD.job_cost_basis;
            V_RECORD_OLD.job_cost_amt := OLD.job_cost_amt;
            V_RECORD_OLD.part_qty := OLD.part_qty;
            V_RECORD_OLD.certificate_no := OLD.certificate_no;
            V_RECORD_OLD.d_count := OLD.d_count;
            V_RECORD_OLD.d_size := OLD.d_size;
            V_RECORD_OLD.d_weight := OLD.d_weight;
            V_RECORD_OLD.d_value := OLD.d_value;
            V_RECORD_OLD.d_desc := OLD.d_desc;
            V_RECORD_OLD.c_count := OLD.c_count;
            V_RECORD_OLD.c_weight := OLD.c_weight;
            V_RECORD_OLD.c_value := OLD.c_value;
            V_RECORD_OLD.c_desc := OLD.c_desc;
            V_RECORD_OLD.o_count := OLD.o_count;
            V_RECORD_OLD.o_weight := OLD.o_weight;
            V_RECORD_OLD.o_value := OLD.o_value;
            V_RECORD_OLD.o_desc := OLD.o_desc;
            V_RECORD_OLD.other_chg := OLD.other_chg;
            V_RECORD_OLD.material_type := OLD.material_type;
            V_RECORD_OLD.routecode := OLD.routecode;
            V_RECORD_OLD.costsheet_code := OLD.costsheet_code;
            V_RECORD_OLD.desc1 := OLD.desc1;
            V_RECORD_OLD.desc2 := OLD.desc2;
            V_RECORD_OLD.desc3 := OLD.desc3;
            V_RECORD_OLD.desc4 := OLD.desc4;
            V_RECORD_OLD.desc5 := OLD.desc5;
            V_RECORD_OLD.desc6 := OLD.desc6;
            V_RECORD_OLD.num1 := OLD.num1;
            V_RECORD_OLD.num2 := OLD.num2;
            V_RECORD_OLD.num3 := OLD.num3;
            V_RECORD_OLD.block_sale := OLD.block_sale;
            V_RECORD_OLD.block_sale_before := OLD.block_sale_before;
            V_RECORD_OLD.block_sale_after := OLD.block_sale_after;
            V_RECORD_OLD.block_sale_reason := OLD.block_sale_reason;
            V_RECORD_OLD.isprice_excludes_tax := OLD.isprice_excludes_tax;
            V_RECORD_OLD.autoqtypopup := OLD.autoqtypopup;
            V_RECORD_OLD.pos_return_behavior := OLD.pos_return_behavior;
            V_RECORD_OLD.search_string := OLD.search_string;
            V_RECORD_OLD.price_change_limit := OLD.price_change_limit;
            V_RECORD_OLD.udfstring01 := OLD.udfstring01;
            V_RECORD_OLD.udfstring02 := OLD.udfstring02;
            V_RECORD_OLD.udfstring03 := OLD.udfstring03;
            V_RECORD_OLD.udfstring04 := OLD.udfstring04;
            V_RECORD_OLD.udfstring05 := OLD.udfstring05;
            V_RECORD_OLD.udfstring06 := OLD.udfstring06;
            V_RECORD_OLD.udfstring07 := OLD.udfstring07;
            V_RECORD_OLD.udfstring08 := OLD.udfstring08;
            V_RECORD_OLD.udfstring09 := OLD.udfstring09;
            V_RECORD_OLD.udfstring10 := OLD.udfstring10;
            V_RECORD_OLD.udfnum01 := OLD.udfnum01;
            V_RECORD_OLD.udfnum02 := OLD.udfnum02;
            V_RECORD_OLD.udfnum03 := OLD.udfnum03;
            V_RECORD_OLD.udfnum04 := OLD.udfnum04;
            V_RECORD_OLD.udfnum05 := OLD.udfnum05;
            V_RECORD_OLD.udfdate01 := OLD.udfdate01;
            V_RECORD_OLD.udfdate02 := OLD.udfdate02;
            V_RECORD_OLD.udfdate03 := OLD.udfdate03;
            V_RECORD_OLD.udfdate04 := OLD.udfdate04;
            V_RECORD_OLD.udfdate05 := OLD.udfdate05;
            V_RECORD_OLD.cogs_code := OLD.cogs_code;
            V_RECORD_OLD.invhsnsacmain_code := OLD.invhsnsacmain_code;
            V_RECORD_OLD.gst_itc_appl := OLD.gst_itc_appl;
            V_RECORD_OLD.glcode := OLD.glcode;
            V_RECORD_OLD.slcode := OLD.slcode;
            V_RECORD_OLD.item_management_mode := OLD.item_management_mode;
            V_RECORD_OLD.price_management := OLD.price_management;
            V_RECORD_OLD.manage_expiry := OLD.manage_expiry;
            V_RECORD_OLD.validity_mode := OLD.validity_mode;
            V_RECORD_OLD.validity_period := OLD.validity_period;
            V_RECORD_OLD.pos_batch_selection_mode := OLD.pos_batch_selection_mode;
          END IF;  

    IF TG_OP = 'INSERT' THEN
	    V_REC_COUNT := 1;
        INSERT INTO AUD2_INVITEM SELECT V_RECORD_NEW.*;
    END IF;

    IF TG_OP = 'UPDATE' THEN
	FOR I IN (
		SELECT 
		V_RECORD_OLD.udfdate03,
                  V_RECORD_OLD.udfstring07,
                  V_RECORD_OLD.udfstring05,
                  V_RECORD_OLD.manage_expiry,
                  V_RECORD_OLD.udfstring03,
                  V_RECORD_OLD.udfdate05,
                  V_RECORD_OLD.ccode2,
                  V_RECORD_OLD.udfnum01,
                  V_RECORD_OLD.gst_itc_appl,
                  V_RECORD_OLD.udfstring04,
                  V_RECORD_OLD.rem,
                  V_RECORD_OLD.udfstring01,
                  V_RECORD_OLD.udfnum04,
                  V_RECORD_OLD.expiry_date,
                  V_RECORD_OLD.cname6,
                  V_RECORD_OLD.ext,
                  V_RECORD_OLD.udfdate04,
                  V_RECORD_OLD.noninventory,
                  V_RECORD_OLD.allow_price_modification,
                  V_RECORD_OLD.grpcode,
                  V_RECORD_OLD.udfnum02,
                  V_RECORD_OLD.udfstring08,
                  V_RECORD_OLD.ccode3,
                  V_RECORD_OLD.udfdate02,
                  V_RECORD_OLD.desc6,
                  V_RECORD_OLD.price_change_limit,
                  V_RECORD_OLD.desc3,
                  V_RECORD_OLD.costrate,
                  V_RECORD_OLD.udfstring02,
                  V_RECORD_OLD.num1,
                  V_RECORD_OLD.item_name,
                  V_RECORD_OLD.material_type,
                  V_RECORD_OLD.invarticle_code,
                  V_RECORD_OLD.ccode1,
                  V_RECORD_OLD.slcode,
                  V_RECORD_OLD.glcode,
                  V_RECORD_OLD.pos_return_behavior,
                  V_RECORD_OLD.ccode4,
                  V_RECORD_OLD.pos_multiprice_action,
                  V_RECORD_OLD.unitname,
                  V_RECORD_OLD.partycode,
                  V_RECORD_OLD.udfstring10,
                  V_RECORD_OLD.barunit,
                  V_RECORD_OLD.udfstring09,
                  V_RECORD_OLD.udfnum03,
                  V_RECORD_OLD.taxcode,
                  V_RECORD_OLD.ccode6,
                  V_RECORD_OLD.desc2,
                  V_RECORD_OLD.item_management_mode,
                  V_RECORD_OLD.desc4,
                  V_RECORD_OLD.pos_batch_selection_mode,
                  V_RECORD_OLD.price_management,
                  V_RECORD_OLD.udfstring06,
                  V_RECORD_OLD.invhsnsacmain_code,
                  V_RECORD_OLD.udfnum05,
                  V_RECORD_OLD.isprice_excludes_tax,
                  V_RECORD_OLD.desc1,
                  V_RECORD_OLD.num3,
                  V_RECORD_OLD.wsp,
                  V_RECORD_OLD.autoqtypopup,
                  V_RECORD_OLD.shrtname,
                  V_RECORD_OLD.udfdate01,
                  V_RECORD_OLD.ccode5,
                  V_RECORD_OLD.desc5,
                  V_RECORD_OLD.cname4,
                  V_RECORD_OLD.cname3,
                  V_RECORD_OLD.negative_stock_alert,
                  V_RECORD_OLD.cname5,
                  V_RECORD_OLD.num2,
                  V_RECORD_OLD.cname1,
                  V_RECORD_OLD.partyname,
                  V_RECORD_OLD.cname2,
                  V_RECORD_OLD.partyalias,
                  V_RECORD_OLD.barcode,
                  V_RECORD_OLD.mrp
		EXCEPT
		SELECT 
		V_RECORD_NEW.udfdate03 udfdate03,
                  V_RECORD_NEW.udfstring07 udfstring07,
                  V_RECORD_NEW.udfstring05 udfstring05,
                  V_RECORD_NEW.manage_expiry manage_expiry,
                  V_RECORD_NEW.udfstring03 udfstring03,
                  V_RECORD_NEW.udfdate05 udfdate05,
                  V_RECORD_NEW.ccode2 ccode2,
                  V_RECORD_NEW.udfnum01 udfnum01,
                  V_RECORD_NEW.gst_itc_appl gst_itc_appl,
                  V_RECORD_NEW.udfstring04 udfstring04,
                  V_RECORD_NEW.rem rem,
                  V_RECORD_NEW.udfstring01 udfstring01,
                  V_RECORD_NEW.udfnum04 udfnum04,
                  V_RECORD_NEW.expiry_date expiry_date,
                  V_RECORD_NEW.cname6 cname6,
                  V_RECORD_NEW.ext ext,
                  V_RECORD_NEW.udfdate04 udfdate04,
                  V_RECORD_NEW.noninventory noninventory,
                  V_RECORD_NEW.allow_price_modification allow_price_modification,
                  V_RECORD_NEW.grpcode grpcode,
                  V_RECORD_NEW.udfnum02 udfnum02,
                  V_RECORD_NEW.udfstring08 udfstring08,
                  V_RECORD_NEW.ccode3 ccode3,
                  V_RECORD_NEW.udfdate02 udfdate02,
                  V_RECORD_NEW.desc6 desc6,
                  V_RECORD_NEW.price_change_limit price_change_limit,
                  V_RECORD_NEW.desc3 desc3,
                  V_RECORD_NEW.costrate costrate,
                  V_RECORD_NEW.udfstring02 udfstring02,
                  V_RECORD_NEW.num1 num1,
                  V_RECORD_NEW.item_name item_name,
                  V_RECORD_NEW.material_type material_type,
                  V_RECORD_NEW.invarticle_code invarticle_code,
                  V_RECORD_NEW.ccode1 ccode1,
                  V_RECORD_NEW.slcode slcode,
                  V_RECORD_NEW.glcode glcode,
                  V_RECORD_NEW.pos_return_behavior pos_return_behavior,
                  V_RECORD_NEW.ccode4 ccode4,
                  V_RECORD_NEW.pos_multiprice_action pos_multiprice_action,
                  V_RECORD_NEW.unitname unitname,
                  V_RECORD_NEW.partycode partycode,
                  V_RECORD_NEW.udfstring10 udfstring10,
                  V_RECORD_NEW.barunit barunit,
                  V_RECORD_NEW.udfstring09 udfstring09,
                  V_RECORD_NEW.udfnum03 udfnum03,
                  V_RECORD_NEW.taxcode taxcode,
                  V_RECORD_NEW.ccode6 ccode6,
                  V_RECORD_NEW.desc2 desc2,
                  V_RECORD_NEW.item_management_mode item_management_mode,
                  V_RECORD_NEW.desc4 desc4,
                  V_RECORD_NEW.pos_batch_selection_mode pos_batch_selection_mode,
                  V_RECORD_NEW.price_management price_management,
                  V_RECORD_NEW.udfstring06 udfstring06,
                  V_RECORD_NEW.invhsnsacmain_code invhsnsacmain_code,
                  V_RECORD_NEW.udfnum05 udfnum05,
                  V_RECORD_NEW.isprice_excludes_tax isprice_excludes_tax,
                  V_RECORD_NEW.desc1 desc1,
                  V_RECORD_NEW.num3 num3,
                  V_RECORD_NEW.wsp wsp,
                  V_RECORD_NEW.autoqtypopup autoqtypopup,
                  V_RECORD_NEW.shrtname shrtname,
                  V_RECORD_NEW.udfdate01 udfdate01,
                  V_RECORD_NEW.ccode5 ccode5,
                  V_RECORD_NEW.desc5 desc5,
                  V_RECORD_NEW.cname4 cname4,
                  V_RECORD_NEW.cname3 cname3,
                  V_RECORD_NEW.negative_stock_alert negative_stock_alert,
                  V_RECORD_NEW.cname5 cname5,
                  V_RECORD_NEW.num2 num2,
                  V_RECORD_NEW.cname1 cname1,
                  V_RECORD_NEW.partyname partyname,
                  V_RECORD_NEW.cname2 cname2,
                  V_RECORD_NEW.partyalias partyalias,
                  V_RECORD_NEW.barcode barcode,
                  V_RECORD_NEW.mrp mrp
			 )
	LOOP
	  V_REC_COUNT := 1; 
	  
	  		--INSERT INTO AUD_INVITEM SELECT V_RECORD_OLD.*;
			
	                BEGIN
					INSERT INTO AUD2_INVITEM
                    SELECT V_RECORD_OLD.*;
					
                    -- clear the cache
                    --v_rec_changes_old.delete(); ??
    
                    -- insert in bulk (new values)
                EXCEPTION  WHEN UNIQUE_VIOLATION 
                THEN
            
                    DELETE  FROM AUD2_INVITEM
                    WHERE ICODE =  V_RECORD_OLD.ICODE
                            AND TRANSACTION_ID =  V_RECORD_OLD.TRANSACTION_ID
                    RETURNING ACTION INTO v_last_action;
             
                    IF V_LAST_ACTION = 'INSERT'
                    THEN 
                        V_RECORD_OLD.ACTION := 'INSERT';
                    END IF;
                    
                    INSERT INTO AUD2_INVITEM
                    SELECT V_RECORD_OLD.*;  
            END;
                    --v_rec_changes_old.delete(); ??
	  
	  

			--INSERT INTO AUD_INVITEM SELECT V_RECORD_NEW.*;    
			BEGIN 
                    INSERT INTO AUD2_INVITEM
                    SELECT V_RECORD_NEW.*;  
					
                    -- clear the cache
                    --v_rec_changes.delete(); ??
					
                EXCEPTION  WHEN UNIQUE_VIOLATION 
                THEN
                    DELETE  FROM AUD2_INVITEM
                    WHERE ICODE =  V_RECORD_NEW.ICODE
                            AND TRANSACTION_ID =  V_RECORD_NEW.TRANSACTION_ID
                    RETURNING ACTION INTO v_last_action;
            
           
                    IF V_LAST_ACTION = 'INSERT'
                    THEN 
                        V_RECORD_NEW.ACTION := 'INSERT';
                    END IF;
            
                    INSERT INTO AUD2_INVITEM
                    SELECT V_RECORD_NEW.*;  
            END;
                    -- clear the cache
                    --v_rec_changes.delete();??
	END LOOP;   
    END IF;

    IF TG_OP = 'DELETE' THEN
		V_REC_COUNT := 1;
		INSERT INTO AUD2_INVITEM SELECT V_RECORD_OLD.*;
    END IF;
	
	IF V_REC_COUNT >  0
	THEN
	   BEGIN
            INSERT INTO AUD2_TRANSACTION (TRANSACTION_ID, TRANSACTION_DATE, LOGIN_USER, PROGRAM, MODULE_SHORTCODE, MODULE_TYPE, HEADER_KEY_VALUE)
            VALUES (V_TRNID,   CURRENT_TIMESTAMP,V_LOGINUSER, V_PROGRAM, 'Item', 'Item',COALESCE(NEW.ICODE,OLD.ICODE));
       EXCEPTION WHEN unique_violation THEN
            NULL;
       END;  

       BEGIN  
             INSERT INTO AUD2_TRANSACTION_TABLE (TRANSACTION_ID, TABLE_NAME)
             VALUES (V_TRNID,  'invitem');
       EXCEPTION WHEN unique_violation THEN
             NULL;
       END; 
	END IF;   
    

    IF TG_OP = 'INSERT' THEN
        RETURN NEW;
    ELSIF TG_OP = 'UPDATE' THEN
        RETURN NEW;
    ELSIF TG_OP = 'DELETE' THEN
        RETURN OLD;
    END IF;
    EXCEPTION
        WHEN others THEN
            CALL main.erraudit(SESSION_USER::text, 'T_invitem_AUD2'::CHARACTER, SQLSTATE::text, SQLERRM);
			RAISE;
			RETURN NULL;
END;
"""
  returnType = trigger
  arguments = [
  ]
  language = plpgsql
}

