function "main"."erpcheckattribute(text, text, text, text, text, text)" {
  text = """

DECLARE
	-- Change this to reflect the dblink connection string
	--v_conn_str  text := format('port=%s dbname=%s user=%s', current_setting('port'), current_database(), current_user);
	v_srvname       name;
    v_connname      text;
    v_connstr       text;
    v_conn_result   text;
	v_query     	text;

	v_ret	char;
BEGIN

    v_srvname := 'foreign_pgbase';
    v_connname := replace(uuid_generate_v4()::text,'-','');
    v_connstr  := v_srvname;
	
    --Open the connection  
    SELECT dblink_connect(v_connname,v_connstr) 
    INTO v_conn_result;
	
	v_query := 'SELECT * FROM erpcheckattribute_atx ( ' || quote_nullable(ARGATTR1) || ',' || quote_nullable(ARGATTR2) || ',' || quote_nullable(ARGATTR3) || ',' || quote_nullable(ARGATTR4) || ',' || quote_nullable(ARGATTR5) || ',' || quote_nullable(ARGATTR6) || ' )';
	SELECT * INTO v_ret FROM dblink(v_connname, v_query) AS p (ret char);

	
SELECT dblink_disconnect(v_connname) 
    INTO v_conn_result;
	
	RETURN v_ret;
EXCEPTION 
   WHEN OTHERS THEN
    	SELECT dblink_disconnect(v_connname) 
    	INTO v_conn_result;

END;
"""
  returnType = text
  arguments = <
    {
      name = argattr1
      type = text
      mode = IN
    }

    {
      name = argattr2
      type = text
      mode = IN
    }

    {
      name = argattr3
      type = text
      mode = IN
    }

    {
      name = argattr4
      type = text
      mode = IN
    }

    {
      name = argattr5
      type = text
      mode = IN
    }

    {
      name = argattr6
      type = text
      mode = IN
    }

  >
  language = plpgsql
}

