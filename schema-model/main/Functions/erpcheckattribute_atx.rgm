function "main"."erpcheckattribute_atx(text, text, text, text, text, text)" {
  text = """

DECLARE

    DATTR1        varchar(100);
    DCODE1        bigint;
    DATTR2        varchar(100);
    DCODE2        bigint;
    DATTR3        varchar(100);
    DCODE3        bigint;
    DATTR4        varchar(100);
    DCODE4        bigint;
    DATTR5        varchar(100);
    DCODE5        bigint;
    DATTR6        varchar(100);
    DCODE6        bigint;
    COUNTER1    bigint;
    COUNTER2    bigint;
    COUNTER3    bigint;
    COUNTER4    bigint;
    COUNTER5    bigint;
    COUNTER6    bigint;
    ERRCODE     varchar(50);
    ERRMSG         varchar(2000);/********************************************************************************************************************************
   REV NO       OWNER           DATE            DESCRIPTION
   ---------    -----------     -----------     ---------------------------------------------------------------------------------
   REV : 001    MANASH        06-SEPT-2016    (BUG ID: 20363)   Attribute creation from 'Article Creation' master or '
                                                                Import Excel' are also not generating attribute code.
*********************************************************************************************************************************/
BEGIN
    -- START REV : 001
    -- chk for attr1
    IF  ARGATTR1 IS NOT NULL THEN
        BEGIN
            SELECT  CODE,
                    NAME,
                    COUNT(1)
            INTO STRICT
                    DCODE1,
                    DATTR1,
                    COUNTER1
            FROM
                    INVATTR1
            WHERE   NAME = ARGATTR1
            GROUP BY
                    CODE,
                    NAME;
        EXCEPTION
            WHEN no_data_found THEN
            COUNTER1 := NULL;
        END;
        IF  coalesce(COUNTER1,0) = 0 THEN
            SELECT  nextval('invattr1_code')
            INTO STRICT    DCODE1
;
            DCODE1 := ERPATTRIBUTE(1,DCODE1,ARGATTR1);
        END IF;
    ELSE
        DCODE1 := NULL;
    END IF;
    -- chk for attr2
    IF  ARGATTR2 IS NOT NULL THEN
        BEGIN
            SELECT  CODE,
                    NAME,
                    COUNT(1)
            INTO STRICT
                    DCODE2,
                    DATTR2,
                    COUNTER2
            FROM
                    INVATTR2
            WHERE   NAME = ARGATTR2
            GROUP BY
                    CODE,
                    NAME;
        EXCEPTION
            WHEN no_data_found THEN
            COUNTER2 := NULL;
        END;
        IF  coalesce(COUNTER2,0) = 0 THEN
            SELECT  nextval('invattr2_code')
            INTO STRICT    DCODE2
;
            DCODE2 := ERPATTRIBUTE(2,DCODE2,ARGATTR2);
        END IF;
    ELSE
        DCODE2 := NULL;
    END IF;
    -- chk for attr3
    IF  ARGATTR3 IS NOT NULL THEN
        BEGIN
            SELECT  CODE,
                    NAME,
                    COUNT(1)
            INTO STRICT
                    DCODE3,
                    DATTR3,
                    COUNTER3
            FROM
                    INVATTR3
            WHERE   NAME = ARGATTR3
            GROUP BY
                    CODE,
                    NAME;
        EXCEPTION
            WHEN no_data_found THEN
            COUNTER3 := NULL;
        END;
        IF  coalesce(COUNTER3,0) = 0 THEN
            SELECT  nextval('invattr3_code')
            INTO STRICT    DCODE3
;
            DCODE3 := ERPATTRIBUTE(3,DCODE3,ARGATTR3);
        END IF;
    ELSE
        DCODE3 := NULL;
    END IF;
    -- chk for attr4
    IF  ARGATTR4 IS NOT NULL THEN
        BEGIN
            SELECT  CODE,
                    NAME,
                    COUNT(1)
            INTO STRICT
                    DCODE4,
                    DATTR4,
                    COUNTER4
            FROM
                    INVATTR4
            WHERE   NAME = ARGATTR4
            GROUP BY
                    CODE,
                    NAME;
        EXCEPTION
            WHEN no_data_found THEN
            COUNTER4 := NULL;
        END;
        IF  coalesce(COUNTER4,0) = 0 THEN
            SELECT  nextval('invattr4_code')
            INTO STRICT    DCODE4
;
            DCODE4 := ERPATTRIBUTE(4,DCODE4,ARGATTR4);
        END IF;
    ELSE
        DCODE4 := NULL;
    END IF;
    -- chk for attr5
    IF  ARGATTR5 IS NOT NULL THEN
        BEGIN
            SELECT  CODE,
                    NAME,
                    COUNT(1)
            INTO STRICT
                    DCODE5,
                    DATTR5,
                    COUNTER5
            FROM
                    INVATTR5
            WHERE   NAME = ARGATTR5
            GROUP BY
                    CODE,
                    NAME;
        EXCEPTION
            WHEN no_data_found THEN
            COUNTER5 := NULL;
        END;
        IF  coalesce(COUNTER5,0) = 0 THEN
            SELECT  nextval('invattr5_code')
            INTO STRICT    DCODE5
;
            DCODE5 := ERPATTRIBUTE(5,DCODE5,ARGATTR5);
        END IF;
    ELSE
        DCODE5 := NULL;
    END IF;
    -- chk for attr6
    IF  ARGATTR6 IS NOT NULL THEN
        BEGIN
            SELECT  CODE,
                    NAME,
                    COUNT(1)
            INTO STRICT
                    DCODE6,
                    DATTR6,
                    COUNTER6
            FROM
                    INVATTR6
            WHERE   NAME = ARGATTR6
            GROUP BY
                    CODE,
                    NAME;
        EXCEPTION
            WHEN no_data_found THEN
            COUNTER5 := NULL;
        END;
        IF  coalesce(COUNTER6,0) = 0 THEN
            SELECT  nextval('invattr6_code')
            INTO STRICT    DCODE6
;
            DCODE6 := ERPATTRIBUTE(6,DCODE6,ARGATTR6);
        END IF;
    ELSE
        DCODE6 := NULL;
    END IF;
    -- END REV : 001
    RETURN(LPAD(coalesce(DCODE1::varchar,' '),12,' ')||LPAD(coalesce(DCODE2::varchar,' '),12,' ')||LPAD(coalesce(DCODE3::varchar,' '),12,' ')||LPAD(coalesce(DCODE4::varchar,' '),12,' ')||LPAD(coalesce(DCODE5::varchar,' '),12,' ')||LPAD(coalesce(DCODE6::varchar,' '),12,' '));
EXCEPTION
    WHEN OTHERS THEN
    ERRCODE := SQLSTATE;
    ERRMSG  := SQLERRM;
    CALL ERRAUDIT('CLIENT','ERPCHECKATTRIBUTE',ERRCODE,ERRMSG);
    RETURN(NULL);
END;
"""
  returnType = text
  arguments = <
    {
      name = argattr1
      type = text
      mode = IN
    }

    {
      name = argattr2
      type = text
      mode = IN
    }

    {
      name = argattr3
      type = text
      mode = IN
    }

    {
      name = argattr4
      type = text
      mode = IN
    }

    {
      name = argattr5
      type = text
      mode = IN
    }

    {
      name = argattr6
      type = text
      mode = IN
    }

  >
  language = plpgsql
  volatility = STABLE
}

