function "main"."trigger_fct_t_inddcdet_check()" {
  text = """

DECLARE
    V_NEW_ORDDET_QTY    double precision := 0;
    V_NEW_CNLDET_QTY    double precision := 0;

    -- START REV : 001
    V_STATUS            INVDCMAIN.STATUS%TYPE;
    V_ORDQTY            SALORDDET.ORDQTY%TYPE;
    V_CHKQTY            SALORDDET.ORDQTY%TYPE;
    -- END REV : 001
BEGIN
    /*******************************************************************************************************************
      REV NO      DATE           OWNER            DESCRIPTION
      ---------   -----------    -----------      ---------------------------------------------------------------------
      REV : 000   17-JAN-2018    MOUSUMI          (TFS ID : xxxxx) ORDQTY,DQTY CHECKING
      REV : 001   08-FEB-2018    DIPTIMAN         (TFS ID : 37648) Trigger altered.
    *******************************************************************************************************************/
    -- START REV : 001
    /*
    IF  INSERTING AND NVL(:NEW.SALORDDET_CODE,0) <> 0  THEN

        UPDATE TEMP_INVDCSO_CHECK
        SET    DCQTY = NVL(DCQTY,0)+ NVL(:NEW.ISQTY,0)
        WHERE  SALORDDET_CODE = :NEW.SALORDDET_CODE;

        IF  SQL%ROWCOUNT = 0 THEN
           V_NEW_ORDDET_QTY := NULL;
           V_NEW_CNLDET_QTY := NULL;
            SELECT        ORDQTY  ,CNLQTY
            INTO          V_NEW_ORDDET_QTY    ,V_NEW_CNLDET_QTY
            FROM          SALORDDET
            WHERE         CODE = :NEW.SALORDDET_CODE;

            INSERT INTO   TEMP_INVDCSO_CHECK (SALORDDET_CODE,DCQTY,ORDQTY,CNLQTY)
            VALUES     (:NEW.SALORDDET_CODE,:NEW.ISQTY,V_NEW_ORDDET_QTY,V_NEW_CNLDET_QTY);
        END IF;

    END IF;

    IF  UPDATING THEN
        IF NVL(:OLD.SALORDDET_CODE,0) <> 0 THEN

            UPDATE TEMP_INVDCSO_CHECK
            SET    DCQTY = NVL(DCQTY,0) - NVL(:OLD.ISQTY,0)
            WHERE  SALORDDET_CODE = :OLD.SALORDDET_CODE;

            IF  SQL%ROWCOUNT = 0 THEN
                NULL;
            END IF;

        END IF;

        IF  NVL(:NEW.SALORDDET_CODE,0) <> 0 THEN

            UPDATE TEMP_INVDCSO_CHECK
            SET    DCQTY = NVL(DCQTY,0) + NVL(:NEW.ISQTY,0)
            WHERE  SALORDDET_CODE = :NEW.SALORDDET_CODE;

            IF  SQL%ROWCOUNT = 0 THEN

                V_NEW_ORDDET_QTY := NULL;
                V_NEW_CNLDET_QTY := NULL;

                SELECT        ORDQTY ,CNLQTY
                INTO          V_NEW_ORDDET_QTY,V_NEW_CNLDET_QTY
                FROM          SALORDDET
                WHERE         CODE = :NEW.SALORDDET_CODE;

                INSERT INTO   TEMP_INVDCSO_CHECK (SALORDDET_CODE,DCQTY,ORDQTY,CNLQTY)
                VALUES     (:NEW.SALORDDET_CODE,:NEW.ISQTY,V_NEW_ORDDET_QTY,V_NEW_CNLDET_QTY);
            END IF;
        END IF;
    END IF;
    */
    IF  OLD.SALORDDET_CODE IS NOT NULL THEN
        UPDATE TEMP_INVDCSO_CHECK
        SET    DCQTY = coalesce(DCQTY,0) - coalesce(OLD.ISQTY,0)
        WHERE  SALORDDET_CODE = OLD.SALORDDET_CODE;
    END IF;

    IF  NEW.SALORDDET_CODE IS NOT NULL THEN
        UPDATE TEMP_INVDCSO_CHECK
        SET    DCQTY = coalesce(DCQTY,0) + coalesce(NEW.ISQTY,0)
        WHERE  SALORDDET_CODE = NEW.SALORDDET_CODE;
    END IF;
    -- END REV : 001
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
"""
  returnType = trigger
  arguments = [
  ]
  language = plpgsql
}

