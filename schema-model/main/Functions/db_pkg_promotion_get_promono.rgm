function "main"."db_pkg_promotion_get_promono(character, character, bigint, bigint, timestamp without time zone)" {
  text = """

DECLARE

		VCICODE			varchar(9);
		VNDIVISIONGRPCODE	bigint;
		VNSECTIONGRPCODE	bigint;
		VNDEPARTMENTGRPCODE	bigint;
		VNINVARTICLECODE	bigint;
		VNCCODE1		bigint;
		VNCCODE2		bigint;
		VNCCODE3		bigint;
		VNCCODE4		bigint;
		VNCCODE5		bigint;
		VNCCODE6		bigint;
		VNRATE			bigint;
		VNMRP			bigint;
		VNLISTEDMRP		bigint;
		VNCOSTRATE		bigint;
		VNWSP			bigint;
		VDSTOCKINDATE		timestamp(0);
		VNPROMOCODE		bigint;
		VCPROMONO		varchar(12);
		VCBASIS			varchar(10);
		VNSIMPLEFACTOR		bigint;
		VNGETBENEFITCODE	bigint;
		VCPROMO_PRIORITY	char(1);
		VCIS_PROMO_APPLICABLE	char(1);
	
BEGIN
		/*
			ERRAUDIT ('1', 'DB_FUN_GET_PROMONO', '1',
			'PCICODE                => '||PCICODE               ||', '||CHR(10)||
			'PNMRP                  => '||PNMRP);
		*/
		SELECT	ICODE, DIVISION_GRPCODE, SECTION_GRPCODE, DEPARTMENT_GRPCODE, INVARTICLE_CODE, CCODE1, CCODE2, CCODE3, CCODE4, CCODE5, CCODE6, RATE, MRP, LISTED_MRP, COSTRATE, WSP, STOCKINDATE, IS_PROMO_APPLICABLE
		INTO STRICT	VCICODE,VNDIVISIONGRPCODE,VNSECTIONGRPCODE,VNDEPARTMENTGRPCODE,VNINVARTICLECODE,VNCCODE1,VNCCODE2,VNCCODE3,VNCCODE4,VNCCODE5,VNCCODE6,VNRATE,VNMRP,VNLISTEDMRP,VNCOSTRATE,VNWSP,VDSTOCKINDATE,VCIS_PROMO_APPLICABLE
		FROM	GLOBAL_PROMO_INVITEM
		WHERE	ICODE = PCICODE
		AND	MRP = PNMRP;

		IF VCIS_PROMO_APPLICABLE = 'N' THEN
			RETURN NULL;
		END IF;

		SELECT	PROMO_RESOLVE.PROMO_CODE
		INTO STRICT	VNPROMOCODE
		FROM	(
			SELECT 	PROMO_FINAL.ICODE, PROMO_FINAL.PROMO_CODE, PRIORITY,
				RANK() OVER (PARTITION BY PROMO_FINAL.ICODE ORDER BY PRIORITY DESC) RANK
			FROM (
				----------- START PROMO_FINAL
				SELECT 	PROMO_SATISFY.ICODE, PROMO_SATISFY.PROMO_CODE,
					    CASE  WHEN  VCPROMO_PRIORITY = 'P' THEN
							        CASE   WHEN ISCREATEDBYHO = 1
										   THEN (100000 + PRIORITY)
								           ELSE (0 + PRIORITY)
									END
							  WHEN  VCPROMO_PRIORITY = 'C' THEN
								    CASE   WHEN ISCREATEDBYHO = 2
										   THEN (100000 + PRIORITY)
								           ELSE (0 + PRIORITY)
								    END
						 END  PRIORITY
				FROM (
					-------- START PROMO_SATISFY
					SELECT	PROMO.CODE PROMO_CODE,
						ASSORTMENT.ASSORTMENT_CODE,
						ASSORTMENT.ICODE ICODE
					FROM (
						---------------- START  ASSORTMENT
						SELECT AI.ASSORTMENT_CODE, PCICODE ICODE
						FROM PROMO_ASSORTMENT A, PROMO_ASSORTMENT_INCLUDE AI
						WHERE A.CODE = AI.ASSORTMENT_CODE
						AND A.TYPE IN ('B', 'T')
						AND (
							(
								( AI.ICODE IS NOT NULL AND AI.ICODE = VCICODE )
								OR AI.ICODE IS NULL
							) AND (
								(AI.DIVISION_GRPCODE IS NOT NULL AND AI.DIVISION_GRPCODE = VNDIVISIONGRPCODE)
								OR AI.DIVISION_GRPCODE IS NULL
							) AND (
								(AI.SECTION_GRPCODE IS NOT NULL AND AI.SECTION_GRPCODE = VNSECTIONGRPCODE )
								OR AI.SECTION_GRPCODE IS NULL
							) AND (
								(AI.DEPARTMENT_GRPCODE IS NOT NULL AND AI.DEPARTMENT_GRPCODE = VNDEPARTMENTGRPCODE )
								OR AI.DEPARTMENT_GRPCODE IS NULL
							) AND (
								(AI.INVARTICLE_CODE IS NOT NULL AND AI.INVARTICLE_CODE = VNINVARTICLECODE)
								OR AI.INVARTICLE_CODE IS NULL
							) AND (
								(AI.CCODE1 IS NOT NULL AND AI.CCODE1 = VNCCODE1)
								OR AI.CCODE1 IS NULL
							) AND (
								(AI.CCODE2 IS NOT NULL AND AI.CCODE2 = VNCCODE2)
								OR AI.CCODE2 IS NULL
							) AND (
								(AI.CCODE3 IS NOT NULL AND AI.CCODE3 = VNCCODE3)
								OR AI.CCODE3 IS NULL
							) AND (
								(AI.CCODE4 IS NOT NULL AND AI.CCODE4 = VNCCODE4)
								OR AI.CCODE4 IS NULL
							) AND (
								(AI.CCODE5 IS NOT NULL AND AI.CCODE5 = VNCCODE5)
								OR AI.CCODE5 IS NULL
							) AND (
								(AI.CCODE6 IS NOT NULL AND AI.CCODE6 = VNCCODE6)
								OR AI.CCODE6 IS NULL
							) AND (
								(AI.PRICE_RANGE_BASIS IS NOT NULL AND '1' =
									CASE
									WHEN AI.PRICE_RANGE_BASIS = 'R' AND VNRATE BETWEEN AI.PRICE_RANGE_FROM AND AI.PRICE_RANGE_TO THEN '1'
									WHEN AI.PRICE_RANGE_BASIS = 'M' AND VNMRP BETWEEN AI.PRICE_RANGE_FROM AND AI.PRICE_RANGE_TO THEN '1'
									WHEN AI.PRICE_RANGE_BASIS = 'L' AND VNLISTEDMRP BETWEEN AI.PRICE_RANGE_FROM AND AI.PRICE_RANGE_TO THEN '1'
									WHEN AI.PRICE_RANGE_BASIS = 'C' AND VNCOSTRATE BETWEEN AI.PRICE_RANGE_FROM AND AI.PRICE_RANGE_TO THEN '1'
									WHEN AI.PRICE_RANGE_BASIS = 'W' AND VNWSP BETWEEN AI.PRICE_RANGE_FROM AND AI.PRICE_RANGE_TO THEN '1'
									END
								)
								OR AI.PRICE_RANGE_BASIS IS NULL
							) AND (
								(AI.STOCKINDATE_FROM IS NOT NULL AND VDSTOCKINDATE BETWEEN AI.STOCKINDATE_FROM AND AI.STOCKINDATE_TO)
								OR AI.STOCKINDATE_FROM IS NULL
							)
						)
						EXCEPT
						SELECT AE.ASSORTMENT_CODE, PCICODE
						FROM PROMO_ASSORTMENT A, PROMO_ASSORTMENT_EXCLUDE AE
						WHERE A.CODE = AE.ASSORTMENT_CODE
						AND A.TYPE IN ('B', 'T')
						AND
						(
							(
								(AE.ICODE IS NOT NULL AND AE.ICODE = VCICODE)
								OR AE.ICODE IS NULL
							) AND (
								(AE.DIVISION_GRPCODE IS NOT NULL AND AE.DIVISION_GRPCODE = VNDIVISIONGRPCODE)
								OR AE.DIVISION_GRPCODE IS NULL
							) AND (
								(AE.SECTION_GRPCODE IS NOT NULL AND AE.SECTION_GRPCODE = VNSECTIONGRPCODE)
								OR AE.SECTION_GRPCODE IS NULL
							) AND (
								(AE.DEPARTMENT_GRPCODE IS NOT NULL AND AE.DEPARTMENT_GRPCODE = VNDEPARTMENTGRPCODE)
								OR AE.DEPARTMENT_GRPCODE IS NULL
							) AND (
								(AE.INVARTICLE_CODE IS NOT NULL AND AE.INVARTICLE_CODE = VNINVARTICLECODE)
								OR AE.INVARTICLE_CODE IS NULL
							) AND (
								(AE.CCODE1 IS NOT NULL AND AE.CCODE1 = VNCCODE1)
								OR AE.CCODE1 IS NULL
							) AND (
								(AE.CCODE2 IS NOT NULL AND AE.CCODE2 = VNCCODE2)
								OR AE.CCODE2 IS NULL
							) AND (
								(AE.CCODE3 IS NOT NULL AND AE.CCODE3 = VNCCODE3)
								OR AE.CCODE3 IS NULL
							) AND (
								(AE.CCODE4 IS NOT NULL AND AE.CCODE4 = VNCCODE4)
								OR AE.CCODE4 IS NULL
							) AND (
								(AE.CCODE5 IS NOT NULL AND AE.CCODE5 = VNCCODE5)
								OR AE.CCODE5 IS NULL
							) AND (
								(AE.CCODE6 IS NOT NULL AND AE.CCODE6 = VNCCODE6)
								OR AE.CCODE6 IS NULL
							) AND (
								(AE.PRICE_RANGE_BASIS IS NOT NULL AND '1' =
									CASE
									WHEN AE.PRICE_RANGE_BASIS = 'R' AND VNRATE BETWEEN AE.PRICE_RANGE_FROM AND AE.PRICE_RANGE_TO THEN '1'
									WHEN AE.PRICE_RANGE_BASIS = 'M' AND VNMRP BETWEEN AE.PRICE_RANGE_FROM AND AE.PRICE_RANGE_TO THEN '1'
									WHEN AE.PRICE_RANGE_BASIS = 'L' AND VNLISTEDMRP BETWEEN AE.PRICE_RANGE_FROM AND AE.PRICE_RANGE_TO THEN '1'
									WHEN AE.PRICE_RANGE_BASIS = 'C' AND VNCOSTRATE BETWEEN AE.PRICE_RANGE_FROM AND AE.PRICE_RANGE_TO THEN '1'
									WHEN AE.PRICE_RANGE_BASIS = 'W' AND VNWSP BETWEEN AE.PRICE_RANGE_FROM AND AE.PRICE_RANGE_TO THEN '1'
									END
								)
								OR AE.PRICE_RANGE_BASIS IS NULL
							) AND (
								(AE.STOCKINDATE_FROM IS NOT NULL AND VDSTOCKINDATE BETWEEN AE.STOCKINDATE_FROM AND AE.STOCKINDATE_TO)
								OR AE.STOCKINDATE_FROM IS NULL
							)
						)
					-------------- END ASSORTMENT
					) ASSORTMENT,
					PROMO_MASTER PROMO
					WHERE PROMO.BUY_ASSORTMENT_CODE = ASSORTMENT.ASSORTMENT_CODE
					-- START REV : 007
					--AND PROMO.TYPE='I'
					AND PROMO.CATEGORY=PCCATEGORY
					AND ((PCCATEGORY='P' AND TYPE='I') OR (PCCATEGORY='V' AND TYPE='M'))
					-- END REV : 007
				-------------------- END PROMO_SATISFY
				) PROMO_SATISFY,
				PROMO_APPLICABLE
				WHERE	PROMO_SATISFY.PROMO_CODE = PROMO_APPLICABLE.PROMO_CODE
				AND	CLOSEDON IS NULL
				-- START REV : 003
				AND APPROVED = 'Y'
				-- END REV : 003
				AND	date_trunc('day', PDLOGINDT) BETWEEN STARTDATE AND ENDDATE
				AND	TO_DATE(TO_CHAR(clock_timestamp(),'DD/MM/YYYY')||' '||TO_CHAR(clock_timestamp(), 'HH24:MI'),'DD/MM/RRRR HH24:MI')
					BETWEEN TO_DATE(TO_CHAR(clock_timestamp(),'DD/MM/YYYY')||' '||TO_CHAR(coalesce(STARTTIME,clock_timestamp()), 'HH24:MI'),'DD/MM/RRRR HH24:MI')
					AND TO_DATE(TO_CHAR(clock_timestamp(),'DD/MM/YYYY')||' '||TO_CHAR(coalesce(ENDTIME,clock_timestamp()), 'HH24:MI'),'DD/MM/RRRR HH24:MI')
				----------------END PROMO_FINAL
			) PROMO_FINAL
		) PROMO_RESOLVE
		WHERE PROMO_RESOLVE.RANK = 1;

		IF VNPROMOCODE IS NOT NULL THEN
			SELECT NO,BASIS
			INTO STRICT VCPROMONO,VCBASIS
			FROM PROMO_MASTER
			WHERE CODE = VNPROMOCODE;

			IF VCBASIS='QSIMPLE' THEN
				SELECT	SIMPLE_FACTOR, GET_BENEFIT_CODE
				INTO STRICT	VNSIMPLEFACTOR,VNGETBENEFITCODE
				FROM	PROMO_SLAB
				WHERE	PROMO_CODE = VNPROMOCODE;
			END IF;
		END IF;

		IF  date_trunc('day', PNQTY) = PNQTY THEN
			RETURN(VCPROMONO);
		ELSE
			IF (coalesce(VCBASIS,'@@') = 'QSIMPLE' AND VNSIMPLEFACTOR IS NULL AND VNGETBENEFITCODE = 1) OR coalesce(VCBASIS,'@@') = 'VSLAB' THEN
				RETURN(VCPROMONO);
			ELSE
				RETURN NULL;
			END IF;
		END IF;
	EXCEPTION
		WHEN no_data_found THEN
			RETURN NULL;
		WHEN OTHERS THEN
			CALL ERRAUDIT(USER, 'DB_PKG_PROMOTION.GET_PROMONO()', SQLSTATE, SQLERRM);
			RETURN NULL;
	END;

"""
  returnType = character
  arguments = <
    {
      name = pccategory
      type = character
      mode = IN
    }

    {
      name = pcicode
      type = character
      mode = IN
    }

    {
      name = pnmrp
      type = bigint
      mode = IN
    }

    {
      name = pnqty
      type = bigint
      mode = IN
    }

    {
      name = pdlogindt
      type = timestamp without time zone
      mode = IN
    }

  >
  language = plpgsql
}

