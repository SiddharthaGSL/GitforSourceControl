function "main"."trigger_fct_t_invstock_log()" {
  text = """

DECLARE
   LOG_SEQ   numeric(20);
BEGIN
   IF TG_OP = 'INSERT'
   THEN
      SELECT nextval('invstock_log_seq') INTO STRICT LOG_SEQ;

      INSERT INTO INVSTOCK_LOG(LOCCODE,
                                ICODE,
                                ADMSITE_CODE,
                                PSITE_STOCKPOINT_CODE,
                                QTY,
                                AMOUNT,
                                COSTAMOUNT,
                                DISCOUNTAMT,
                                PROMOAMT,
                                TAXAMT,
                                ENTTYPE,
                                ENTDATE,/*,
                                LOGSEQ*/
                                TIME,
                                INVBATCH_SERIAL_CODE)
           VALUES (NEW.LOCCODE,
                   NEW.ICODE,
                   NEW.ADMSITE_CODE,
                   NEW.PSITE_STOCKPOINT_CODE,
                   NEW.QTY,
                   NEW.AMOUNT,
                   NEW.COSTAMOUNT,
                   NEW.DISCOUNTAMT,
                   NEW.PROMOAMT,
                   NEW.TAXAMT,
                   NEW.ENTTYPE,
                   NEW.ENTDT,/*,
                   LOG_SEQ*/
                   COALESCE(NEW.TIME,CURRENT_DATE),
                   NEW.INVBATCH_SERIAL_CODE);
   END IF;

   IF TG_OP = 'UPDATE'
   THEN
      SELECT nextval('invstock_log_seq') INTO STRICT LOG_SEQ;

      INSERT INTO INVSTOCK_LOG(LOCCODE,
                                ICODE,
                                ADMSITE_CODE,
                                PSITE_STOCKPOINT_CODE,
                                QTY,
                                AMOUNT,
                                COSTAMOUNT,
                                DISCOUNTAMT,
                                PROMOAMT,
                                TAXAMT,
                                ENTTYPE,
                                ENTDATE,/*,
                                LOGSEQ*/
                                TIME,
                                INVBATCH_SERIAL_CODE)
           VALUES (OLD.LOCCODE,
                   OLD.ICODE,
                   OLD.ADMSITE_CODE,
                   OLD.PSITE_STOCKPOINT_CODE,
                   -1 * OLD.QTY,
                   -1 * OLD.AMOUNT,
                   -1 * OLD.COSTAMOUNT,
                   -1 * OLD.DISCOUNTAMT,
                   -1 * OLD.PROMOAMT,
                   -1 * OLD.TAXAMT,
                   OLD.ENTTYPE,
                   OLD.ENTDT,/*,
                   LOG_SEQ*/
                   COALESCE(NEW.TIME,CURRENT_DATE),
                   OLD.INVBATCH_SERIAL_CODE);

      SELECT nextval('invstock_log_seq') INTO STRICT LOG_SEQ;

      INSERT INTO INVSTOCK_LOG(LOCCODE,
                                ICODE,
                                ADMSITE_CODE,
                                PSITE_STOCKPOINT_CODE,
                                QTY,
                                AMOUNT,
                                COSTAMOUNT,
                                DISCOUNTAMT,
                                PROMOAMT,
                                TAXAMT,
                                ENTTYPE,
                                ENTDATE,/*,
                                LOGSEQ*/
                                TIME,
                                INVBATCH_SERIAL_CODE)
           VALUES (NEW.LOCCODE,
                   NEW.ICODE,
                   NEW.ADMSITE_CODE,
                   NEW.PSITE_STOCKPOINT_CODE,
                   NEW.QTY,
                   NEW.AMOUNT,
                   NEW.COSTAMOUNT,
                   NEW.DISCOUNTAMT,
                   NEW.PROMOAMT,
                   NEW.TAXAMT,
                   NEW.ENTTYPE,
                   NEW.ENTDT,/*,
                   LOG_SEQ*/
                   COALESCE(NEW.TIME,CURRENT_DATE),
                   NEW.INVBATCH_SERIAL_CODE);
   END IF;

   IF TG_OP = 'DELETE'
   THEN
      SELECT nextval('invstock_log_seq') INTO STRICT LOG_SEQ;

      INSERT INTO INVSTOCK_LOG(LOCCODE,
                                ICODE,
                                ADMSITE_CODE,
                                PSITE_STOCKPOINT_CODE,
                                QTY,
                                AMOUNT,
                                COSTAMOUNT,
                                DISCOUNTAMT,
                                PROMOAMT,
                                TAXAMT,
                                ENTTYPE,
                                ENTDATE,/*,
                                LOGSEQ*/
                                TIME,
                                INVBATCH_SERIAL_CODE)
           VALUES (OLD.LOCCODE,
                   OLD.ICODE,
                   OLD.ADMSITE_CODE,
                   OLD.PSITE_STOCKPOINT_CODE,
                   -1 * OLD.QTY,
                   -1 * OLD.AMOUNT,
                   -1 * OLD.COSTAMOUNT,
                   -1 * OLD.DISCOUNTAMT,
                   -1 * OLD.PROMOAMT,
                   -1 * OLD.TAXAMT,
                   OLD.ENTTYPE,
                   OLD.ENTDT,/*,
                   LOG_SEQ*/
                   COALESCE(OLD.TIME,CURRENT_DATE),
                   OLD.INVBATCH_SERIAL_CODE);
   END IF;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
"""
  returnType = trigger
  arguments = [
  ]
  language = plpgsql
}

