function "main"."t_gvissue_journal_aud$gvissue_journal()" {
  text = """

DECLARE
    V_RECORD_OLD AUD_GVISSUE_JOURNAL%ROWTYPE;
	V_RECORD_NEW AUD_GVISSUE_JOURNAL%ROWTYPE;
    V_SID DOUBLE PRECISION;
    V_TRNID CHARACTER VARYING(50);
    V_ACTION CHARACTER VARYING(10);
    I RECORD;    
	V_AUDIT_USER CHARACTER VARYING (100);
	V_LOGINUSER  CHARACTER VARYING (100);
	V_PROGRAM    CHARACTER VARYING (100);
	V_REC_COUNT  BIGINT; 
   
BEGIN
       SELECT current_setting('audit.AUDIT_USER', true) INTO V_AUDIT_USER;
	   IF NULLIF(V_AUDIT_USER,'') IS NOT NULL THEN  
		   BEGIN
				SELECT FULLNAME
				INTO   STRICT V_LOGINUSER
				FROM   APPUSER
				WHERE  ID =  substring (V_AUDIT_USER,8,position(';' in V_AUDIT_USER)-8)::NUMERIC; 
		   EXCEPTION
				WHEN no_data_found
				THEN
					V_LOGINUSER := 'System';
			END;			
		ELSE
			V_LOGINUSER := 'SYSTEM';
		END IF;
	   
	   select application_name
	   INTO   V_PROGRAM
	   from pg_stat_activity where pid = pg_backend_pid();

       V_ACTION:=TG_OP;
	   
       SELECT TXID_CURRENT() INTO V_TRNID;
       
        IF TG_OP = 'INSERT' OR  TG_OP = 'UPDATE' THEN 
	   
           V_RECORD_NEW.ACTION := V_ACTION;
           V_RECORD_NEW.ACTION_SUBTYPE := 'NEW';
           V_RECORD_NEW.TRANSACTION_ID := V_TRNID::TEXT;		   
		   V_RECORD_NEW.code := NEW.code;
            V_RECORD_NEW.doccode := NEW.doccode;
            V_RECORD_NEW.scheme_docno := NEW.scheme_docno;
            V_RECORD_NEW.docdate := NEW.docdate;
            V_RECORD_NEW.admou_code := NEW.admou_code;
            V_RECORD_NEW.admsite_code := NEW.admsite_code;
            V_RECORD_NEW.customer_slcode := NEW.customer_slcode;
            V_RECORD_NEW.debtor_glcode := NEW.debtor_glcode;
            V_RECORD_NEW.gvcontrol_glcode := NEW.gvcontrol_glcode;
            V_RECORD_NEW.gvdiscount_glcode := NEW.gvdiscount_glcode;
            V_RECORD_NEW.grossamt := NEW.grossamt;
            V_RECORD_NEW.discountamt := NEW.discountamt;
            V_RECORD_NEW.netamt := NEW.netamt;
            V_RECORD_NEW.ycode := NEW.ycode;
            V_RECORD_NEW.remarks := NEW.remarks;
            V_RECORD_NEW.psite_posstlm_code := NEW.psite_posstlm_code;
            V_RECORD_NEW.createdby := NEW.createdby;
            V_RECORD_NEW.createdon := NEW.createdon;
            V_RECORD_NEW.lastmodifiedby := NEW.lastmodifiedby;
            V_RECORD_NEW.lastmodifiedon := NEW.lastmodifiedon;
            V_RECORD_NEW.status := NEW.status;
            V_RECORD_NEW.adjamt := NEW.adjamt;
            V_RECORD_NEW.release_status := NEW.release_status;
            V_RECORD_NEW.release_time := NEW.release_time;
            V_RECORD_NEW.release_ecode := NEW.release_ecode;
            V_RECORD_NEW.intgrefid := NEW.intgrefid;
          END IF;  
            
         IF TG_OP = 'UPDATE' OR TG_OP = 'DELETE' THEN 
	   
            V_RECORD_OLD.ACTION := V_ACTION;
            V_RECORD_OLD.ACTION_SUBTYPE := 'OLD';
            V_RECORD_OLD.TRANSACTION_ID := V_TRNID::TEXT;			
			V_RECORD_OLD.code := OLD.code;
            V_RECORD_OLD.doccode := OLD.doccode;
            V_RECORD_OLD.scheme_docno := OLD.scheme_docno;
            V_RECORD_OLD.docdate := OLD.docdate;
            V_RECORD_OLD.admou_code := OLD.admou_code;
            V_RECORD_OLD.admsite_code := OLD.admsite_code;
            V_RECORD_OLD.customer_slcode := OLD.customer_slcode;
            V_RECORD_OLD.debtor_glcode := OLD.debtor_glcode;
            V_RECORD_OLD.gvcontrol_glcode := OLD.gvcontrol_glcode;
            V_RECORD_OLD.gvdiscount_glcode := OLD.gvdiscount_glcode;
            V_RECORD_OLD.grossamt := OLD.grossamt;
            V_RECORD_OLD.discountamt := OLD.discountamt;
            V_RECORD_OLD.netamt := OLD.netamt;
            V_RECORD_OLD.ycode := OLD.ycode;
            V_RECORD_OLD.remarks := OLD.remarks;
            V_RECORD_OLD.psite_posstlm_code := OLD.psite_posstlm_code;
            V_RECORD_OLD.createdby := OLD.createdby;
            V_RECORD_OLD.createdon := OLD.createdon;
            V_RECORD_OLD.lastmodifiedby := OLD.lastmodifiedby;
            V_RECORD_OLD.lastmodifiedon := OLD.lastmodifiedon;
            V_RECORD_OLD.status := OLD.status;
            V_RECORD_OLD.adjamt := OLD.adjamt;
            V_RECORD_OLD.release_status := OLD.release_status;
            V_RECORD_OLD.release_time := OLD.release_time;
            V_RECORD_OLD.release_ecode := OLD.release_ecode;
            V_RECORD_OLD.intgrefid := OLD.intgrefid;
          END IF;  

    IF TG_OP = 'INSERT' THEN
	    V_REC_COUNT := 1;
        INSERT INTO AUD_GVISSUE_JOURNAL SELECT V_RECORD_NEW.*;
    END IF;

    IF TG_OP = 'UPDATE' THEN
	FOR I IN (
		SELECT 
		V_RECORD_OLD.release_status,
                  V_RECORD_OLD.adjamt,
                  V_RECORD_OLD.remarks,
                  V_RECORD_OLD.netamt,
                  V_RECORD_OLD.discountamt,
                  V_RECORD_OLD.grossamt,
                  V_RECORD_OLD.gvdiscount_glcode,
                  V_RECORD_OLD.gvcontrol_glcode,
                  V_RECORD_OLD.debtor_glcode,
                  V_RECORD_OLD.customer_slcode,
                  V_RECORD_OLD.docdate,
                  V_RECORD_OLD.scheme_docno
		EXCEPT
		SELECT 
		V_RECORD_NEW.release_status,
                  V_RECORD_NEW.adjamt,
                  V_RECORD_NEW.remarks,
                  V_RECORD_NEW.netamt,
                  V_RECORD_NEW.discountamt,
                  V_RECORD_NEW.grossamt,
                  V_RECORD_NEW.gvdiscount_glcode,
                  V_RECORD_NEW.gvcontrol_glcode,
                  V_RECORD_NEW.debtor_glcode,
                  V_RECORD_NEW.customer_slcode,
                  V_RECORD_NEW.docdate,
                  V_RECORD_NEW.scheme_docno
			 )
	LOOP
	  V_REC_COUNT := 1; 
		INSERT INTO AUD_GVISSUE_JOURNAL SELECT V_RECORD_OLD.*;
       INSERT INTO AUD_GVISSUE_JOURNAL SELECT V_RECORD_NEW.*;    
	END LOOP;   
    END IF;

    IF TG_OP = 'DELETE' THEN
		V_REC_COUNT := 1;
		INSERT INTO AUD_GVISSUE_JOURNAL SELECT V_RECORD_OLD.*;
    END IF;
	
	IF V_REC_COUNT >  0
	THEN
	   BEGIN
            INSERT INTO AUD_TRANSACTION (TRANSACTION_ID, TRANSACTION_DATE, LOGIN_USER, PROGRAM, MODULE_SHORTCODE, MODULE_TYPE)
            VALUES (V_TRNID,   current_date,V_LOGINUSER, V_PROGRAM, 'Gift Voucher Issue', 'Gift Voucher Issue');
       EXCEPTION WHEN unique_violation THEN
            NULL;
       END;  

       BEGIN  
             INSERT INTO AUD_TRANSACTION_TABLE (TRANSACTION_ID, TABLE_NAME)
             VALUES (V_TRNID,  'GVISSUE_JOURNAL');
       EXCEPTION WHEN unique_violation THEN
             NULL;
       END; 
	END IF;   
    

    IF TG_OP = 'INSERT' THEN
        RETURN NEW;
    ELSIF TG_OP = 'UPDATE' THEN
        RETURN NEW;
    ELSIF TG_OP = 'DELETE' THEN
        RETURN OLD;
    END IF;
    EXCEPTION
        WHEN others THEN
            CALL main.erraudit(SESSION_USER::text, 'T_GVISSUE_JOURNAL_AUD'::CHARACTER, SQLSTATE::text, SQLERRM);
			RAISE;
			RETURN NULL;
END;
"""
  returnType = trigger
  arguments = [
  ]
  language = plpgsql
}

