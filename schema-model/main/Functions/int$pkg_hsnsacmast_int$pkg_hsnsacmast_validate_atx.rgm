function "main"."int$pkg_hsnsacmast_int$pkg_hsnsacmast_validate_atx(bigint, bigint, timestamp without time zone, bigint)" {
  text = """

DECLARE

      v_status   char(1);
      errmsg     varchar(200);
      errcode    bigint;V_MAXSEQ_NO   bigint := NULL;

BEGIN
      --code  Validation
      INSERT INTO int$error_log(code, lineno, classname, userid, errortype, errordesc,
                   createdon)
         SELECT nextval('int$error_log_code'), lineno, 'HSNSACMAST', userid,
                'Data Validation', 'HSN/SAC Code is mandatory.', clock_timestamp()
           FROM int$stg_HSNSACMAST a
          WHERE hsn_sac_code is null
            AND a.userid = p_userid;

         --MULTIPLE HSN CODE IF FOUND SHOULD BE RESTRICTED
      INSERT INTO int$error_log(code, lineno, classname, userid, errortype, errordesc,
                   createdon)
         SELECT nextval('int$error_log_code'), a.lineno, 'HSNSACMAST', userid,
                'Data Validation',
                'Multiple HSN/SAC Code found.',
                clock_timestamp()
           FROM int$stg_HSNSACMAST a
          WHERE a.userid = P_USERID
          AND   1 < ( SELECT COUNT(*) FROM int$stg_HSNSACMAST B WHERE  B.HSN_SAC_CODE = A.HSN_SAC_CODE AND B.userid = P_USERID );

      INSERT INTO int$error_log(code, lineno, classname, userid, errortype, errordesc,
                   createdon)
         SELECT nextval('int$error_log_code'), lineno, 'HSNSACMAST', userid,
                'Data Validation', 'Special character is not allowed in HSNSAC Code field, except space, hyphen, @, # and %', clock_timestamp()
           FROM int$stg_HSNSACMAST a
          WHERE length(translate(hsn_sac_code,'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789-@#% ',' ')) > 1
          AND  hsn_sac_code is NOT NULL
          AND a.userid = p_userid;

      INSERT INTO int$error_log(code, lineno, classname, userid, errortype, errordesc,
                   createdon)
         SELECT nextval('int$error_log_code'), lineno, 'HSNSACMAST', userid,
                'Data Validation', 'HSN/SAC Code cannot be more than 20 characters.', clock_timestamp()
           FROM int$stg_HSNSACMAST a
          WHERE LENGTH(hsn_sac_code) > 20
          AND  hsn_sac_code is NOT NULL
          AND a.userid = p_userid;

      INSERT INTO int$error_log(code, lineno, classname, userid, errortype, errordesc,
                   createdon)
         SELECT nextval('int$error_log_code'), lineno, 'HSNSACMAST', userid,
                'Data Validation', 'Description cannot be more than 100 characters.', clock_timestamp()
           FROM int$stg_HSNSACMAST a
          WHERE LENGTH(DESCRIPTION) > 100
          AND  DESCRIPTION is NOT NULL
          AND a.userid = p_userid;

      INSERT INTO int$error_log(code, lineno, classname, userid, errortype, errordesc,
                   createdon)
         SELECT nextval('int$error_log_code'), lineno, 'HSNSACMAST', userid,
                'Data Validation', 'Only Yes or No are allowed in Extinct.', clock_timestamp()
           FROM int$stg_HSNSACMAST a
          WHERE UPPER(EXTINCT) NOT IN ('YES','NO')
          AND  EXTINCT is NOT NULL
          AND a.userid = p_userid;

      INSERT INTO int$error_log(code, lineno, classname, userid, errortype, errordesc,
                   createdon)
         SELECT nextval('int$error_log_code'), lineno, 'HSNSACMAST', userid,
                'Data Validation', 'HSN/SAC Codes cannot be created as Extinct.', clock_timestamp()
           FROM int$stg_hsnsacmast a
LEFT OUTER JOIN invhsnsacmain h ON (UPPER(a.HSN_SAC_CODE) = UPPER(H.HSN_SAC_CODE))
WHERE UPPER(a.EXTINCT) = 'YES'  AND H.HSN_SAC_CODE is null AND a.userid = p_userid;

      INSERT INTO int$error_log(code, lineno, classname, userid, errortype, errordesc,
                   createdon)
         SELECT nextval('int$error_log_code'), lineno, 'HSNSACMAST', userid,
                'Data Validation', 'System master cannot be modified.', clock_timestamp()
           FROM int$stg_HSNSACMAST a,INVHSNSACMAIN H
          WHERE UPPER(a.HSN_SAC_CODE) = UPPER(H.HSN_SAC_CODE)
          AND   h.ISSYSTEM = 'Y'
          AND   a.userid = p_userid;

      INSERT INTO int$error_log(code, lineno, classname, userid, errortype, errordesc,
                   createdon)
         SELECT nextval('int$error_log_code'), lineno, 'HSNSACMAST', userid,
                'Data Validation', 'Only Goods or Services are allowed in ''Applicable for''.', clock_timestamp()
           FROM int$stg_HSNSACMAST a
          WHERE UPPER(APPL_FOR) NOT IN ('GOODS','SERVICES')
          AND  APPL_FOR is NOT NULL
          AND a.userid = p_userid;

--Govt. Identifier  Validation
      INSERT INTO int$error_log(code, lineno, classname, userid, errortype, errordesc,
                   createdon)
         SELECT nextval('int$error_log_code'), lineno, 'HSNSACMAST', userid,
                'Data Validation', 'Government Identifier is mandatory.', clock_timestamp()
           FROM int$stg_HSNSACMAST a
          WHERE govt_identifier is null
            AND a.userid = p_userid;

      INSERT INTO int$error_log(code, lineno, classname, userid, errortype, errordesc,
                   createdon)
         SELECT nextval('int$error_log_code'), lineno, 'HSNSACMAST', userid,
                'Data Validation', 'Government Identifier cannot be more than 20 characters.', clock_timestamp()
           FROM int$stg_HSNSACMAST a
          WHERE LENGTH(govt_identifier) > 20
          AND  govt_identifier is NOT NULL
          AND a.userid = p_userid;

      INSERT INTO int$error_log(code, lineno, classname, userid, errortype, errordesc,
                   createdon)
         SELECT nextval('int$error_log_code'), lineno, 'HSNSACMAST', userid,
                'Data Validation', 'Special character is not allowed in Government Identifier field, except space and hyphen', clock_timestamp()
           FROM int$stg_HSNSACMAST a
          WHERE length(translate(govt_identifier,'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789- ',' ')) > 1
          AND  govt_identifier is NOT NULL
          AND a.userid = p_userid;

      -- Check whether records are valid or not
      BEGIN
         SELECT 'S'
           INTO STRICT v_status
           
          WHERE EXISTS (SELECT 'S'
                          FROM int$error_log
                         WHERE userid = p_userid);

         RETURN('0');
      EXCEPTION
         WHEN no_data_found
         THEN
            RETURN('1');
      END;
   EXCEPTION
      WHEN OTHERS
      THEN
         errcode := SQLSTATE;
         errmsg := SQLERRM;

         --Error log for Oracle Internal Error
         INSERT INTO int$error_log(code, lineno, classname,
                      userid, errortype, errordesc, createdon
                     )
              VALUES (nextval('int$error_log_code'), 0, 'HSNSACMAST',
                      p_userid, errcode, errmsg, clock_timestamp()
                     );

         --COMMIT;
         RETURN('0');
   END;

"""
  returnType = character
  arguments = <
    {
      name = p_userid
      type = bigint
      mode = IN
    }

    {
      name = p_connect_site
      type = bigint
      mode = IN
    }

    {
      name = p_logging_date
      type = timestamp without time zone
      mode = IN
    }

    {
      name = p_connect_ou
      type = bigint
      mode = IN
    }

  >
  language = plpgsql
}

