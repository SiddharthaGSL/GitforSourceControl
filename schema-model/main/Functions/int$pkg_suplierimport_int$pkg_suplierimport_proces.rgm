function "main"."int$pkg_suplierimport_int$pkg_suplierimport_process_atx(bigint, bigint, timestamp without time zone, bigint)" {
  text = """

DECLARE

      ora2pg_rowcount int;
	  errmsg       varchar(500);
      vsession     varchar(100);
      vdetailtbl   varchar(1000);
      vdetailrec   varchar(500);
      errcode      text;
      vmaxno       bigint;
      vcount       bigint;
      -- start rev : 005
      v_cp_category_code    admgstcategory.code%type;
      -- end rev : 005
c1 RECORD;

BEGIN
      -- start rev : 005
      begin
        select  gc.code
        into STRICT    v_cp_category_code
        from    admgstcategory gc
        where   upper(gc.name) = 'UNREGISTERED';
      exception
        when no_data_found then
        v_cp_category_code := null;
      end;
      -- end rev : 005
      -- START REV : 010
      for c1 IN (SELECT a.slcode, a.slid, a.slname, a.abbre, a.baddr, coalesce(a.bdist,BCITY.DIST) BDIST,
                       BCITY.CTNAME bctname, a.bpin, a.bph1, a.bph2, a.bph3, a.bph4,
                       a.bfx1, a.bfx2, a.bemail, a.bwebsite, a.bcp, a.lstno,
                       a.cstno, class_name, c.clscode, gl_name, g.glcode,
                       trpid,  trp.slcode trpcode, agent_id,
                       a.agrate, ag.slcode agcode, a.intrate,
                       a.crdays, a.pan, a.REM,
                       CASE WHEN UPPER(a.ext)='YES' THEN  'Y' 
					   		WHEN UPPER(a.ext)='NO' THEN  'N'  
							ELSE NULL 
						END  ext,
                       a.default_markup, a.round_off_markup,
                       CASE WHEN UPPER(a."LIMIT")='UPPER' THEN  'U' 
					   		WHEN UPPER(a."LIMIT")='LOWER' THEN  'L' 
							WHEN UPPER(a."LIMIT")='ROUND' THEN  'R'                                 
							ELSE NULL  -- REV : 002
 					   	END  "LIMIT",
                       a.tdssrc_name, src.tdssrccode, a.chqlabel,
                       CASE WHEN UPPER(a.whether_consignment)='YES' THEN  'Y' 
					   		WHEN UPPER(a.whether_consignment)='NO' THEN  'N'                                 
							ELSE NULL  -- REV : 002
 						END  whether_consignment,
                       CASE WHEN trim(both UPPER(a.pricetype))='EFFECTIVE RATE' THEN  'C' 
					   		WHEN trim(both UPPER(a.pricetype))='BASIC RATE' THEN 'B' 
							WHEN trim(both UPPER(a.pricetype))='MRP' THEN  'L' 
							WHEN trim(both UPPER(a.pricetype))='WSP' THEN  'W' 
							WHEN trim(both UPPER(a.pricetype))='RSP' THEN  'M' 
							WHEN trim(both UPPER(a.pricetype))='STADARD RATE' THEN  'R' 
							WHEN trim(both UPPER(a.pricetype))='STANDARD RATE' THEN 'R'                                 
							ELSE NULL  -- REV : 002
 						END  pricetype,
                       a.cr_name,
                       -- START REV : 001
                      --a.cramt,
                       a.CREDIT_LIMIT CRAMT,
                       -- END REV : 001
                       CASE WHEN UPPER(a.lgt_appl)='YES' THEN  'Y' 
					   		WHEN UPPER(a.lgt_appl)='NO' THEN 'N'  
							ELSE NULL 
						END  lgt_appl,
                       a.default_markup_wsp, a.round_off_markup_wsp,
                       CASE WHEN UPPER(a.limit_wsp)='UPPER' THEN  'U' 
					   		WHEN UPPER(a.limit_wsp)='LOWER' THEN  'L' 
							WHEN UPPER(a.limit_wsp)='ROUND' THEN  'R'                                 
							ELSE NULL  -- REV : 002
 						END  limit_wsp,
                       a.saddr, coalesce(a.sdist,SCITY.DIST) SDIST, SCITY.CTNAME sctname, 
					   a.spin, a.sph1, a.sph2, a.sph3, a.sph4, a.sfx1, a.sfx2, a.semail, a.swebsite,
                       a.scp,
                       CASE WHEN trim(both UPPER(a.due_date_basis))='ENTRY DATE' THEN  'E' 
					   		WHEN trim(both UPPER(a.due_date_basis))='DOCUMENT DATE' THEN  'D'                               
							--,'D'
                            ELSE NULL  -- REV : 002
 						END  due_date_basis,
                       CASE WHEN UPPER(a.cash_discount_applicable)='YES' THEN  'Y'
					   		WHEN UPPER(a.cash_discount_applicable)='NO' THEN  'N'                              
							ELSE NULL  -- REV : 002
							END  cash_discount_applicable,
                       a.cash_discount_percentage, a.cash_discount_period,
                       a.slowner, a.brand, a.product,
                       CASE WHEN trim(both UPPER(a.companytype))='PROPRIETORSHIP' THEN  'PRO' 
					   		WHEN trim(both UPPER(a.companytype))='PARTNERSHIP' THEN  'PAR' 
							WHEN trim(both UPPER(a.companytype))='PRIVATE LIMITED' THEN  'PRI' 
							WHEN trim(both UPPER(a.companytype))='LIMITED' THEN  'LIM' 
							WHEN trim(both UPPER(a.companytype))='HUF' THEN  'HUF' 
							WHEN trim(both UPPER(a.companytype))='CO-OPERATIVE' THEN  'COO' 
							WHEN trim(both UPPER(a.companytype))='OTHERS' THEN  'OTH'                                 
							ELSE NULL  -- REV : 002
 						END  companytype,
                       CASE WHEN trim(both UPPER(a.industrytype))='SMALL SCALE' THEN  'SMA' 
					   		WHEN trim(both UPPER(a.industrytype))='LARGE SCALE' THEN  'LRG' 
							WHEN trim(both UPPER(a.industrytype))='GOVERNMENT' THEN  'GOV' 
							WHEN trim(both UPPER(a.industrytype))='CONTRACTOR' THEN  'CON' 
							WHEN trim(both UPPER(a.industrytype))='OTHERS' THEN  'OTH'                                 
							ELSE NULL  -- REV : 002
 						END  industrytype,
                       a.cstdate, a.lstdate, a.exciseno, a.excise_date,
                       a.servicetaxno, a.servicetaxdate, a.servicetaxcategor,
                       a.ssino, a.microno, a.bankname, a.bankaccountno,
                       a.bankmicrcode, a.bankifccode, a.bankrtgscode,
                       a.bemail2, a.semail2,
                       CASE WHEN UPPER(a.permit_appl)='YES' THEN  'Y' 
					   		WHEN UPPER(a.permit_appl)='NO' THEN  'N'  
							ELSE NULL  -- REV : 002
 						END  permit_appl,
                       purchase_glname, glp.glcode purchase_glcode,
                       purchase_slid, slp.slcode purchase_slcode,
                       purchase_return_glname,
                       rglp.glcode purchase_return_glcode,
                       purchase_return_slid,
                       rslp.slcode purchase_return_slcode,
                       a.markup_selling_price, a.markup_selling_round_off,
                       CASE WHEN UPPER(a.markup_selling_limit)='UPPER' THEN  'U' 
					   		WHEN UPPER(a.markup_selling_limit)='LOWER' THEN  'L' 
							WHEN UPPER(a.markup_selling_limit)='ROUND' THEN  'R'                                 
							ELSE NULL  -- REV : 002
 						END  markup_selling_limit,
                       CASE WHEN UPPER(a.out_lgt_appl)='YES' THEN  'Y' 
					   		WHEN UPPER(a.out_lgt_appl)='NO' THEN 'N'                                  
							ELSE NULL  -- REV : 002
 						END  out_lgt_appl,
                       CASE WHEN UPPER(a.out_permit_appl)='YES' THEN  'Y'                                 
					   		WHEN UPPER(a.out_permit_appl)='NO' THEN 'N'                                  
							ELSE NULL  -- REV :002
						END  out_permit_appl,
                       CASE WHEN UPPER(a.gatein_appl)='YES' THEN  'Y' 
					   		WHEN UPPER(a.gatein_appl)='NO' THEN 'N'                                 
					   		ELSE NULL  -- REV : 002
						END  gatein_appl,
                       fintradegrp_name, t.code fintradegrp_code,
                       purtermmain_name, trm.code purtermmain_code,
                       admcurrency_name, cu.code admcurrency_code,
                       CASE WHEN UPPER(a.tds_app)='YES' THEN  'Y' 
					   		WHEN UPPER(a.tds_app)='NO' THEN 'N'                                  
					   		ELSE NULL -- REV : 002
						END  tds_app,
                       CASE WHEN UPPER(a.allow_jobber_stockpoint)='YES' THEN  'Y' 
					   		WHEN UPPER(a.allow_jobber_stockpoint)='NO' THEN  'N'                            
					   --,'N'
							ELSE NULL  -- REV : 002
 						END  allow_jobber_stockpoint,
                       a.prd_max_days,
                       CASE WHEN trim(both UPPER(a.prd_overdue_action))='RESTRICT ORDER' THEN  'O' 
					   		WHEN trim(both UPPER(a.prd_overdue_action))='NO RESTRICTION' THEN  'N'                               
					   --,'N'
						ELSE NULL  -- REV : 002
						END  prd_overdue_action,
                       admcmptax_name, tx.code admcmptax_code, purform_name,
                       formcode purformcode,
                       CASE WHEN UPPER(a.pur_price_chart_appl)='YES' THEN  'Y'                                 
					   		WHEN UPPER(a.pur_price_chart_appl)='NO' THEN 'N'                                  
					   		ELSE NULL  -- REV : 002
 						END  pur_price_chart_appl,
                       a.pur_delivery_buffer_days,
                       CASE WHEN UPPER(a.shipment_tracking_appl)='YES' THEN  'Y' 
					   		WHEN UPPER(a.shipment_tracking_appl)='NO' THEN  'N'                            
							--,'N'
                            ELSE NULL  -- REV : 002
 						END  shipment_tracking_appl,
                       CASE WHEN UPPER(a.bale_wise_lrqty)='YES' THEN  'Y' 
							WHEN UPPER(a.bale_wise_lrqty)='NO' THEN  'N'                             
							--,'N'
                       		ELSE NULL  -- REV : 002
 						END  bale_wise_lrqty, a.pur_duedays, a.cinno, cr.crcode,TXC.TAXCODE  TAXCODE
                      -- START REV : 001
                        ,CREDIT_VERIFICATION_RULE  ,
                        CREDIT_LIMIT_TOLERANCE  ,
                        MAX_CREDIT_OVERDUE_DAYS  ,
                        CREDIT_OVERDUE_LIMIT
                       -- END REV : 001
                       -- start rev : 005
                       ,upper(a.gst_identification_no)  gst_identification_no
                       ,a.gst_registration_date
                       ,gc.code  gst_category_code
                       -- end rev : 005
                       -- START REV : 007
                       ,a.PO_ORDER_LIMIT
                       -- END REV : 007
                       -- START REV : 008
                       ,c.clstype   excel_cls_type
                       ,c.clscode   excel_cls_code
                       ,(select coalesce(cl2.clstype,'@@') from admcls cl2 
						 where upper(cl2.clsname)=upper(a.class_name)) old_cls_type
                       -- END REV : 008
				 		,a.transporter_id
                  FROM int$stg_suplierimport a
                       LEFT OUTER JOIN finform f ON UPPER (a.purform_name) = UPPER (f.formname)
                       LEFT OUTER JOIN fintradegrp t ON UPPER (a.fintradegrp_name) = upper (t.name)
                       LEFT OUTER JOIN admcls c ON UPPER (a.class_name) = upper (c.clsname)
                       LEFT OUTER JOIN fingl g ON UPPER (a.gl_name) = upper (g.glname)
                       LEFT OUTER JOIN finsl trp ON UPPER (a.trpid) = upper (trp.slid)
                       LEFT OUTER JOIN finsl ag ON UPPER (a.agent_id) = upper (ag.slid)
                       LEFT OUTER JOIN fintdssrc src ON UPPER (a.tdssrc_name) = upper (src.tdssrcname)
                       LEFT OUTER JOIN salcreditrating cr ON UPPER (a.cr_name) = upper (cr.crname)
                       LEFT OUTER JOIN fingl glp ON UPPER (a.purchase_glname) = upper (glp.glname)
                       LEFT OUTER JOIN finsl slp ON UPPER (a.purchase_slid) = upper (slp.slid)
                       LEFT OUTER JOIN fingl rglp ON UPPER (a.purchase_return_glname) = upper (rglp.glname)
                       LEFT OUTER JOIN finsl rslp ON UPPER (a.purchase_return_slid) = upper (rslp.slid)
                       LEFT OUTER JOIN purtermmain trm ON UPPER (a.purtermmain_name) = upper (trm.name)
                       LEFT OUTER JOIN admcurrency cu ON UPPER (a.admcurrency_name) = upper (cu.name)
                       LEFT OUTER JOIN admcmptax tx ON UPPER (a.admcmptax_name) = upper (tx.name)
                       LEFT OUTER JOIN fintaxmain  txc ON UPPER (a.taxgrpname) = upper (txc.taxname)
                       LEFT OUTER JOIN admcity  bcity ON a.bctname = UPPER (bCITY.ctname)
                       LEFT OUTER JOIN admcity  scity ON a.sctname = UPPER (SCITY.ctname)
                       LEFT OUTER JOIN admgstcategory gc ON upper(coalesce(a.gst_category,'@@')) = upper(gc.name)
			WHERE g.srctype = 'R'
			-- START REV : 006
                  /* AND UPPER (a.bctname) = UPPER (bCITY.ctname(+))
                   AND UPPER (a.bctname) = UPPER (SCITY.ctname(+))*/
   			-- END REV : 006
            -- start rev : 005
  			-- end rev : 005
  			AND a.userid = p_userid 
			ORDER BY A.SLCODE)
       LOOP
          UPDATE  FINSL sl
          SET slname = coalesce(C1.slname,sl.slname), abbre =coalesce(C1.abbre,sl.abbre), baddr = coalesce(C1.baddr,sl.baddr),
                   bdist = coalesce(C1.bdist,sl.bdist), bctname = coalesce(C1.bctname,sl.bctname), bpin = coalesce(C1.bpin,sl.bpin),
                   bph1 = coalesce(C1.bph1,sl.bph1), bph2 = coalesce(C1.bph2,sl.bph2), bph3 = coalesce(C1.bph3,sl.bph3),
                   bph4 = coalesce(C1.bph4,sl.bph4), bfx1 = coalesce(C1.bfx1,sl.bfx1), bfx2 = coalesce(C1.bfx2,sl.bfx2),
                   bemail = coalesce(C1.bemail,sl.bemail), bwebsite = coalesce(C1.bwebsite,sl.bwebsite),
                   bcp = coalesce(C1.bcp,sl.bcp), lstno = coalesce(C1.lstno,sl.lstno), cstno = coalesce(C1.cstno,sl.cstno),
                   trpcode = coalesce(C1.trpcode,sl.trpcode), agcode = coalesce(C1.agcode,sl.agcode),
                   agrate = coalesce(C1.agrate,sl.agrate), intrate = coalesce(C1.intrate,sl.intrate),
                   crdays = coalesce(C1.crdays,sl.crdays), pan = coalesce(C1.pan,sl.pan), REM = coalesce(C1.REM,sl.REM),
                   ext = coalesce(C1.ext,coalesce(sl.ext,'N')), taxapp = 'N',
                   default_markup = coalesce(C1.default_markup,sl.default_markup),
                   round_off_markup = coalesce(C1.round_off_markup,sl.round_off_markup), 
				   "limit" = coalesce(C1."LIMIT",coalesce(sl.LIMIT,'U')),
                   --tdssrccode = C1.tdssrccode,
                   chqlabel = coalesce(C1.chqlabel,sl.chqlabel),
                   whether_consignment = coalesce(C1.whether_consignment,coalesce(sl.whether_consignment,'N')),
                    pricetype = coalesce(C1.pricetype,coalesce(sl.pricetype,'C')),
                   crcode = coalesce(C1.crcode,sl.crcode), cramt = coalesce(C1.cramt,sl.cramt),
                   lgt_appl = coalesce(C1.lgt_appl,coalesce(sl.lgt_appl,'N')),
                   default_markup_wsp = coalesce(C1.default_markup_wsp,sl.default_markup_wsp),
                   round_off_markup_wsp = coalesce(C1.round_off_markup_wsp,sl.round_off_markup_wsp),
                   limit_wsp = coalesce(C1.limit_wsp,coalesce(sl.limit_wsp,'U')), saddr = coalesce(C1.saddr,sl.saddr),
                   sdist = coalesce(C1.sdist,sl.sdist), sctname = coalesce(C1.sctname,sl.sctname), spin = coalesce(C1.spin,sl.spin),
                   sph1 = coalesce(C1.sph1,sl.sph1), sph2 = coalesce(C1.sph2,sl.SPH2), sph3 = coalesce(C1.sph3,sl.SPH3),
                   sph4 = coalesce(C1.sph4,sl.sph4), sfx1 = coalesce(C1.sfx1,sl.SFX1), sfx2 = coalesce(C1.sfx2,sl.SFX2),
                   semail = coalesce(C1.semail,sl.semail), swebsite = coalesce(C1.swebsite,sl.swebsite),
                   scp = coalesce(C1.scp,sl.SCP), due_date_basis = coalesce(C1.due_date_basis,coalesce(sl.due_date_basis,'E')),
                   cash_discount_applicable = coalesce(C1.cash_discount_applicable,coalesce(sl.cash_discount_applicable,'N')),
                   cash_discount_percentage = coalesce(C1.cash_discount_percentage,sl.cash_discount_percentage),
                   cash_discount_period = coalesce(C1.cash_discount_period,sl.cash_discount_period),
                   slowner = coalesce(C1.slowner,sl.slowner), brand = coalesce(C1.brand,sl.brand),
                   product = coalesce(C1.product,sl.product), companytype = coalesce(C1.companytype,coalesce(sl.companytype,'OTH')),
                   industrytype = coalesce(C1.industrytype,coalesce(sl.industrytype,'OTH')), cstdate = coalesce(C1.cstdate,sl.cstdate),
                   lstdate = coalesce(C1.lstdate,sl.lstdate), exciseno = coalesce(C1.exciseno,sl.exciseno),
                   excise_date = coalesce(C1.excise_date,sl.excise_date),
                   servicetaxno = coalesce(C1.servicetaxno,sl.servicetaxno),
                   servicetaxdate = coalesce(C1.servicetaxdate,sl.servicetaxdate),
                   servicetaxcategor = coalesce(C1.servicetaxcategor,sl.servicetaxcategor),
                   ssino = coalesce(C1.ssino,sl.ssino), microno = coalesce(C1.microno,sl.microno),
                   bankname = coalesce(C1.bankname,sl.bankname), bankaccountno = coalesce(C1.bankaccountno,sl.bankaccountno),
                   bankmicrcode = coalesce(C1.bankmicrcode,sl.bankmicrcode),
                   bankifccode = coalesce(C1.bankifccode,sl.bankifccode),
                   bankrtgscode = coalesce(C1.bankrtgscode,sl.bankrtgscode), bemail2 = coalesce(C1.bemail2,sl.bemail2),
                   semail2 = coalesce(C1.semail2,sl.semail2), slid = coalesce(C1.slid,sl.slid), cmpcode = 1,
                   permit_appl = coalesce(C1.permit_appl,coalesce(sl.permit_appl,'N')),
                   purchase_glcode = coalesce(C1.purchase_glcode,sl.purchase_glcode),
                   purchase_slcode = coalesce(C1.purchase_slcode,sl.purchase_slcode),
                   purchase_return_glcode = coalesce(C1.purchase_return_glcode,sl.purchase_return_glcode),
                   purchase_return_slcode = coalesce(C1.purchase_return_slcode,sl.purchase_return_slcode),
                   markup_selling_price = coalesce(C1.markup_selling_price,sl.markup_selling_price),
                   markup_selling_round_off = coalesce(C1.markup_selling_round_off,sl.markup_selling_round_off),
                   markup_selling_limit = coalesce(C1.markup_selling_limit,coalesce(sl.markup_selling_limit,'U')),
                   out_lgt_appl = coalesce(C1.out_lgt_appl,coalesce(sl.out_lgt_appl,'N')), -- REV : 002
                   gatein_appl = coalesce(C1.gatein_appl,coalesce(sl.gatein_appl,'N')),
                   fintradegrp_code = coalesce(C1.fintradegrp_code,sl.fintradegrp_code),
                   purtermmain_code = coalesce(C1.purtermmain_code,sl.purtermmain_code),
                   admcurrency_code = coalesce(C1.admcurrency_code,sl.admcurrency_code),
                   out_permit_appl = coalesce(C1.out_permit_appl,coalesce(sl.out_permit_appl,'N'))
                  -- tds_app = C1.tds_app,
                 --  allow_jobber_stockpoint = C1.allow_jobber_stockpoint,
                 -- start rev : 011
                 ,tds_app = coalesce(c1.tds_app, coalesce(sl.tds_app,'N'))
                 -- START REV : 012
                 --,tdssrccode = c1.tdssrccode
                 ,tdssrccode = CASE WHEN tdssrccode = NULL THEN  c1.tdssrccode  ELSE tdssrccode END
                 -- END REV : 012
                   ,pur_duedays = coalesce(C1.pur_duedays,coalesce(sl.pur_duedays,365))
                   ,prd_max_days = coalesce(C1.prd_max_days,sl.prd_max_days),
                   prd_overdue_action = coalesce(C1.prd_overdue_action,coalesce(sl.prd_overdue_action,'N')),
                   admcmptax_code = coalesce(C1.admcmptax_code,sl.admcmptax_code),
                   purformcode = coalesce(C1.purformcode,sl.purformcode),
                   pur_price_chart_appl = coalesce(C1.pur_price_chart_appl,coalesce(sl.pur_price_chart_appl,'N')),
                   pur_delivery_buffer_days = coalesce(C1.pur_delivery_buffer_days,sl.pur_delivery_buffer_days),
                   shipment_tracking_appl = coalesce(C1.shipment_tracking_appl,coalesce(sl.shipment_tracking_appl,'N')),
                   bale_wise_lrqty = coalesce(C1.bale_wise_lrqty,coalesce(sl.bale_wise_lrqty,'N')),
                   taxcode = coalesce(C1.taxcode,sl.taxcode)
                   -- START REV : 001
                    ,CVRULE  = coalesce(C1.CREDIT_VERIFICATION_RULE,coalesce(sl.CVRULE,'N') )
                   -- ,CRAMT   = NVL(CRAMT,CREDIT_LIMIT)
                    ,CRTOLERANCE = coalesce(C1.CREDIT_LIMIT_TOLERANCE,sl.CRTOLERANCE)
                    ,CROVERDUEDAYS = coalesce(C1.MAX_CREDIT_OVERDUE_DAYS,sl.CROVERDUEDAYS)
                    ,CROVERDUEAMT  = coalesce(C1.CREDIT_OVERDUE_LIMIT,sl.CROVERDUEAMT )
                   -- END REV : 001
                   -- start rev : 005
                   ,cp_category_code = coalesce(C1.gst_category_code,sl.cp_category_code)
                   ,cp_gstin_no = upper(coalesce(C1.gst_identification_no,sl.cp_gstin_no))
                   ,cp_gstin_date = coalesce(C1.gst_registration_date,sl.cp_gstin_date)
                   ,cp_gstin_state_code = coalesce((substr(C1.gst_identification_no,1,2)),sl.cp_gstin_state_code)
                   -- end rev : 005
                   -- START REV : 007
                   ,PO_ORDER_LIMIT   = coalesce(C1.PO_ORDER_LIMIT,sl.PO_ORDER_LIMIT)
                   -- END REV : 007
                   -- start rev : 008
                   ,clscode = case when C1.excel_cls_type = C1.old_cls_type then
                                    C1.excel_cls_code
                                  else
                                     sl.clscode
                             end
							 ,transporter_id = COALESCE(c1.transporter_id,sl.transporter_id)
          WHERE SLCODE = C1.SLCODE;

       GET DIAGNOSTICS ora2pg_rowcount = ROW_COUNT;
IF ora2pg_rowcount = 0
       THEN
            INSERT into FINSL(SLCODE,slname, abbre, baddr, bdist, bctname, bpin, bph1, bph2,
                    bph3, bph4, bfx1, bfx2, bemail, bwebsite, bcp, lstno,
                    cstno, clscode, glcode, trpcode, agcode, agrate, intrate,
                    crdays, pan, REM, ext, taxapp, taxcode, default_markup,
                    round_off_markup, "limit", tdssrccode, chqlabel, taxchgper,
                    dischgper, whether_consignment, pricelistcode, pricetype,
                    outloccode, inloccode, saltermcode, crcode, cramt,
                    lgt_appl, default_markup_wsp, round_off_markup_wsp,
                    limit_wsp, saddr, sdist, sctname, spin, sph1, sph2, sph3,
                    sph4, sfx1, sfx2, semail, swebsite, scp, due_date_basis,
                    cash_discount_applicable, cash_discount_percentage,
                    cash_discount_period, slowner, brand, product,
                    companytype, industrytype, cstdate, lstdate, exciseno,
                    excise_date, servicetaxno, servicetaxdate, tdscategory,
                    servicetaxcategor, ssino, microno, bankname,
                    bankaccountno, bankmicrcode, bankifccode, bankrtgscode,
                    bemail2, semail2, slid, cmpcode, permit_appl,
                    purchase_glcode, purchase_slcode, purchase_return_glcode,
                    purchase_return_slcode, markup_selling_price,
                    markup_selling_round_off, markup_selling_limit, saletype,
                    track_secondary_inventory, consignment_glcode,
                    sales_glcode, sales_slcode, sales_return_glcode,
                    sales_return_slcode, consignment_sales_glcode,
                    consignment_sales_slcode, consignment_trnsfr_glcode,
                    consignment_trnsfr_slcode, out_lgt_appl, out_permit_appl,
                    gatein_appl, fintradegrp_code, purtermmain_code,
                    admcurrency_code, tds_app, allow_jobber_stockpoint,
                    prd_max_days, prd_overdue_action, admcmptax_code,
                    purformcode, saltradegrp_code, salformcode,
                    pur_price_chart_appl, pur_delivery_buffer_days,
                    shipment_tracking_appl, bale_wise_lrqty, pur_duedays,
                    cinno
                   -- START REV : 001
                    ,CVRULE
                   -- ,CRAMT
                    ,CRTOLERANCE
                    ,CROVERDUEDAYS
                    ,CROVERDUEAMT
                    -- END REV : 001
                    -- start rev : 005
                   ,cp_category_code
                   ,cp_gstin_no
                   ,cp_gstin_date
                   ,cp_gstin_state_code
                   -- end rev : 005
                   -- START REV : 007
                   ,PO_ORDER_LIMIT
                   -- END REV : 007
					,transporter_id
                    )
            VALUES (nextval('finsl_slcode'),C1.slname, C1.abbre, C1.baddr, C1.bdist, C1.bctname,
                    C1.bpin, C1.bph1, C1.bph2, C1.bph3, C1.bph4,
                    C1.bfx1, C1.bfx2, C1.bemail, C1.bwebsite, C1.bcp,
                    C1.lstno, C1.cstno, C1.clscode, C1.glcode,
                    C1.trpcode, C1.agcode, C1.agrate, C1.intrate,
                    C1.crdays, C1.pan, C1.REM, coalesce(C1.ext,'N'), 'N',
                                                               ----C1.taxapp,
                                                                C1.TAXCODE,
                                                                --C1.taxcode,
                    C1.default_markup, C1.round_off_markup,
                    coalesce(C1."LIMIT",'U'), -- REV : 002
                    C1.tdssrccode, C1.chqlabel, NULL,       --C1.taxchgper,
                                                       NULL,  --C1.dischgper,
                    coalesce(C1.whether_consignment,'N'), NULL,        --C1.pricelistcode,
                    coalesce(C1.pricetype,'C'),
                    NULL, NULL,
                    NULL, C1.crcode, C1.cramt, coalesce(C1.lgt_appl,'N'),
                    C1.default_markup_wsp, C1.round_off_markup_wsp,
                    coalesce(C1.limit_wsp,'U'), C1.saddr, C1.sdist, C1.sctname,
                    C1.spin, C1.sph1, C1.sph2, C1.sph3, C1.sph4,
                    C1.sfx1, C1.sfx2, C1.semail, C1.swebsite, C1.scp,
                    coalesce(C1.due_date_basis,'E'), coalesce(C1.cash_discount_applicable,'N'),
                    C1.cash_discount_percentage, C1.cash_discount_period,
                    C1.slowner, C1.brand, C1.product, coalesce(C1.companytype,'OTH'),
                    coalesce(C1.industrytype,'OTH'), C1.cstdate, C1.lstdate, C1.exciseno,
                    C1.excise_date, C1.servicetaxno, C1.servicetaxdate,
                    NULL, C1.servicetaxcategor, C1.ssino, C1.microno,
                    C1.bankname, C1.bankaccountno, C1.bankmicrcode,
                    C1.bankifccode, C1.bankrtgscode, C1.bemail2,
                    C1.semail2, C1.slid, 1,                   --C1.cmpcode,
                                             coalesce(C1.permit_appl,'N'),
                    C1.purchase_glcode, C1.purchase_slcode,
                    C1.purchase_return_glcode, C1.purchase_return_slcode,
                    C1.markup_selling_price, C1.markup_selling_round_off,
                    coalesce(C1.markup_selling_limit,'U'), NULL,            --C1.saletype,
                                                   NULL,
                                                 -- track_secondary_inventory,
                                                        NULL, NULL, NULL,
                    NULL, NULL, NULL, NULL, NULL, NULL, coalesce(C1.out_lgt_appl,'N'),
                    coalesce(C1.out_permit_appl,'N'), coalesce(C1.gatein_appl,'N'),
                    C1.fintradegrp_code, C1.purtermmain_code,
                    C1.admcurrency_code, coalesce(C1.tds_app,'N'),
                    coalesce(C1.allow_jobber_stockpoint,'N'), C1.prd_max_days,
                    coalesce(C1.prd_overdue_action,'N'), C1.admcmptax_code,
                    C1.purformcode, NULL, NULL, coalesce(C1.pur_price_chart_appl,'N'),
                    C1.pur_delivery_buffer_days, coalesce(C1.shipment_tracking_appl,'N'),
                    coalesce(C1.bale_wise_lrqty,'N'), coalesce(C1.pur_duedays,365), C1.cinno
                   -- START REV : 001
                    ,coalesce(C1.CREDIT_VERIFICATION_RULE,'N'),
                    C1.CREDIT_LIMIT_TOLERANCE,
                    C1.MAX_CREDIT_OVERDUE_DAYS,
                    C1.CREDIT_OVERDUE_LIMIT
                    -- END REV : 001
                    -- start rev : 005
                    ,coalesce(C1.gst_category_code,v_cp_category_code)
                   ,upper(C1.gst_identification_no)
                   ,C1.gst_registration_date
                   ,(substr(C1.gst_identification_no,1,2))
                    -- end rev : 005
                   -- START REV : 007
                   ,C1.PO_ORDER_LIMIT
                   -- END REV : 007
				, C1.transporter_id
                    );
         END IF;

       -- END REV : 010
      END  LOOP;

      -- log to be added in history table
      SELECT nextval('int$error_log_code')
        INTO STRICT vsession
;

      vdetailtbl :=
            -- start rev : 003
            --'create table slimport_'
            'create table ginarchive.slimport_'
            -- end rev : 003
         || vsession::text
         || ' as select distinct slname,abbre,SLID from int$stg_suplierimport where userid ='
         || p_userid::text;

      EXECUTE vdetailtbl;

      -- start rev : 003
      --vdetailrec := 'select count(1) from slimport_' || vsession;
      vdetailrec := 'select count(1) from ginarchive.slimport_' || vsession::text;
      -- end rev : 003
      EXECUTE vdetailrec
                   INTO STRICT vcount;

      INSERT INTO int$history(code, importedby, importedon, classname,
                   summary,
                   history_detail_tablename, history_detail_row_count
                  )
           VALUES (nextval('int$history_code'), p_userid, clock_timestamp(), 'SUPLIERIMPORT',
                   vcount::text || ' Data updated successfully.',
                   -- start rev : 003
                   --'slimport_' || vsession, vcount
                   'ginarchive.slimport_' || vsession::text, vcount::text
                   -- end rev : 003
                  );

     -- COMMIT;
      RETURN('1');
   EXCEPTION
      WHEN OTHERS
      THEN
         errcode := SQLSTATE;
         errmsg := SQLERRM;

         -- error log for oracle internal error
         INSERT INTO int$error_log(code, lineno, classname, userid,
                      errortype, errordesc, createdon
                     )
              VALUES (nextval('int$error_log_code'), 0, 'SUPLIERIMPORT', p_userid,
                      errcode, errmsg, clock_timestamp()
                     );

         RETURN('0');
   END;

   -- Clear Store Franchise Consignment Sale
"""
  returnType = character
  arguments = <
    {
      name = p_userid
      type = bigint
      mode = IN
    }

    {
      name = p_connect_site
      type = bigint
      mode = IN
    }

    {
      name = p_logging_date
      type = timestamp without time zone
      mode = IN
    }

    {
      name = p_connect_ou
      type = bigint
      mode = IN
    }

  >
  language = plpgsql
}

function "main"."int$pkg_suplierimport_int$pkg_suplierimport_process(bigint, bigint, timestamp without time zone, bigint)" {
  text = """

DECLARE
	-- Change this to reflect the dblink connection string
	--v_conn_str  text := format('port=%s dbname=%s user=%s', current_setting('port'), current_database(), current_user);
    v_srvname       name;
    v_connname      text;
    v_connstr       text;
    v_conn_result   text;
    v_query         text;

	v_ret    text;
BEGIN

    v_srvname := 'foreign_pgbase';
    v_connname := replace(uuid_generate_v4()::text,'-','');
    v_connstr  := v_srvname;
    
    --Open the connection  
    SELECT dblink_connect(v_connname,v_connstr) 
    INTO v_conn_result;
	
	v_query := 'SELECT * FROM int$pkg_suplierimport_int$pkg_suplierimport_process_atx ( ' || quote_nullable(p_userid::text) || '::bigint,' || quote_nullable(p_connect_site::text) || '::bigint,' || quote_nullable(p_logging_date::text) || '::timestamp without time zone,' || quote_nullable(p_connect_ou::text) || '::bigint )';
	SELECT * INTO v_ret FROM dblink(v_connname, v_query) AS p (ret text);

					  
    SELECT dblink_disconnect(v_connname) 
    INTO v_conn_result;
	
	RETURN v_ret;
EXCEPTION 
   WHEN OTHERS THEN
        SELECT dblink_disconnect(v_connname) 
        INTO v_conn_result;

END;
"""
  returnType = character
  arguments = <
    {
      name = p_userid
      type = bigint
      mode = IN
    }

    {
      name = p_connect_site
      type = bigint
      mode = IN
    }

    {
      name = p_logging_date
      type = timestamp without time zone
      mode = IN
    }

    {
      name = p_connect_ou
      type = bigint
      mode = IN
    }

  >
  language = plpgsql
}

