function "main"."trigger_fct_t_invpicklistconfirmcnl()" {
  text = """

DECLARE
   V_TYPE           varchar(100);
   V_DETAIL_CODE    INVSTOCK.DETAIL_CODE%TYPE;
   V_ENTCODE        INVSTOCK.ENTCODE%TYPE;
   V_ENTDT          INVSTOCK.ENTDT%TYPE;
   V_ENTTYPE        INVSTOCK.ENTTYPE%TYPE;
   V_YCODE          INVSTOCK.YCODE%TYPE;
   V_NEW_ICODE      INVSTOCK.ICODE%TYPE;
   V_OLD_ICODE      INVSTOCK.ICODE%TYPE;
   V_NEW_QTY        INVSTOCK.QTY%TYPE;
   V_OLD_QTY        INVSTOCK.QTY%TYPE;
   V_SCHEME_DOCNO   INVPICKLISTMAIN.SCHEME_DOCNO%TYPE;
   -- start rev : 001
  -- V_REMARKS        INVPICKLISTMAIN.SCHEME_DOCNO%TYPE;
   V_REMARKS        INVPICKLISTMAIN.remarks%TYPE;
   -- end rev : 001
   V_ADMSITE_CODE   INVSTOCK.ADMSITE_CODE%TYPE;
   V_INVBIN_CODE    INVSTOCK.INVBIN_CODE%TYPE;
   V_RESERVE_QTY    INVSTOCK.RESERVE_QTY%TYPE;

BEGIN
    /*******************************************************************************************************************
      REV NO      DATE           OWNER            DESCRIPTION
      ---------   -----------    -----------      ---------------------------------------------------------------------
      REV : 001   02-AUG-2022    PRASANTA         (Bug Id : 8504) While cancelling Stock Reservation for Confirmed Pick List, 
                                                                     system was throwing a trigger related error..
    *******************************************************************************************************************/
   V_TYPE := 'INSERTING';

   SELECT I.CODE  ENTCODE,
          I.ENTDT ENTDT,
          'WTO'   ENTTYPE,
          I.YCODE YCODE,
          I.SCHEME_DOCNO,
          I.REMARKS
     INTO STRICT V_ENTCODE,
          V_ENTDT,
          V_ENTTYPE,
          V_YCODE,
          V_SCHEME_DOCNO,
          V_REMARKS
     FROM INVPICKLISTMAIN I
    WHERE I.CODE = coalesce(NEW.INVPICKLISTMAIN_CODE, OLD.INVPICKLISTMAIN_CODE);

   V_DETAIL_CODE := coalesce(NEW.CODE, OLD.CODE);
   V_NEW_ICODE := NEW.ICODE;
   V_OLD_ICODE := OLD.ICODE;
   V_NEW_QTY := NEW.QTY;
   V_OLD_QTY := NULL;
   V_INVBIN_CODE := 999999999;
   V_RESERVE_QTY := (-1) * NEW.QTY;
   V_ADMSITE_CODE := NEW.ADMSITE_CODE;

   CALL DB_PKG_STOCK$REFLECT(V_DETAIL_CODE,
                         V_TYPE,
                         V_ENTCODE,
                         NULL,
                         V_ENTDT,
                         V_ENTTYPE,
                         NEW.LOCCODE,
                         V_YCODE,
                         V_NEW_ICODE,
                         V_OLD_ICODE,
                         V_NEW_QTY,
                         V_OLD_QTY,
                         NULL,
                         NULL,
                         NULL,
                         NULL,
                         NULL,
                         NULL,
                         NULL,
                         NULL,
                         NULL,
                         NULL,
                         NULL,
                         NULL,
                         V_SCHEME_DOCNO,
                         'PRO',
                         NULL,
                         V_REMARKS,
                         V_ADMSITE_CODE,
                         NULL,
                         NULL,
                         NULL,
                         NULL,
                         NULL,
                         NULL,
                         NULL,
                         NULL,
                         NULL,
                         NULL,
                         NULL,
                         NULL,
                         NULL,
                         V_INVBIN_CODE,
                         V_RESERVE_QTY,
                         NULL,
                         NULL,
                         NULL,
                         NULL,
                         NULL,
                         NULL,
                         NULL,
                         coalesce(NEW.INVBATCH_SERIAL_CODE, OLD.INVBATCH_SERIAL_CODE)
                         );
   V_ENTTYPE := 'WTI';
   V_INVBIN_CODE := NULL;

   CALL DB_PKG_STOCK$REFLECT(V_DETAIL_CODE,
                         V_TYPE,
                         V_ENTCODE,
                         NULL,
                         V_ENTDT,
                         V_ENTTYPE,
                         NEW.LOCCODE,
                         V_YCODE,
                         V_NEW_ICODE,
                         V_OLD_ICODE,
                         V_NEW_QTY,
                         V_OLD_QTY,
                         NULL,
                         NULL,
                         NULL,
                         NULL,
                         NULL,
                         NULL,
                         NULL,
                         NULL,
                         NULL,
                         NULL,
                         NULL,
                         NULL,
                         V_SCHEME_DOCNO,
                         'PRI',
                         NULL,
                         V_REMARKS,
                         V_ADMSITE_CODE,
                         NULL,
                         NULL,
                         NULL,
                         NULL,
                         NULL,
                         NULL,
                         NULL,
                         NULL,
                         NULL,
                         NULL,
                         NULL,
                         NULL,
                         NULL,
                         NEW.INVBIN_CODE,
                         NEW.QTY,
                         NULL,
                         NULL,
                         NULL,
                         NULL,
                         NULL,
                         NULL,
                         NULL,
                         coalesce(NEW.INVBATCH_SERIAL_CODE, OLD.INVBATCH_SERIAL_CODE)
                          );


RETURN NEW;
END
"""
  returnType = trigger
  arguments = [
  ]
  language = plpgsql
}

