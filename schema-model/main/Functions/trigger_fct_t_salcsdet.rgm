function "main"."trigger_fct_t_salcsdet()" {
  text = """

DECLARE
   V_TYPE           varchar(100);
   V_DETAIL_CODE    INVSTOCK.DETAIL_CODE%TYPE;
   V_ENTCODE        INVSTOCK.ENTCODE%TYPE;
   V_ENTNO          INVSTOCK.ENTNO%TYPE;
   V_ENTDT          INVSTOCK.ENTDT%TYPE;
   V_ENTTYPE        INVSTOCK.ENTTYPE%TYPE;
   V_LOCCODE        INVSTOCK.LOCCODE%TYPE;
   V_YCODE          INVSTOCK.YCODE%TYPE;
   V_NEW_ICODE      INVSTOCK.ICODE%TYPE;
   V_OLD_ICODE      INVSTOCK.ICODE%TYPE;
   V_NEW_QTY        INVSTOCK.QTY%TYPE;
   V_OLD_QTY        INVSTOCK.QTY%TYPE;
   V_NEW_RATE       INVSTOCK.RATE%TYPE;
   V_OLD_RATE       INVSTOCK.RATE%TYPE;
   V_REFPCODE       INVSTOCK.REFPCODE%TYPE;
   V_REFLOCCODE     INVSTOCK.REFLOCCODE%TYPE;
   V_REFCMPCODE     INVSTOCK.REFCMPCODE%TYPE;
   V_REFGLCODE      INVSTOCK.REFGLCODE%TYPE;
   V_REFDEPTCODE    INVSTOCK.REFDEPTCODE%TYPE;
   V_REFPRCODE      INVSTOCK.REFPRCODE%TYPE;
   V_REFDOCNO       INVSTOCK.REFDOCNO%TYPE;
   V_REFPKGCODE     INVSTOCK.REFPKGCODE%TYPE;
   V_REFDCCODE      INVSTOCK.REFDCCODE%TYPE;
   V_OTHER_RATE     INVSTOCK.COSTRATE%TYPE;
   --V_TEMP_LOC     INVSTOCK.REFLOCCODE%TYPE;
   V_SCHEME_DOCNO   SALCSMAIN.SCHEME_DOCNO%TYPE;
   V_SUBENTTYPE     INVSTOCK.SUBENTTYPE%TYPE := 'CS';
   V_STATUS         char(1);
   V_ADMSITE_CODE   SALCSMAIN.ADMSITE_CODE%TYPE;
   -- START REV : 001
   V_CHANNELTYPE    SALCSMAIN.CHANNELTYPE%TYPE;
   -- END REV : 001
   -- START REV : 004
   V_RESERVE_QTY    INVSTOCK.RESERVE_QTY%TYPE;
-- END REV : 004
-- START REV : 008
   V_SALE_LOCCODE      INVSTOCK.LOCCODE%TYPE;
   V_RETURN_LOCCODE    INVSTOCK.LOCCODE%TYPE;
   V_DAMAGED_LOCCODE   INVSTOCK.LOCCODE%TYPE;
-- END REV : 008
 /*******************************************************************************************************************
   No.                Date                  Author                   Description
   ---------        ----------          ----------------------   ------------------------------------------------------------------
   REV : 001        ANINDYA             18-MAY-2016    (TFS : 15889) Retail sale related changes
   REV : 002        DIPTIMAN            14-NOV-2017    (TFS ID : 32259) COGS costrate related changes.
   REV : 003        MOUSUMI             30-MAR-2018    (TFS ID : 38829) Auto settlement.
   REV : 004        MANASH              02-AUG-2021    (MNTS ID : 1079) Stock Report is showing wrong while Online Sale is pushed.
   REV : 005        PRASANTA            25-AUG-2021    (MANTIS ID : 0001147) The tax amount of ETL channeltype document is not coming in INVSTOCK table

   REV : 006        SIDDHARTHA          17-11-2021     (TFS ID : XXXXX) Packing Bin Introduction
   REV : 007        ANINDYA             01-03-2022     (TFS ID : OMS)   Adoc Retail Sale public API related changes
   REV : 008        ANINDYA             18-04-2022     (TFS ID : OMS)   Multiple HO-Stockpoint (LOCODE) introduction in a single invoice.
                                                                        Different LOCCODE for Sale, Return and Damage-Return
   REV : 009        ANINDYA             28-10-2022     (TFS ID : Batch Serial)   Batch Serial related impact in stock posting.                                                                         
*********************************************************************************************************************/
BEGIN
  BEGIN
   SELECT CSNO         ENTNO,
          CSDATE       ENTDT,
          'SAL'        ENTTYPE,
          YCODE        YCODE,
          -- START REV : 008
          --OUTLOCCODE   OUTLOCCODE,
          OUTLOCCODE   SALE_LOCCODE,
          RETURN_LOCCODE   RETURN_LOCCODE,
          DAMAGED_LOCCODE  DAMAGE_LOCCODE,
          -- END REV : 008 
          PCODE        PCODE,
          NULL         REFLOCCODE,
          NULL         REFCMPCODE,
          NULL         REFGLCODE,
          NULL         REFDEPTCODE,
          NULL         REFPRCODE,
          NULL         REFDOCNO,
          NULL         REFPKGCODE,
          SCHEME_DOCNO SCHEME_DOCNO,
          NULL         STATUS,
          ADMSITE_CODE,
          -- START REV : 001
          CHANNELTYPE
     -- END REV : 001
     INTO STRICT V_ENTNO,
          V_ENTDT,
          V_ENTTYPE,
          V_YCODE,
          -- START REV : 008
          --V_LOCCODE,
          V_SALE_LOCCODE,
          V_RETURN_LOCCODE,
          V_DAMAGED_LOCCODE,
          -- END REV : 008
          V_REFPCODE,
          V_REFLOCCODE,
          V_REFCMPCODE,
          V_REFGLCODE,
          V_REFDEPTCODE,
          V_REFPRCODE,
          V_REFDOCNO,
          V_REFPKGCODE,
          V_SCHEME_DOCNO,
          V_STATUS,
          V_ADMSITE_CODE,
          -- START REV : 001
          V_CHANNELTYPE
     -- END REV : 001
     FROM SALCSMAIN
    WHERE CSCODE = coalesce(NEW.CSCODE, OLD.CSCODE);

   V_DETAIL_CODE := coalesce(NEW.CODE, OLD.CODE);

   V_ENTCODE := coalesce(NEW.CSCODE, OLD.CSCODE);


   V_NEW_ICODE := NEW.ICODE;
   V_OLD_ICODE := OLD.ICODE;

   V_NEW_QTY := NEW.QTY;
   V_OLD_QTY := OLD.QTY;

   V_NEW_RATE := round((NEW.NETAMT / NEW.QTY)::numeric, 3);
   V_OLD_RATE := round((OLD.NETAMT / OLD.QTY)::numeric, 3);

   IF TG_OP = 'INSERT'
   THEN
      V_TYPE := 'INSERTING';
   END IF;

   IF TG_OP = 'UPDATE'
   THEN
      V_TYPE := 'UPDATING';
   END IF;

   IF TG_OP = 'DELETE'
   THEN
      V_TYPE := 'DELETING';
   END IF;

   --FOR STIOCK OUT
 -- START REV : 004
   IF NEW.INVBIN_CODE IS NOT NULL THEN
        V_RESERVE_QTY := (-1) * coalesce(V_NEW_QTY,V_OLD_QTY);
   END IF;
 -- END REV : 004
 
 -- START REV : 008
    IF coalesce(NEW.QTY,OLD.QTY) >  0
    THEN
       V_LOCCODE := V_SALE_LOCCODE;
    ELSIF
       coalesce(NEW.QTY,OLD.QTY) <  0 AND  coalesce(coalesce(NEW.ISDAMAGED,0),coalesce(OLD.ISDAMAGED,0)) = 0
    THEN
        V_LOCCODE := V_RETURN_LOCCODE;
    ELSIF
        coalesce(NEW.QTY,OLD.QTY) <  0 AND  coalesce(coalesce(NEW.ISDAMAGED,0),coalesce(OLD.ISDAMAGED,0)) = 1
    THEN
        V_LOCCODE := V_DAMAGED_LOCCODE;
    END IF;
 -- END REV : 008
   CALL Db_Pkg_Stock$REFLECT(V_DETAIL_CODE,
                         V_TYPE,
                         V_ENTCODE,
                         V_ENTNO,
                         V_ENTDT,
                         V_ENTTYPE,
                         V_LOCCODE,
                         V_YCODE,
                         V_NEW_ICODE,
                         V_OLD_ICODE,
                         V_NEW_QTY,
                         V_OLD_QTY,
                         V_NEW_RATE,
                         V_OLD_RATE,
                         V_REFPCODE,
                         V_REFLOCCODE,
                         V_REFCMPCODE,
                         V_REFGLCODE,
                         V_REFDEPTCODE,
                         V_REFPRCODE,
                         V_REFDOCNO,
                         V_REFPKGCODE,
                         V_REFDCCODE,
                         V_OTHER_RATE,
                         V_SCHEME_DOCNO,
                         V_SUBENTTYPE,
                         NULL,
                         NEW.REMARKS,
                         V_ADMSITE_CODE,
                         NULL,
                         'N',
                         NEW.SITE_COSTRATE,
                         NULL,
                         NEW.PSITE_STOCKPOINT_CODE,
                         P_PROMOAMT         => NEW.PROMOAMT,
                         P_DISCOUNTAMT      => NEW.DISCOUNT,
                         P_EXTAXAMT         => NEW.EXTAXAMT,
                         P_TAXAMT           => NEW.TAXAMT,
                         -- START REV : 001
                         P_CHANNELTYPE      => V_CHANNELTYPE,
                         P_SHIPCHG          => NEW.SHIPCHG,
                         P_CODCHG           => NEW.CODCHG,
                         P_GWCHG            => NEW.GWCHG,
                         -- END REV : 001
                         -- START REV : 004
                         P_INVBIN_CODE      => NEW.INVBIN_CODE,
                         P_RESERVE_QTY      => V_RESERVE_QTY,
                         -- END REV : 004
                         -- START REV : 002
                         P_COSTRATE         => NEW.COSTRATE,
                         -- END REV : 002
                        -- START REV : 003
                         P_PROMOCODE        => NEW.PROMOCODE,
                         P_PROMONO          => NEW.PROMONO,
                         P_PROMONAME        => NEW.PROMONAME,
                         P_PROMOSTARTDATE   => NEW.PROMOSTARTDATE,
                         P_PROMOENDDATE     => NEW.PROMOENDDATE,
                         -- END REV : 003
                         -- START REV : 009
                         P_BATCH_SERIAL_CODE => NEW.INVBATCH_SERIAL_CODE
                         -- END REV : 009
                         );
EXCEPTION
   WHEN OTHERS
   THEN
      CALL ERRAUDIT(USER,
                'T_SALCSDET',
                SQLSTATE::varchar,
                SQLERRM);
      RAISE EXCEPTION '%', 'ERROR ENCOUNTERED' || SQLSTATE::varchar || '-' || SQLERRM USING ERRCODE = '45001';
  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
"""
  returnType = trigger
  arguments = [
  ]
  language = plpgsql
}

