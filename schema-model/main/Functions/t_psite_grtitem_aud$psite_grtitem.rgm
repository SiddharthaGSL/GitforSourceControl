function "main"."t_psite_grtitem_aud$psite_grtitem()" {
  text = """

DECLARE
    V_RECORD_OLD AUD_PSITE_GRTITEM%ROWTYPE;
	V_RECORD_NEW AUD_PSITE_GRTITEM%ROWTYPE;
    V_SID DOUBLE PRECISION;
    V_TRNID CHARACTER VARYING(50);
    V_ACTION CHARACTER VARYING(10);
    I RECORD;    
	V_AUDIT_USER CHARACTER VARYING (100);
	V_LOGINUSER  CHARACTER VARYING (100);
	V_PROGRAM    CHARACTER VARYING (100);
	V_REC_COUNT  BIGINT; 
   
BEGIN
       SELECT current_setting('audit.AUDIT_USER', true) INTO V_AUDIT_USER;
	   IF NULLIF(V_AUDIT_USER,'') IS NOT NULL THEN  
		   BEGIN
				SELECT FULLNAME
				INTO   STRICT V_LOGINUSER
				FROM   APPUSER
				WHERE  ID =  substring (V_AUDIT_USER,8,position(';' in V_AUDIT_USER)-8)::NUMERIC; 
		   EXCEPTION
				WHEN no_data_found
				THEN
					V_LOGINUSER := 'System';
			END;			
		ELSE
			V_LOGINUSER := 'SYSTEM';
		END IF;
	   
	   select application_name
	   INTO   V_PROGRAM
	   from pg_stat_activity where pid = pg_backend_pid();

       V_ACTION:=TG_OP;
	   
       SELECT TXID_CURRENT() INTO V_TRNID;
       
        IF TG_OP = 'INSERT' OR  TG_OP = 'UPDATE' THEN 
	   
           V_RECORD_NEW.ACTION := V_ACTION;
           V_RECORD_NEW.ACTION_SUBTYPE := 'NEW';
           V_RECORD_NEW.TRANSACTION_ID := V_TRNID::TEXT;		   
		   V_RECORD_NEW.code := NEW.code;
            V_RECORD_NEW.psite_grt_code := NEW.psite_grt_code;
            V_RECORD_NEW.icode := NEW.icode;
            V_RECORD_NEW.rtqty := NEW.rtqty;
            V_RECORD_NEW.rtrate := NEW.rtrate;
            V_RECORD_NEW.basicamt := NEW.basicamt;
            V_RECORD_NEW.lchgamt := NEW.lchgamt;
            V_RECORD_NEW.grsamt := NEW.grsamt;
            V_RECORD_NEW.lremarks := NEW.lremarks;
            V_RECORD_NEW.admsite_code := NEW.admsite_code;
            V_RECORD_NEW.ltaxamt := NEW.ltaxamt;
            V_RECORD_NEW.packetdocid := NEW.packetdocid;
            V_RECORD_NEW.packetitemid := NEW.packetitemid;
            V_RECORD_NEW.packetno := NEW.packetno;
            V_RECORD_NEW.packetdate := NEW.packetdate;
            V_RECORD_NEW.costrate := NEW.costrate;
            V_RECORD_NEW.site_costrate := NEW.site_costrate;
            V_RECORD_NEW.dup_packetdocid := NEW.dup_packetdocid;
            V_RECORD_NEW.dup_packetitemid := NEW.dup_packetitemid;
            V_RECORD_NEW.itemratesource := NEW.itemratesource;
            V_RECORD_NEW.basicprice := NEW.basicprice;
            V_RECORD_NEW.discountfactor := NEW.discountfactor;
            V_RECORD_NEW.discountamt := NEW.discountamt;
            V_RECORD_NEW.roundoff := NEW.roundoff;
            V_RECORD_NEW.salorddet_code := NEW.salorddet_code;
            V_RECORD_NEW.hsn_sac_code := NEW.hsn_sac_code;
            V_RECORD_NEW.ref_family_code := NEW.ref_family_code;
            V_RECORD_NEW.gl_cc_appl := NEW.gl_cc_appl;
            V_RECORD_NEW.glcode := NEW.glcode;
            V_RECORD_NEW.slcode := NEW.slcode;
            V_RECORD_NEW.intgrefdetid := NEW.intgrefdetid;
            V_RECORD_NEW.invbatch_serial_code := NEW.invbatch_serial_code;
          END IF;  
            
         IF TG_OP = 'UPDATE' OR TG_OP = 'DELETE' THEN 
	   
            V_RECORD_OLD.ACTION := V_ACTION;
            V_RECORD_OLD.ACTION_SUBTYPE := 'OLD';
            V_RECORD_OLD.TRANSACTION_ID := V_TRNID::TEXT;			
			V_RECORD_OLD.code := OLD.code;
            V_RECORD_OLD.psite_grt_code := OLD.psite_grt_code;
            V_RECORD_OLD.icode := OLD.icode;
            V_RECORD_OLD.rtqty := OLD.rtqty;
            V_RECORD_OLD.rtrate := OLD.rtrate;
            V_RECORD_OLD.basicamt := OLD.basicamt;
            V_RECORD_OLD.lchgamt := OLD.lchgamt;
            V_RECORD_OLD.grsamt := OLD.grsamt;
            V_RECORD_OLD.lremarks := OLD.lremarks;
            V_RECORD_OLD.admsite_code := OLD.admsite_code;
            V_RECORD_OLD.ltaxamt := OLD.ltaxamt;
            V_RECORD_OLD.packetdocid := OLD.packetdocid;
            V_RECORD_OLD.packetitemid := OLD.packetitemid;
            V_RECORD_OLD.packetno := OLD.packetno;
            V_RECORD_OLD.packetdate := OLD.packetdate;
            V_RECORD_OLD.costrate := OLD.costrate;
            V_RECORD_OLD.site_costrate := OLD.site_costrate;
            V_RECORD_OLD.dup_packetdocid := OLD.dup_packetdocid;
            V_RECORD_OLD.dup_packetitemid := OLD.dup_packetitemid;
            V_RECORD_OLD.itemratesource := OLD.itemratesource;
            V_RECORD_OLD.basicprice := OLD.basicprice;
            V_RECORD_OLD.discountfactor := OLD.discountfactor;
            V_RECORD_OLD.discountamt := OLD.discountamt;
            V_RECORD_OLD.roundoff := OLD.roundoff;
            V_RECORD_OLD.salorddet_code := OLD.salorddet_code;
            V_RECORD_OLD.hsn_sac_code := OLD.hsn_sac_code;
            V_RECORD_OLD.ref_family_code := OLD.ref_family_code;
            V_RECORD_OLD.gl_cc_appl := OLD.gl_cc_appl;
            V_RECORD_OLD.glcode := OLD.glcode;
            V_RECORD_OLD.slcode := OLD.slcode;
            V_RECORD_OLD.intgrefdetid := OLD.intgrefdetid;
            V_RECORD_OLD.invbatch_serial_code := OLD.invbatch_serial_code;
          END IF;  

    IF TG_OP = 'INSERT' THEN
	    V_REC_COUNT := 1;
        INSERT INTO AUD_PSITE_GRTITEM SELECT V_RECORD_NEW.*;
    END IF;

    IF TG_OP = 'UPDATE' THEN
	FOR I IN (
		SELECT 
		V_RECORD_OLD.code,
                  V_RECORD_OLD.psite_grt_code,
                  V_RECORD_OLD.icode,
                  V_RECORD_OLD.rtqty,
                  V_RECORD_OLD.rtrate,
                  V_RECORD_OLD.basicamt,
                  V_RECORD_OLD.lchgamt,
                  V_RECORD_OLD.grsamt,
                  V_RECORD_OLD.lremarks,
                  V_RECORD_OLD.admsite_code,
                  V_RECORD_OLD.ltaxamt,
                  V_RECORD_OLD.packetdocid,
                  V_RECORD_OLD.packetitemid,
                  V_RECORD_OLD.packetno,
                  V_RECORD_OLD.packetdate,
                  V_RECORD_OLD.costrate,
                  V_RECORD_OLD.site_costrate,
                  V_RECORD_OLD.dup_packetdocid,
                  V_RECORD_OLD.dup_packetitemid,
                  V_RECORD_OLD.itemratesource,
                  V_RECORD_OLD.basicprice,
                  V_RECORD_OLD.discountfactor,
                  V_RECORD_OLD.discountamt,
                  V_RECORD_OLD.roundoff,
                  V_RECORD_OLD.salorddet_code,
                  V_RECORD_OLD.hsn_sac_code,
                  V_RECORD_OLD.ref_family_code,
                  V_RECORD_OLD.gl_cc_appl,
                  V_RECORD_OLD.glcode,
                  V_RECORD_OLD.slcode,
                  V_RECORD_OLD.intgrefdetid,
                  V_RECORD_OLD.invbatch_serial_code
		EXCEPT
		SELECT 
		V_RECORD_NEW.code,
                  V_RECORD_NEW.psite_grt_code,
                  V_RECORD_NEW.icode,
                  V_RECORD_NEW.rtqty,
                  V_RECORD_NEW.rtrate,
                  V_RECORD_NEW.basicamt,
                  V_RECORD_NEW.lchgamt,
                  V_RECORD_NEW.grsamt,
                  V_RECORD_NEW.lremarks,
                  V_RECORD_NEW.admsite_code,
                  V_RECORD_NEW.ltaxamt,
                  V_RECORD_NEW.packetdocid,
                  V_RECORD_NEW.packetitemid,
                  V_RECORD_NEW.packetno,
                  V_RECORD_NEW.packetdate,
                  V_RECORD_NEW.costrate,
                  V_RECORD_NEW.site_costrate,
                  V_RECORD_NEW.dup_packetdocid,
                  V_RECORD_NEW.dup_packetitemid,
                  V_RECORD_NEW.itemratesource,
                  V_RECORD_NEW.basicprice,
                  V_RECORD_NEW.discountfactor,
                  V_RECORD_NEW.discountamt,
                  V_RECORD_NEW.roundoff,
                  V_RECORD_NEW.salorddet_code,
                  V_RECORD_NEW.hsn_sac_code,
                  V_RECORD_NEW.ref_family_code,
                  V_RECORD_NEW.gl_cc_appl,
                  V_RECORD_NEW.glcode,
                  V_RECORD_NEW.slcode,
                  V_RECORD_NEW.intgrefdetid,
                  V_RECORD_NEW.invbatch_serial_code
			 )
	LOOP
	  V_REC_COUNT := 1; 
		INSERT INTO AUD_PSITE_GRTITEM SELECT V_RECORD_OLD.*;
       INSERT INTO AUD_PSITE_GRTITEM SELECT V_RECORD_NEW.*;    
	END LOOP;   
    END IF;

    IF TG_OP = 'DELETE' THEN
		V_REC_COUNT := 1;
		INSERT INTO AUD_PSITE_GRTITEM SELECT V_RECORD_OLD.*;
    END IF;
	
	IF V_REC_COUNT >  0
	THEN
	   BEGIN
            INSERT INTO AUD_TRANSACTION (TRANSACTION_ID, TRANSACTION_DATE, LOGIN_USER, PROGRAM, MODULE_SHORTCODE, MODULE_TYPE)
            VALUES (V_TRNID,   current_date,V_LOGINUSER, V_PROGRAM, 'POS GRT', 'POS GRT');
       EXCEPTION WHEN unique_violation THEN
            NULL;
       END;  

       BEGIN  
             INSERT INTO AUD_TRANSACTION_TABLE (TRANSACTION_ID, TABLE_NAME)
             VALUES (V_TRNID,  'PSITE_GRTITEM');
       EXCEPTION WHEN unique_violation THEN
             NULL;
       END; 
	END IF;   
    

    IF TG_OP = 'INSERT' THEN
        RETURN NEW;
    ELSIF TG_OP = 'UPDATE' THEN
        RETURN NEW;
    ELSIF TG_OP = 'DELETE' THEN
        RETURN OLD;
    END IF;
    EXCEPTION
        WHEN others THEN
            CALL main.erraudit(SESSION_USER::text, 'T_PSITE_GRTITEM_AUD'::CHARACTER, SQLSTATE::text, SQLERRM);
			RAISE;
			RETURN NULL;
END;
"""
  returnType = trigger
  arguments = [
  ]
  language = plpgsql
}

